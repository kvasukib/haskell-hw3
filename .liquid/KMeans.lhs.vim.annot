84:1-84:9::distance :: "x1:{v : Int | v >= 0} -> {v : (List Double) | size v == x1} -> {v : (List Double) | size v == x1} -> Double"
84:10-84:11::n :: "{v : Int | v >= 0}"
84:12-84:14::px :: "{v : (List Double) | size v == n}"
84:15-84:17::py :: "{v : (List Double) | size v == n}"
84:20-84:24::lq_anf$ :: "Double -> Double"
84:27-84:36::_ :: "Double -> (List Double) -> Double"
84:33-84:36::lq_anf$ :: "x1:Double -> x2:Double -> {v : Double | v == x1 + x2}"
84:37-84:38::lq_anf$ :: "{v : Double | v == 0.0}"
84:41-84:68::lq_anf$ :: "Double -> Double -> Double"
84:51-84:52::x :: "Double"
84:53-84:54::y :: "Double"
84:58-84:61::lq_anf$ :: "Double"
84:59-84:60::_ :: "Double -> Integer -> Double"
84:62-84:63::_ :: "x1:Double -> x2:Double -> {v : Double | v == x1 - x2}"
84:64-84:67::lq_anf$ :: "Double"
84:65-84:66::_ :: "Double -> Integer -> Double"
95:1-95:8::nearest :: "x1:{v : Int | v >= 0} -> x2:{v : Int | v >= 0} -> (Map {v : Int | 0 <= v\n                                                                  && v < x1} {v : (List Double) | size v == x2}) -> {v : (List Double) | size v == x2} -> {v : Int | 0 <= v\n                                                                                                                                                                     && v < x1}"
95:9-95:10::k :: "{v : Int | v >= 0}"
95:11-95:12::n :: "{v : Int | v >= 0}"
95:13-95:20::centers :: "(Map {v : Int | 0 <= v\n                && v < k} {v : (List Double) | size v == n})"
95:21-95:22::p :: "{v : (List Double) | size v == n}"
95:25-95:34::lq_anf$ :: "(Map {v : Int | v /= k\n                && v <= k\n                && v < k\n                && 0 <= v\n                && v >= 0} Double) -> {v : Int | v /= k\n                                                 && v <= k\n                                                 && v < k\n                                                 && 0 <= v\n                                                 && v >= 0}"
95:37-95:65::lq_anf$ :: "{VV : (List Double) | size VV == n} -> Double"
95:45-95:46::x :: "{VV : (List Double) | size VV == n}"
95:50-95:58::_ :: "{v : x1:{v : Int | v >= 0} -> {v : (List Double) | size v == x1} -> {v : (List Double) | size v == x1} -> Double | v == KMeans.distance}"
105:1-105:10::minKeyMap :: "(Ord b) => (Map a b) -> a"
105:14-105:24::lq_anf$ :: "{v : [(a, b)] | len v >= 0} -> a"
108:1-108:11::minKeyList :: "(Ord b) => {VV : [(a, b)] | len VV >= 0} -> a"
108:12-108:14::xs :: "{VV : [(a, b)] | len VV >= 0}"
108:17-108:73::lq_anf$ :: "(a, b) -> a"
108:23-108:32::_ :: "((a, b) -> (a, b) -> Ordering) -> [(a, b)] -> (a, b)"
108:35-108:37::x1 :: "(a, b)"
108:38-108:40::x2 :: "(a, b)"
108:44-108:51::_ :: "x1:a -> x2:a -> {v : Ordering | (v == GHC.Types.EQ <=> x1 == x2)\n                                && (v == GHC.Types.LT <=> x1 < x2)\n                                && (v == GHC.Types.GT <=> x1 > x2)}"
108:53-108:59::lq_anf$ :: "a"
108:62-108:68::lq_anf$ :: "a"
117:1-117:13::test_nearest :: "{VV : Int | 0 <= VV\n            && VV >= 0}"
117:16-117:23::_ :: "{v : x1:{v : Int | v >= 0} -> x2:{v : Int | v >= 0} -> (Map {v : Int | 0 <= v\n                                                                       && v < x1} {v : (List Double) | size v == x2}) -> {v : (List Double) | size v == x2} -> {v : Int | 0 <= v\n                                                                                                                                                                          && v < x1} | v == KMeans.nearest}"
117:29-117:39::_ :: "[({v : Int | 0 <= v\n             && v >= 0}, (List Double))] -> (Map {v : Int | 0 <= v\n                                                            && v >= 0} (List Double))"
120:5-120:7::p0 :: "(List Double)"
120:10-120:17::_ :: "x1:(List Double) -> {v : (List Double) | size v == 1 + size x1}"
120:14-120:17::lq_anf$ :: "{v : Double | v == 0.0}"
120:19-120:26::_ :: "x1:(List Double) -> {v : (List Double) | size v == 1 + size x1}"
120:23-120:26::lq_anf$ :: "{v : Double | v == 0.0}"
121:5-121:7::p1 :: "(List Double)"
121:10-121:17::_ :: "x1:(List Double) -> {v : (List Double) | size v == 1 + size x1}"
121:14-121:17::lq_anf$ :: "{v : Double | v == 3.0}"
121:19-121:26::_ :: "x1:(List Double) -> {v : (List Double) | size v == 1 + size x1}"
121:23-121:26::lq_anf$ :: "{v : Double | v == 0.0}"
122:5-122:7::p2 :: "(List Double)"
122:10-122:17::_ :: "x1:(List Double) -> {v : (List Double) | size v == 1 + size x1}"
122:14-122:17::lq_anf$ :: "{v : Double | v == 0.0}"
122:19-122:26::_ :: "x1:(List Double) -> {v : (List Double) | size v == 1 + size x1}"
122:23-122:26::lq_anf$ :: "{v : Double | v == 3.0}"
123:5-123:6::p :: "(List Double)"
123:10-123:17::_ :: "x1:(List Double) -> {v : (List Double) | size v == 1 + size x1}"
123:14-123:17::lq_anf$ :: "{v : Double | v == 2.9}"
123:19-123:26::_ :: "x1:(List Double) -> {v : (List Double) | size v == 1 + size x1}"
123:23-123:26::lq_anf$ :: "{v : Double | v == 1.1}"
135:1-135:13::mergeCluster :: "x1:{v : Int | v >= 0} -> ({v : Int | v > 0}, {v : (List Double) | size v == x1}) -> ({v : Int | v > 0}, {v : (List Double) | size v == x1}) -> ({v : Int | v > 0}, {v : (List Double) | size v == x1})"
135:14-135:15::n :: "{v : Int | v >= 0}"
135:37-135:44::lq_anf$ :: "{v : Int | v == n1 + n2}"
135:40-135:41::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"
135:46-135:57::_ :: "x1:(List Double) -> {v : (List Double) | size v == size x1} -> {v : (List Double) | size v == size x1}"
135:54-135:57::lq_anf$ :: "x1:Double -> x2:Double -> {v : Double | v == x1 + x2}"
150:1-150:9::centroid :: "x1:{v : Int | v >= 0} -> {v : (List Double) | size v == x1} -> {v : Int | v >= 0\n                                                                          && v > 0} -> {v : (List Double) | size v == x1}"
150:10-150:11::n :: "{v : Int | v >= 0}"
150:12-150:13::p :: "{v : (List Double) | size v == n}"
150:14-150:16::sz :: "{v : Int | v >= 0\n           && v > 0}"
150:19-150:44::lq_anf$ :: "Double -> Double"
150:25-150:26::x :: "Double"
150:30-150:43::_ :: "Double"
150:32-150:40::_ :: "{v : Double -> {v : Int | v /= 0} -> Double | v == Assert.divide}"
168:1-168:7::kmeans :: "{v : Int | v >= 0} -> x2:{v : Int | v >= 0} -> x3:{v : Int | v >= 0} -> (List {v : (List Double) | size v == x3}) -> (Map {v : Int | 0 <= v\n                                                                                                                                     && v < x2} {v : (List Double) | size v == x3}) -> (Map {v : Int | 0 <= v\n                                                                                                                                                                                                       && v < x2} {v : (List Double) | size v == x3})"
168:8-168:13::steps :: "{v : Int | v >= 0}"
168:14-168:15::k :: "{v : Int | v >= 0}"
168:16-168:17::n :: "{v : Int | v >= 0}"
168:18-168:20::ps :: "(List {v : (List Double) | size v == n})"
168:23-168:35::repeat :: "{VV : Int | 0 <= VV\n            && VV >= 0} -> (a -> a) -> a -> a"
168:37-168:44::_ :: "{v : x1:{v : Int | v >= 0} -> x2:{v : Int | v >= 0} -> (List {v : (List Double) | size v == x2}) -> (Map {v : Int | 0 <= v\n                                                                                                                    && v < x1} {v : (List Double) | size v == x2}) -> (Map {v : Int | 0 <= v\n                                                                                                                                                                                      && v < x1} {v : (List Double) | size v == x2}) | v == KMeans.kmeans1}"
171:1-171:7::repeat :: "{VV : Int | 0 <= VV\n            && VV >= 0} -> (a -> a) -> a -> a"
171:10-171:11::f :: "a -> a"
171:12-171:13::x :: "a"
172:16-172:28::repeat :: "{VV : Int | 0 <= VV\n            && VV >= 0} -> (a -> a) -> a -> a"
172:24-172:27::lq_anf$ :: "Int"
172:25-172:26::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"
172:29-172:30::f :: "{v : a -> a | v == f}"
172:32-172:33::_ :: "{v : a -> a | v == f}"
188:1-188:8::kmeans1 :: "x1:{v : Int | v >= 0} -> x2:{v : Int | v >= 0} -> (List {v : (List Double) | size v == x2}) -> (Map {v : Int | 0 <= v\n                                                                                                               && v < x1} {v : (List Double) | size v == x2}) -> (Map {v : Int | 0 <= v\n                                                                                                                                                                                 && v < x1} {v : (List Double) | size v == x2})"
188:9-188:10::k :: "{v : Int | v >= 0}"
188:11-188:12::n :: "{v : Int | v >= 0}"
188:13-188:15::ps :: "(List {v : (List Double) | size v == n})"
188:16-188:18::cs :: "(Map {v : Int | 0 <= v\n                && v < k} {v : (List Double) | size v == n})"
188:21-188:42::newClusters :: "{v : (Map {v : Int | v /= k\n                     && v <= k\n                     && v < k\n                     && 0 <= v\n                     && v >= 0} ({v : Int | v >= 0\n                                            && 0 <= v\n                                            && v > 0\n                                            && v /= 0}, {v : (List Double) | size v == n})) | v == newClusters}"
191:5-191:14::normalize :: "(Map a ({VV : Int | VV /= 0\n                    && VV > 0\n                    && 0 <= VV\n                    && VV >= 0}, {VV : (List Double) | size VV == n})) -> (Map a {VV : (List Double) | size VV == n})"
191:21-191:56::lq_anf$ :: "({VV : Int | VV /= 0\n             && VV > 0\n             && 0 <= VV\n             && VV >= 0}, {VV : (List Double) | size VV == n}) -> {VV : (List Double) | size VV == n}"
191:28-191:55::lq_anf$ :: "({v : Int | v /= 0\n            && v > 0\n            && 0 <= v\n            && v >= 0}, {v : (List Double) | size v == n})"
191:40-191:48::_ :: "{v : x1:{v : Int | v >= 0} -> {v : (List Double) | size v == x1} -> {v : Int | v >= 0\n                                                                               && v > 0} -> {v : (List Double) | size v == x1} | v == KMeans.centroid}"
192:5-192:16::newClusters :: "(Map {v : Int | v /= k\n                && v <= k\n                && v < k\n                && 0 <= v\n                && v >= 0} ({v : Int | v >= 0\n                                       && 0 <= v\n                                       && v > 0\n                                       && v /= 0}, {v : (List Double) | size v == n}))"
192:21-192:30::_ :: "({v : (List Double) | size v == n} -> (List ({v : Int | v /= k\n                                                        && v <= k\n                                                        && v < k\n                                                        && 0 <= v\n                                                        && v >= 0}, ({v : Int | v >= 0\n                                                                                && 0 <= v\n                                                                                && v > 0\n                                                                                && v /= 0}, {v : (List Double) | size v == n})))) -> (({v : Int | v >= 0\n                                                                                                                                                  && 0 <= v\n                                                                                                                                                  && v > 0\n                                                                                                                                                  && v /= 0}, {v : (List Double) | size v == n}) -> ({v : Int | v >= 0\n                                                                                                                                                                                                                && 0 <= v\n                                                                                                                                                                                                                && v > 0\n                                                                                                                                                                                                                && v /= 0}, {v : (List Double) | size v == n}) -> ({v : Int | v >= 0\n                                                                                                                                                                                                                                                                              && 0 <= v\n                                                                                                                                                                                                                                                                              && v > 0\n                                                                                                                                                                                                                                                                              && v /= 0}, {v : (List Double) | size v == n})) -> (List {v : (List Double) | size v == n}) -> (Map {v : Int | v /= k\n                                                                                                                                                                                                                                                                                                                                                                                             && v <= k\n                                                                                                                                                                                                                                                                                                                                                                                             && v < k\n                                                                                                                                                                                                                                                                                                                                                                                             && 0 <= v\n                                                                                                                                                                                                                                                                                                                                                                                             && v >= 0} ({v : Int | v >= 0\n                                                                                                                                                                                                                                                                                                                                                                                                                    && 0 <= v\n                                                                                                                                                                                                                                                                                                                                                                                                                    && v > 0\n                                                                                                                                                                                                                                                                                                                                                                                                                    && v /= 0}, {v : (List Double) | size v == n}))"
192:31-192:33::fm :: "{v : x1:{v : (List Double) | size v == n} -> (List ({v : Int | v /= k\n                                                               && v <= k\n                                                               && v < k\n                                                               && 0 <= v\n                                                               && v >= 0\n                                                               && v == fst v}, {v : ({v : Int | v == 1\n                                                                                                && v <= k\n                                                                                                && v /= 0\n                                                                                                && v > 0\n                                                                                                && 0 <= v\n                                                                                                && v >= 0\n                                                                                                && v == fst v}, {v : (List Double) | v == x1\n                                                                                                                                     && v >= x1\n                                                                                                                                     && v <= x1\n                                                                                                                                     && size v == n\n                                                                                                                                     && v == snd v}) | v == snd v})) | v == fm}"
192:34-192:36::fr :: "{v : ({v : Int | v /= 0\n                 && v > 0\n                 && 0 <= v\n                 && v >= 0}, {v : (List Double) | size v == n}) -> ({v : Int | v /= 0\n                                                                               && v > 0\n                                                                               && 0 <= v\n                                                                               && v >= 0}, {v : (List Double) | size v == n}) -> ({v : Int | v > 0}, {v : (List Double) | size v == n}) | v == fr}"
193:5-193:7::fm :: "p:{VV : (List Double) | size VV == n} -> (List ({VV : Int | VV /= k\n                                                            && VV <= k\n                                                            && VV < k\n                                                            && 0 <= VV\n                                                            && VV >= 0\n                                                            && VV == fst VV}, {VV : ({VV : Int | VV == 1\n                                                                                                 && VV <= k\n                                                                                                 && VV /= 0\n                                                                                                 && VV > 0\n                                                                                                 && 0 <= VV\n                                                                                                 && VV >= 0\n                                                                                                 && VV == fst VV}, {VV : (List Double) | VV == p\n                                                                                                                                         && VV >= p\n                                                                                                                                         && VV <= p\n                                                                                                                                         && size VV == n\n                                                                                                                                         && VV == snd VV}) | VV == snd VV}))"
193:8-193:9::p :: "{VV : (List Double) | size VV == n}"
193:21-193:64::lq_anf$ :: "({v : Int | v /= k\n            && v <= k\n            && v < k\n            && 0 <= v\n            && v >= 0}, ({v : Int | v == 1\n                                    && v <= k\n                                    && v /= 0\n                                    && v > 0\n                                    && 0 <= v\n                                    && v >= 0\n                                    && v == fst v}, {v : (List Double) | v == p\n                                                                         && v >= p\n                                                                         && v <= p\n                                                                         && size v == n\n                                                                         && v == snd v}))"
193:32-193:39::_ :: "{v : x1:{v : Int | v >= 0} -> x2:{v : Int | v >= 0} -> (Map {v : Int | 0 <= v\n                                                                       && v < x1} {v : (List Double) | size v == x2}) -> {v : (List Double) | size v == x2} -> {v : Int | 0 <= v\n                                                                                                                                                                          && v < x1} | v == KMeans.nearest}"
194:5-194:7::fr :: "({VV : Int | VV /= 0\n             && VV > 0\n             && 0 <= VV\n             && VV >= 0}, {VV : (List Double) | size VV == n}) -> ({VV : Int | VV /= 0\n                                                                               && VV > 0\n                                                                               && 0 <= VV\n                                                                               && VV >= 0}, {VV : (List Double) | size VV == n}) -> ({v : Int | v > 0}, {v : (List Double) | size v == n})"
194:8-194:11::wp1 :: "({VV : Int | VV /= 0\n             && VV > 0\n             && 0 <= VV\n             && VV >= 0}, {VV : (List Double) | size VV == n})"
194:12-194:15::wp2 :: "({VV : Int | VV /= 0\n             && VV > 0\n             && 0 <= VV\n             && VV >= 0}, {VV : (List Double) | size VV == n})"
194:21-194:33::_ :: "{v : x1:{v : Int | v >= 0} -> ({v : Int | v > 0}, {v : (List Double) | size v == x1}) -> ({v : Int | v > 0}, {v : (List Double) | size v == x1}) -> ({v : Int | v > 0}, {v : (List Double) | size v == x1}) | v == KMeans.mergeCluster}"