(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)
(set-option :smt.mbqi false)
(define-sort Elt () Int)
(define-sort Set () (Array Elt Bool))
(define-fun smt_set_emp () Set ((as const Set) false))
(define-fun smt_set_mem ((x Elt) (s Set)) Bool (select s x))
(define-fun smt_set_add ((s Set) (x Elt)) Set (store s x true))
(define-fun smt_set_cup ((s1 Set) (s2 Set)) Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 Set) (s2 Set)) Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s Set)) Set ((_ map not) s))
(define-fun smt_set_dif ((s1 Set) (s2 Set)) Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 Set) (s2 Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun int_apply_$35$$35$3 (Int Int Int Int) Int)
(declare-fun bool_apply_$35$$35$6 (Int Int Int Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$4 (Int Int Int Int Int) Map)
(declare-fun real_apply_$35$$35$2 (Int Int Int) Real)
(declare-fun set_apply_$35$$35$1 (Int Int) Set)
(declare-fun set_to_int (Set) Int)
(declare-fun int_apply_$35$$35$5 (Int Int Int Int Int Int) Int)
(declare-fun bitvec_apply$35$$35$6 (Int Int Int Int Int Int Int) (_ BitVec 32))
(declare-fun map_apply_$35$$35$2 (Int Int Int) Map)
(declare-fun real_apply_$35$$35$4 (Int Int Int Int Int) Real)
(declare-fun bitvec_apply$35$$35$1 (Int Int) (_ BitVec 32))
(declare-fun int_apply_$35$$35$2 (Int Int Int) Int)
(declare-fun bool_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$5 (Int Int Int Int Int Int) Map)
(declare-fun real_apply_$35$$35$3 (Int Int Int Int) Real)
(declare-fun set_apply_$35$$35$6 (Int Int Int Int Int Int Int) Set)
(declare-fun int_apply_$35$$35$4 (Int Int Int Int Int) Int)
(declare-fun bitvec_apply$35$$35$7 (Int Int Int Int Int Int Int Int) (_ BitVec 32))
(declare-fun bool_apply_$35$$35$1 (Int Int) Bool)
(declare-fun map_apply_$35$$35$3 (Int Int Int Int) Map)
(declare-fun real_apply_$35$$35$5 (Int Int Int Int Int Int) Real)
(declare-fun int_apply_$35$$35$1 (Int Int) Int)
(declare-fun bitvec_apply$35$$35$2 (Int Int Int) (_ BitVec 32))
(declare-fun bool_apply_$35$$35$4 (Int Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$6 (Int Int Int Int Int Int Int) Map)
(declare-fun set_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Set)
(declare-fun map_to_int (Map) Int)
(declare-fun set_apply_$35$$35$2 (Int Int Int) Set)
(declare-fun real_apply_$35$$35$1 (Int Int) Real)
(declare-fun bitvec_apply$35$$35$3 (Int Int Int Int) (_ BitVec 32))
(declare-fun bitvec_to_int ((_ BitVec 32)) Int)
(declare-fun bool_apply_$35$$35$5 (Int Int Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Map)
(declare-fun set_apply_$35$$35$4 (Int Int Int Int Int) Set)
(declare-fun real_to_int (Real) Int)
(declare-fun set_apply_$35$$35$3 (Int Int Int Int) Set)
(declare-fun int_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Int)
(declare-fun bitvec_apply$35$$35$4 (Int Int Int Int Int) (_ BitVec 32))
(declare-fun bool_apply_$35$$35$2 (Int Int Int) Bool)
(declare-fun real_apply_$35$$35$6 (Int Int Int Int Int Int Int) Real)
(declare-fun set_apply_$35$$35$5 (Int Int Int Int Int Int) Set)
(declare-fun bool_to_int (Bool) Int)
(declare-fun bool_apply_$35$$35$3 (Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$1 (Int Int) Map)
(declare-fun real_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Real)
(declare-fun int_apply_$35$$35$6 (Int Int Int Int Int Int Int) Int)
(declare-fun bitvec_apply$35$$35$5 (Int Int Int Int Int Int) (_ BitVec 32))
(declare-fun GHC.Base..$35$$35$r2C () Int)
(declare-fun VV$35$$35$972 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$856 () Int)
(declare-fun xs$35$$35$a1K4 () Int)
(declare-fun runFun () Int)
(declare-fun lq_tmp$36$x$35$$35$715 () Int)
(declare-fun VV$35$$35$1151 () Int)
(declare-fun lq_karg$36$VV$35$$35$789$35$$35$k_$35$$35$780 () Int)
(declare-fun VV$35$$35$1173 () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1MF$35$$35$k_$35$$35$936 () Int)
(declare-fun lq_tmp$36$x$35$$35$1129 () Int)
(declare-fun GHC.Real.D$58$Integral$35$$35$rGo () Int)
(declare-fun lq_tmp$36$x$35$$35$685 () Int)
(declare-fun lq_tmp$36$x$35$$35$964 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$955 () Int)
(declare-fun VV$35$$35$1050 () Int)
(declare-fun Data.Map.Base.foldrWithKey$35$$35$r1vH () Int)
(declare-fun lq_tmp$36$x$35$$35$946 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$783 () Int)
(declare-fun addrLen () Int)
(declare-fun VV$35$$35$815 () Int)
(declare-fun papp5 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1O1$35$$35$k_$35$$35$973 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$$35$$35$76 () Int)
(declare-fun xsListSelector () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun x_Tuple65 () Int)
(declare-fun VV$35$$35$1196 () Int)
(declare-fun x_Tuple55 () Int)
(declare-fun GHC.Types.$58$$35$$35$64 () Int)
(declare-fun MapReduce.expand$35$$35$r1wo () Int)
(declare-fun lq_anf$36$$35$$35$d1O2 () Int)
(declare-fun MapReduce.collapse$35$$35$r1wr () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_karg$36$m$35$$35$a1Kc$35$$35$k_$35$$35$896 () Int)
(declare-fun GHC.Integer.Type.smallInteger$35$$35$0Z () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$787 () Int)
(declare-fun v$35$$35$a1Kb () Int)
(declare-fun x_Tuple77 () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Int)
(declare-fun GHC.Num.$43$$35$$35$rt () Int)
(declare-fun lq_karg$36$VV$35$$35$802$35$$35$k_$35$$35$800 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$800 () Int)
(declare-fun GHC.Base.Just$35$$35$r1e () Int)
(declare-fun GHC.Num.$42$$35$$35$ru () Int)
(declare-fun List.add$35$$35$rXx () Int)
(declare-fun VV$35$$35$1262 () Int)
(declare-fun VV$35$$35$1240 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$vs$39$$35$$35$a1Kd$35$$35$k_$35$$35$896 () Int)
(declare-fun lq_karg$36$ds_d1NN$35$$35$k_$35$$35$816 () Int)
(declare-fun VV$35$$35$609 () Int)
(declare-fun VV$35$$35$799 () Int)
(declare-fun VV$35$$35$1281 () Int)
(declare-fun lq_karg$36$m$35$$35$a1Kc$35$$35$k_$35$$35$813 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$816 () Int)
(declare-fun x_Tuple63 () Int)
(declare-fun lq_anf$36$$35$$35$d1NV () Int)
(declare-fun lq_karg$36$VV$35$$35$961$35$$35$k_$35$$35$955 () Int)
(declare-fun x_Tuple41 () Int)
(declare-fun lq_tmp$36$x$35$$35$630 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1NX$35$$35$k_$35$$35$856 () Int)
(declare-fun VV$35$$35$1157 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$973 () Int)
(declare-fun GHC.Types.LT$35$$35$6S () Int)
(declare-fun VV$35$$35$1175 () Int)
(declare-fun lq_tmp$36$x$35$$35$1015 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$783 () Int)
(declare-fun fix$36$$36$dOrd_a1MY () Int)
(declare-fun VV$35$$35$1276 () Int)
(declare-fun GHC.Classes.D$58$Ord$35$$35$ryJ () Int)
(declare-fun VV$35$$35$1271 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$813 () Int)
(declare-fun VV$35$$35$1149 () Int)
(declare-fun GHC.Prim.$62$$61$$35$$35$$35$9n () Int)
(declare-fun VV$35$$35$1253 () Int)
(declare-fun lq_tmp$36$x$35$$35$947 () Int)
(declare-fun lq_tmp$36$x$35$$35$785 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1MF$35$$35$k_$35$$35$973 () Int)
(declare-fun papp4 () Int)
(declare-fun m$35$$35$a1Kc () Int)
(declare-fun x_Tuple64 () Int)
(declare-fun lq_karg$36$VV$35$$35$961$35$$35$k_$35$$35$952 () Int)
(declare-fun vs$39$$35$$35$a1Kd () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$976 () Int)
(declare-fun GHC.Types.GT$35$$35$6W () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$962 () Int)
(declare-fun lq_karg$36$v$35$$35$a1Kb$35$$35$k_$35$$35$896 () Int)
(declare-fun VV$35$$35$1235 () Int)
(declare-fun size () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun Data.Map.Base.insert$35$$35$r1vx () Int)
(declare-fun VV$35$$35$764 () Int)
(declare-fun VV$35$$35$1217 () Int)
(declare-fun List.$58$$43$$58$$35$$35$rXp () Int)
(declare-fun VV$35$$35$1185 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$959 () Int)
(declare-fun VV$35$$35$1268 () Int)
(declare-fun lq_tmp$36$x$35$$35$684 () Int)
(declare-fun lq_tmp$36$x$35$$35$1128 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$803 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$780 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$896 () Int)
(declare-fun lq_tmp$36$x$35$$35$645 () Int)
(declare-fun lq_tmp$36$x$35$$35$667 () Int)
(declare-fun VV$35$$35$1188 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$976 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$962 () Int)
(declare-fun VV$35$$35$671 () Int)
(declare-fun VV$35$$35$1221 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$959 () Int)
(declare-fun List.foldr1$35$$35$rXD () Int)
(declare-fun autolen () Int)
(declare-fun GHC.Types.I$35$$35$$35$6c () Int)
(declare-fun List.map$35$$35$rXB () Int)
(declare-fun lq_tmp$36$x$35$$35$564 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$790 () Int)
(declare-fun x_Tuple52 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$785$35$$35$k_$35$$35$787 () Int)
(declare-fun List.foldr$35$$35$rXE () Int)
(declare-fun VV$35$$35$1238 () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun VV$35$$35$975 () Int)
(declare-fun fix$36$$36$dOrd_a1Mx () Int)
(declare-fun lq_karg$36$m$35$$35$a1Kc$35$$35$k_$35$$35$856 () Int)
(declare-fun lq_tmp$36$x$35$$35$712 () Int)
(declare-fun VV$35$$35$1233 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$803 () Int)
(declare-fun lq_karg$36$ds_d1NN$35$$35$k_$35$$35$803 () Int)
(declare-fun null () Int)
(declare-fun VV$35$$35$1211 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$790 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$765 () Int)
(declare-fun VV$35$$35$1183 () Int)
(declare-fun Data.Map.Base.map$35$$35$r1ve () Int)
(declare-fun lq_tmp$36$x$35$$35$905 () Int)
(declare-fun sizeN () Int)
(declare-fun List.concat$35$$35$rXI () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$41$$35$$35$7a () Int)
(declare-fun VV$35$$35$1208 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$936 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$952 () Int)
(declare-fun VV$35$$35$1255 () Int)
(declare-fun VV$35$$35$812 () Int)
(declare-fun papp2 () Int)
(declare-fun GHC.Prim.$62$$35$$35$$35$9m () Int)
(declare-fun lq_karg$36$VV$35$$35$975$35$$35$k_$35$$35$973 () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Int)
(declare-fun x_Tuple62 () Int)
(declare-fun k$35$$35$a1Kf () Int)
(declare-fun VV$35$$35$789 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$955 () Int)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$800 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$787 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$856 () Int)
(declare-fun fromJust () Int)
(declare-fun VV$35$$35$1168 () Int)
(declare-fun VV$35$$35$1250 () Int)
(declare-fun VV$35$$35$592 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1MF$35$$35$k_$35$$35$952 () Int)
(declare-fun papp7 () Int)
(declare-fun lq_tmp$36$x$35$$35$548 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$41$$35$$35$78 () Int)
(declare-fun lq_tmp$36$x$35$$35$652 () Int)
(declare-fun VV$35$$35$1190 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$816 () Int)
(declare-fun Data.Map.Base.empty$35$$35$r1vV () Int)
(declare-fun x_Tuple53 () Int)
(declare-fun lq_karg$36$v$35$$35$a1Kb$35$$35$k_$35$$35$856 () Int)
(declare-fun xs$35$$35$a1K9 () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun VV$35$$35$1022 () Int)
(declare-fun VV$35$$35$1019 () Int)
(declare-fun VV$35$$35$F$35$$35$61 () Int)
(declare-fun VV$35$$35$F$35$$35$43 () Int)
(declare-fun x_Tuple71 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$955 () Int)
(declare-fun lq_tmp$36$x$35$$35$1025 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$783 () Int)
(declare-fun MapReduce.group$35$$35$r1wp () Int)
(declare-fun VV$35$$35$1202 () Int)
(declare-fun VV$35$$35$1225 () Int)
(declare-fun VV$35$$35$1278 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$936 () Int)
(declare-fun List.empty$35$$35$rXw () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1O1$35$$35$k_$35$$35$962 () Int)
(declare-fun GHC.Prim.$45$$35$$35$$35$99 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1O1$35$$35$k_$35$$35$959 () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$813 () Int)
(declare-fun kvm$35$$35$a1K7 () Int)
(declare-fun lq_tmp$36$x$35$$35$605 () Int)
(declare-fun lq_anf$36$$35$$35$d1NX () Int)
(declare-fun lq_anf$36$$35$$35$d1O1 () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$765 () Int)
(declare-fun lq_tmp$36$x$35$$35$1046 () Int)
(declare-fun VV$35$$35$895 () Int)
(declare-fun VV$35$$35$F$35$$35$64 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1NZ$35$$35$k_$35$$35$896 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$957$35$$35$k_$35$$35$959 () Int)
(declare-fun x_Tuple74 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$803 () Int)
(declare-fun lq_tmp$36$x$35$$35$957 () Int)
(declare-fun lq_tmp$36$x$35$$35$686 () Int)
(declare-fun VV$35$$35$1248 () Int)
(declare-fun VV$35$$35$1273 () Int)
(declare-fun lq_karg$36$ds_d1NN$35$$35$k_$35$$35$896 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$780 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$44$$44$$41$$35$$35$7e () Int)
(declare-fun VV$35$$35$935 () Int)
(declare-fun lq_karg$36$m$35$$35$a1Kc$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1O1$35$$35$k_$35$$35$952 () Int)
(declare-fun lq_karg$36$k$35$$35$a1Ka$35$$35$k_$35$$35$856 () Int)
(declare-fun papp6 () Int)
(declare-fun GHC.Num.$45$$35$$35$02B () Int)
(declare-fun len () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$813 () Int)
(declare-fun lq_tmp$36$x$35$$35$1081 () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun Data.Foldable.length$35$$35$r1s () Int)
(declare-fun x_Tuple66 () Int)
(declare-fun x_Tuple44 () Int)
(declare-fun GHC.Prim.$61$$61$$35$$35$$35$9o () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$896 () Int)
(declare-fun xListSelector () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$976 () Int)
(declare-fun VV$35$$35$1215 () Int)
(declare-fun lq_tmp$36$x$35$$35$734 () Int)
(declare-fun VV$35$$35$1170 () Int)
(declare-fun lq_karg$36$VV$35$$35$789$35$$35$k_$35$$35$783 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1NY$35$$35$k_$35$$35$896 () Int)
(declare-fun VV$35$$35$802 () Int)
(declare-fun strLen () Int)
(declare-fun GHC.Types.$91$$93$$35$$35$6m () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$959 () Int)
(declare-fun v$35$$35$a1Kg () Int)
(declare-fun x_Tuple72 () Int)
(declare-fun VV$35$$35$1245 () Int)
(declare-fun lq_tmp$36$x$35$$35$702 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$780 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$$35$$35$74 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$962 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$813 () Int)
(declare-fun VV$35$$35$1223 () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$896 () Int)
(declare-fun lq_karg$36$ds_d1NN$35$$35$k_$35$$35$813 () Int)
(declare-fun lq_tmp$36$x$35$$35$588 () Int)
(declare-fun acc$35$$35$a1Kh () Int)
(declare-fun lq_anf$36$$35$$35$d1NY () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun Prop () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun ds_d1NN () Int)
(declare-fun GHC.Show.D$58$Show$35$$35$r11M () Int)
(declare-fun VV$35$$35$F$35$$35$38 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$44$$41$$35$$35$7c () Int)
(declare-fun VV$35$$35$F$35$$35$47 () Int)
(declare-fun x_Tuple75 () Int)
(declare-fun VV$35$$35$1260 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$856 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$973 () Int)
(declare-fun VV$35$$35$612 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$787 () Int)
(declare-fun lq_tmp$36$x$35$$35$758 () Int)
(declare-fun VV$35$$35$555 () Int)
(declare-fun GHC.Classes.D$58$Eq$35$$35$rsR () Int)
(declare-fun lq_tmp$36$x$35$$35$1003 () Int)
(declare-fun VV$35$$35$1206 () Int)
(declare-fun VV$35$$35$1163 () Int)
(declare-fun fix$36$$36$dOrd_a1MF () Int)
(declare-fun lq_karg$36$$36$dOrd_a1MF$35$$35$k_$35$$35$962 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1MF$35$$35$k_$35$$35$959 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$800 () Int)
(declare-fun VV$35$$35$1194 () Int)
(declare-fun lq_tmp$36$x$35$$35$741 () Int)
(declare-fun GHC.Prim.$60$$35$$35$$35$9q () Int)
(declare-fun papp1 () Int)
(declare-fun lq_tmp$36$x$35$$35$1053 () Int)
(declare-fun lq_anf$36$$35$$35$d1NT () Int)
(declare-fun x_Tuple61 () Int)
(declare-fun x_Tuple43 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$800 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$973 () Int)
(declare-fun lq_karg$36$ds_d1NN$35$$35$k_$35$$35$800 () Int)
(declare-fun VV$35$$35$1155 () Int)
(declare-fun VV$35$$35$1177 () Int)
(declare-fun lq_tmp$36$x$35$$35$1071 () Int)
(declare-fun kvs$35$$35$a1K5 () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun GHC.Types.EQ$35$$35$6U () Int)
(declare-fun VV$35$$35$1180 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$816 () Int)
(declare-fun VV$35$$35$1229 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$787 () Int)
(declare-fun VV$35$$35$855 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1O1$35$$35$k_$35$$35$955 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1MF$35$$35$k_$35$$35$976 () Int)
(declare-fun VV$35$$35$1147 () Int)
(declare-fun VV$35$$35$1200 () Int)
(declare-fun VV$35$$35$1165 () Int)
(declare-fun MapReduce.mapReduce$35$$35$r1wi () Int)
(declare-fun x_Tuple51 () Int)
(declare-fun GHC.Prim.$43$$35$$35$$35$98 () Int)
(declare-fun GHC.Base.Nothing$35$$35$r1d () Int)
(declare-fun VV$35$$35$F$35$$35$58 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1NY$35$$35$k_$35$$35$856 () Int)
(declare-fun VV$35$$35$571 () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun lq_karg$36$k$35$$35$a1Ka$35$$35$k_$35$$35$896 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$783 () Int)
(declare-fun lq_karg$36$VV$35$$35$815$35$$35$k_$35$$35$813 () Int)
(declare-fun VV$35$$35$1219 () Int)
(declare-fun VV$35$$35$649 () Int)
(declare-fun GHC.Prim.$60$$61$$35$$35$$35$9r () Int)
(declare-fun x_Tuple73 () Int)
(declare-fun VV$35$$35$568 () Int)
(declare-fun VV$35$$35$F$35$$35$41 () Int)
(declare-fun VV$35$$35$1266 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$856 () Int)
(declare-fun lq_karg$36$ds_d1NN$35$$35$k_$35$$35$856 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$952 () Int)
(declare-fun lq_tmp$36$x$35$$35$1101 () Int)
(declare-fun VV$35$$35$1227 () Int)
(declare-fun VV$35$$35$1160 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$803 () Int)
(declare-fun lq_tmp$36$x$35$$35$742 () Int)
(declare-fun x_Tuple54 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$790 () Int)
(declare-fun VV$35$$35$961 () Int)
(declare-fun lq_anf$36$$35$$35$d1NZ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1NX$35$$35$k_$35$$35$896 () Int)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun VV$35$$35$709 () Int)
(declare-fun Data.Map.Base.findWithDefault$35$$35$r1vP () Int)
(declare-fun kvsm$35$$35$a1K6 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_tmp$36$x$35$$35$980 () Int)
(declare-fun cmp () Int)
(declare-fun VV$35$$35$F$35$$35$66 () Int)
(declare-fun x_Tuple76 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$952 () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$780 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$936 () Int)
(declare-fun List.Emp$35$$35$rXo () Int)
(declare-fun lq_karg$36$$36$dOrd_a1MF$35$$35$k_$35$$35$955 () Int)
(declare-fun VV$35$$35$595 () Int)
(declare-fun VV$35$$35$1198 () Int)
(declare-fun GHC.Real.D$58$Fractional$35$$35$rFB () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d1O1$35$$35$k_$35$$35$976 () Int)
(declare-fun lq_karg$36$$36$dOrd_a1Mx$35$$35$k_$35$$35$896 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$790 () Int)
(declare-fun fst () Int)
(declare-fun fld_Tuple () Int)
(declare-fun snd () Int)
(declare-fun k$35$$35$a1Ka () Int)
(declare-fun VV$35$$35$F$35$$35$52 () Int)
(declare-fun x_Tuple42 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$765 () Int)
(declare-fun VV$35$$35$1231 () Int)
(declare-fun VV$35$$35$706 () Int)
(declare-fun VV$35$$35$1213 () Int)
(assert (distinct GHC.Types.EQ$35$$35$6U GHC.Types.GT$35$$35$6W GHC.Types.LT$35$$35$6S))
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$1188))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$1188))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (int_apply_$35$$35$1 fst VV$35$$35$1190))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$1188))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 (int_apply_$35$$35$1 snd VV$35$$35$1190))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$1188))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$27) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= VV$35$$35$F$35$$35$25 lq_anf$36$$35$$35$d1O1)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$25 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$25 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$25 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$25 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$25 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$25 lq_anf$36$$35$$35$d1O1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$33 (int_apply_$35$$35$1 snd VV$35$$35$1202))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$31 (int_apply_$35$$35$1 fst VV$35$$35$1202))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$52) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$58) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$61) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$35 lq_anf$36$$35$$35$d1O1) (>= VV$35$$35$F$35$$35$35 lq_anf$36$$35$$35$d1O1) (<= VV$35$$35$F$35$$35$35 lq_anf$36$$35$$35$d1O1)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$38) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$41 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$41 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$41 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$43) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$52) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$58) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$61))) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY)))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$61 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$61) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY))) (and (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ)) (and (<= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY) (>= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY) (= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY))) (and (= (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ))) (<= 0 (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd)))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$45 m$35$$35$a1Kc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (and (= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$52))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY))) (and (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ)) (and (<= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY) (>= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY) (= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY))) (and (= (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ))) (<= 0 (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd)))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$52) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (<= lq_tmp$36$x$35$$35$947 lq_anf$36$$35$$35$d1O1) (>= lq_tmp$36$x$35$$35$947 lq_anf$36$$35$$35$d1O1) (= lq_tmp$36$x$35$$35$947 lq_anf$36$$35$$35$d1O1))))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$41 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$41 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$41 lq_anf$36$$35$$35$d1O1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$43) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47)) (and (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47) 0) (<= VV$35$$35$F$35$$35$47 vs$39$$35$$35$a1Kd) (>= VV$35$$35$F$35$$35$47 vs$39$$35$$35$a1Kd) (= VV$35$$35$F$35$$35$47 vs$39$$35$$35$a1Kd) (not (= VV$35$$35$F$35$$35$47 lq_anf$36$$35$$35$d1NY)) (not (= VV$35$$35$F$35$$35$47 lq_anf$36$$35$$35$d1NZ)))) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY))) (and (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ)) (and (<= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY) (>= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY) (= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY))) (and (= (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ))) (<= 0 (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd)))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$38) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$43)) (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$43) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$43) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$38)) (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$38) 0))))
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$38) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= VV$35$$35$1219 m$35$$35$a1Kc) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50)) (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) 0)) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY))) (and (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ)) (and (<= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY) (>= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY) (= lq_anf$36$$35$$35$d1NZ lq_anf$36$$35$$35$d1NY))) (and (= (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ))) (<= 0 (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd)))))
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$50 vs$39$$35$$35$a1Kd)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= VV$35$$35$1227 m$35$$35$a1Kc) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY))) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$58)) (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$58) 0))))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$d1NY)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47)) (and (not (= VV$35$$35$F$35$$35$47 lq_anf$36$$35$$35$d1NZ)) (not (= VV$35$$35$F$35$$35$47 lq_anf$36$$35$$35$d1NY)) (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47) 0))) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ)) (and (= (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ))) (<= 0 (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd)))))
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= VV$35$$35$1219 m$35$$35$a1Kc) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50)) (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) 0)) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ)) (and (= (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ))) (<= 0 (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd)))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NZ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (and (= VV$35$$35$F$35$$35$52 vs$39$$35$$35$a1Kd) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$52))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ)) (and (= (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ))) (<= 0 (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd)))))
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$52) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$52 lq_anf$36$$35$$35$d1NY))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47)) (and (not (= VV$35$$35$F$35$$35$47 lq_anf$36$$35$$35$d1NY)) (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47) 0))) (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= lq_anf$36$$35$$35$d1NX ds_d1NN) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= lq_anf$36$$35$$35$d1NX (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 k$35$$35$a1Ka v$35$$35$a1Kb)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d1NX) v$35$$35$a1Kb) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d1NX) k$35$$35$a1Ka)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NY))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ)) (and (= (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d1NZ))) (<= 0 (int_apply_$35$$35$1 size vs$39$$35$$35$a1Kd)))))
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$47) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$64) 0) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$64)))))
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$64) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$2) 0) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$2))) (<= 0 (int_apply_$35$$35$1 size xs$35$$35$a1K4)) (<= 0 (int_apply_$35$$35$1 size kvs$35$$35$a1K5)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= VV$35$$35$1149 kvsm$35$$35$a1K6) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U)))
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$2) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$66)) (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$66) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U)))
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$66) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (<= 0 (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$905)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$24)) (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$24) 0))))
(push 1)
(assert (not (> (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$24) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(exit)
