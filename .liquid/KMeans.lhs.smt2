(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)
(set-option :smt.mbqi false)
(define-sort Elt () Int)
(define-sort Set () (Array Elt Bool))
(define-fun smt_set_emp () Set ((as const Set) false))
(define-fun smt_set_mem ((x Elt) (s Set)) Bool (select s x))
(define-fun smt_set_add ((s Set) (x Elt)) Set (store s x true))
(define-fun smt_set_cup ((s1 Set) (s2 Set)) Set ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 Set) (s2 Set)) Set ((_ map and) s1 s2))
(define-fun smt_set_com ((s Set)) Set ((_ map not) s))
(define-fun smt_set_dif ((s1 Set) (s2 Set)) Set (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 Set) (s2 Set)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun int_apply_$35$$35$3 (Int Int Int Int) Int)
(declare-fun bool_apply_$35$$35$6 (Int Int Int Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$4 (Int Int Int Int Int) Map)
(declare-fun real_apply_$35$$35$2 (Int Int Int) Real)
(declare-fun set_apply_$35$$35$1 (Int Int) Set)
(declare-fun set_to_int (Set) Int)
(declare-fun int_apply_$35$$35$5 (Int Int Int Int Int Int) Int)
(declare-fun bitvec_apply$35$$35$6 (Int Int Int Int Int Int Int) (_ BitVec 32))
(declare-fun map_apply_$35$$35$2 (Int Int Int) Map)
(declare-fun real_apply_$35$$35$4 (Int Int Int Int Int) Real)
(declare-fun bitvec_apply$35$$35$1 (Int Int) (_ BitVec 32))
(declare-fun int_apply_$35$$35$2 (Int Int Int) Int)
(declare-fun bool_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$5 (Int Int Int Int Int Int) Map)
(declare-fun real_apply_$35$$35$3 (Int Int Int Int) Real)
(declare-fun set_apply_$35$$35$6 (Int Int Int Int Int Int Int) Set)
(declare-fun int_apply_$35$$35$4 (Int Int Int Int Int) Int)
(declare-fun bitvec_apply$35$$35$7 (Int Int Int Int Int Int Int Int) (_ BitVec 32))
(declare-fun bool_apply_$35$$35$1 (Int Int) Bool)
(declare-fun map_apply_$35$$35$3 (Int Int Int Int) Map)
(declare-fun real_apply_$35$$35$5 (Int Int Int Int Int Int) Real)
(declare-fun int_apply_$35$$35$1 (Int Int) Int)
(declare-fun bitvec_apply$35$$35$2 (Int Int Int) (_ BitVec 32))
(declare-fun bool_apply_$35$$35$4 (Int Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$6 (Int Int Int Int Int Int Int) Map)
(declare-fun set_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Set)
(declare-fun map_to_int (Map) Int)
(declare-fun set_apply_$35$$35$2 (Int Int Int) Set)
(declare-fun real_apply_$35$$35$1 (Int Int) Real)
(declare-fun bitvec_apply$35$$35$3 (Int Int Int Int) (_ BitVec 32))
(declare-fun bitvec_to_int ((_ BitVec 32)) Int)
(declare-fun bool_apply_$35$$35$5 (Int Int Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Map)
(declare-fun set_apply_$35$$35$4 (Int Int Int Int Int) Set)
(declare-fun real_to_int (Real) Int)
(declare-fun set_apply_$35$$35$3 (Int Int Int Int) Set)
(declare-fun int_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Int)
(declare-fun bitvec_apply$35$$35$4 (Int Int Int Int Int) (_ BitVec 32))
(declare-fun bool_apply_$35$$35$2 (Int Int Int) Bool)
(declare-fun real_apply_$35$$35$6 (Int Int Int Int Int Int Int) Real)
(declare-fun set_apply_$35$$35$5 (Int Int Int Int Int Int) Set)
(declare-fun bool_to_int (Bool) Int)
(declare-fun bool_apply_$35$$35$3 (Int Int Int Int) Bool)
(declare-fun map_apply_$35$$35$1 (Int Int) Map)
(declare-fun real_apply_$35$$35$7 (Int Int Int Int Int Int Int Int) Real)
(declare-fun bitvec_apply$35$$35$5 (Int Int Int Int Int Int) (_ BitVec 32))
(declare-fun int_apply_$35$$35$6 (Int Int Int Int Int Int Int) Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2800 () Int)
(declare-fun VV$35$$35$2886 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1927 () Int)
(declare-fun VV$35$$35$3429 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1990 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1838 () Real)
(declare-fun VV$35$$35$1841 () Real)
(declare-fun VV$35$$35$F$35$$35$280 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1848 () Int)
(declare-fun VV$35$$35$F$35$$35$376 () Real)
(declare-fun GHC.Base..$35$$35$r2C () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2506 () Int)
(declare-fun n$35$$35$a2kR () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_tmp$36$x$35$$35$1112 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$977 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2431 () Int)
(declare-fun runFun () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1063 () Int)
(declare-fun lq_anf$36$$35$$35$d2s6 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1034 () Int)
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2903 () Int)
(declare-fun VV$35$$35$3285 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1832 () Int)
(declare-fun VV$35$$35$3681 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1441 () Int)
(declare-fun VV$35$$35$2240 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_tmp$36$x$35$$35$1174 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2568 () Int)
(declare-fun VV$35$$35$765 () Real)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1911 () Int)
(declare-fun VV$35$$35$3153 () Int)
(declare-fun VV$35$$35$F$35$$35$309 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1105 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1685 () Real)
(declare-fun VV$35$$35$2262 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2489$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1678 () Int)
(declare-fun VV$35$$35$1599 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$ds_d2rr$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$VV$35$$35$2430$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$762 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$906 () Int)
(declare-fun lq_karg$36$x$35$$35$a2l5$35$$35$k_$35$$35$2991 () Int)
(declare-fun VV$35$$35$3373 () Real)
(declare-fun VV$35$$35$2521 () Int)
(declare-fun VV$35$$35$2600 () Int)
(declare-fun lq_karg$36$VV$35$$35$2606$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_tmp$36$x$35$$35$1075 () Int)
(declare-fun VV$35$$35$3799 () Real)
(declare-fun y$35$$35$a2kE () Real)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun VV$35$$35$1713 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1990 () Int)
(declare-fun VV$35$$35$3711 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$762 () Int)
(declare-fun Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2788 () Int)
(declare-fun VV$35$$35$F$35$$35$112 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2331 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1069 () Int)
(declare-fun VV$35$$35$3186 () Real)
(declare-fun VV$35$$35$3733 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2960 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2311 () Int)
(declare-fun VV$35$$35$2327 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$VV$35$$35$2809$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$n$35$$35$a2kR$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1990 () Int)
(declare-fun VV$35$$35$1368 () Real)
(declare-fun VV$35$$35$2790 () Int)
(declare-fun GHC.Real.D$58$Integral$35$$35$rGo () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2428 () Int)
(declare-fun Data.OldList.transpose$35$$35$r1Kb () Int)
(declare-fun KMeans.test_nearest$35$$35$r1L1 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$VV$35$$35$1791$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$ds_d2rm$35$$35$k_$35$$35$3030 () Int)
(declare-fun VV$35$$35$3168 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1453 () Int)
(declare-fun VV$35$$35$3755 () Int)
(declare-fun VV$35$$35$2079 () Int)
(declare-fun VV$35$$35$3777 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_tmp$36$x$35$$35$2540 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_tmp$36$x$35$$35$946 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1838 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2512 () Int)
(declare-fun VV$35$$35$1728 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1792 () Int)
(declare-fun GHC.Float.sqrt$35$$35$rN () Int)
(declare-fun VV$35$$35$1050 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2568 () Int)
(declare-fun VV$35$$35$1995 () Int)
(declare-fun zcmp () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2472 () Int)
(declare-fun VV$35$$35$3609 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$2073 () Real)
(declare-fun x$35$$35$a2kD () Real)
(declare-fun VV$35$$35$3843 () Real)
(declare-fun VV$35$$35$1863 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2950 () Int)
(declare-fun addrLen () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$809 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1412 () Int)
(declare-fun VV$35$$35$1926 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_anf$36$$35$$35$d2sf () Int)
(declare-fun VV$35$$35$3825 () Real)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2331 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$2080 () Real)
(declare-fun lq_karg$36$n$35$$35$a2l2$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2890 () Int)
(declare-fun VV$35$$35$3807 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1685 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kV$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2766 () Int)
(declare-fun VV$35$$35$3474 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2690 () Int)
(declare-fun papp5 () Int)
(declare-fun n1$35$$35$a2kS () Int)
(declare-fun VV$35$$35$3531 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$steps$35$$35$a2l0$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_anf$36$$35$$35$d2sv () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1832 () Int)
(declare-fun VV$35$$35$1775 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2382 () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1750 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1832 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$$35$$35$76 () Int)
(declare-fun VV$35$$35$3117 () Real)
(declare-fun xsListSelector () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1110 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2607 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1467 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2957 () Int)
(declare-fun VV$35$$35$3780 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1721 () Int)
(declare-fun VV$35$$35$F$35$$35$75 () Int)
(declare-fun VV$35$$35$2394 () Int)
(declare-fun VV$35$$35$F$35$$35$332 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_anf$36$$35$$35$d2rO () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1911 () Int)
(declare-fun VV$35$$35$F$35$$35$299 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$VV$35$$35$2889$35$$35$k_$35$$35$2880 () Int)
(declare-fun VV$35$$35$3582 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1000 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1917 () Real)
(declare-fun VV$35$$35$3249 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2382 () Int)
(declare-fun VV$35$$35$2547 () Int)
(declare-fun x_Tuple65 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2903 () Int)
(declare-fun VV$35$$35$F$35$$35$354 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1714 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_tmp$36$x$35$$35$1820 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1110 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2887 () Int)
(declare-fun VV$35$$35$3419 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1832 () Real)
(declare-fun VV$35$$35$3444 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$977 () Int)
(declare-fun VV$35$$35$3567 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1750 () Int)
(declare-fun VV$35$$35$1196 () Real)
(declare-fun VV$35$$35$3721 () Real)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2817 () Int)
(declare-fun VV$35$$35$3747 () Real)
(declare-fun VV$35$$35$2580 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$3639 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$762 () Int)
(declare-fun VV$35$$35$F$35$$35$166 () Int)
(declare-fun VV$35$$35$3664 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2402 () Int)
(declare-fun VV$35$$35$F$35$$35$90 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1911 () Int)
(declare-fun VV$35$$35$3396 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2810 () Int)
(declare-fun VV$35$$35$3545 () Real)
(declare-fun VV$35$$35$F$35$$35$1 () Int)
(declare-fun VV$35$$35$2508 () Real)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun VV$35$$35$1952 () Int)
(declare-fun VV$35$$35$F$35$$35$346 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$809 () Int)
(declare-fun x_Tuple55 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2880 () Int)
(declare-fun VV$35$$35$2775 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2581 () Int)
(declare-fun VV$35$$35$3851 () Real)
(declare-fun lq_karg$36$ds_d2rm$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_tmp$36$x$35$$35$1810 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1757 () Real)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2952$35$$35$k_$35$$35$2957 () Int)
(declare-fun lq_anf$36$$35$$35$d2rD () Real)
(declare-fun VV$35$$35$3589 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2693 () Int)
(declare-fun x2$35$$35$a2kM () Int)
(declare-fun VV$35$$35$F$35$$35$292 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2760 () Int)
(declare-fun VV$35$$35$1817 () Int)
(declare-fun lq_tmp$36$x$35$$35$1876 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2908 () Int)
(declare-fun GHC.Types.$58$$35$$35$64 () Int)
(declare-fun VV$35$$35$3936 () Real)
(declare-fun VV$35$$35$1916 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_tmp$36$x$35$$35$1955 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2957 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sq$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2960 () Int)
(declare-fun VV$35$$35$3260 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$VV$35$$35$915$35$$35$k_$35$$35$906 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2315 () Int)
(declare-fun VV$35$$35$3914 () Int)
(declare-fun lq_tmp$36$x$35$$35$2802 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2882$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1105 () Int)
(declare-fun VV$35$$35$3361 () Real)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1034 () Int)
(declare-fun lq_anf$36$$35$$35$d2rT () Real)
(declare-fun lq_tmp$36$x$35$$35$1119 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1714 () Int)
(declare-fun GHC.Integer.Type.smallInteger$35$$35$0Z () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1714 () Int)
(declare-fun VV$35$$35$F$35$$35$191 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kT$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sf$35$$35$k_$35$$35$2073 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2908 () Int)
(declare-fun newClusters$35$$35$a2le () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$2006 () Real)
(declare-fun VV$35$$35$3488 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1685 () Int)
(declare-fun VV$35$$35$2511 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$VV$35$$35$1050$35$$35$k_$35$$35$1034 () Int)
(declare-fun VV$35$$35$3307 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1927 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$3884 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$778 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$2577 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$VV$35$$35$2430$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2683 () Int)
(declare-fun VV$35$$35$F$35$$35$67 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2673 () Int)
(declare-fun VV$35$$35$2269 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2880 () Int)
(declare-fun ycmp () Int)
(declare-fun lq_karg$36$VV$35$$35$2404$35$$35$k_$35$$35$2389 () Int)
(declare-fun x_Tuple77 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_karg$36$VV$35$$35$3092$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2791 () Int)
(declare-fun GHC.Num.$43$$35$$35$rt () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$977 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1453 () Int)
(declare-fun VV$35$$35$3378 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1911 () Real)
(declare-fun VV$35$$35$3792 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sm$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$983 () Int)
(declare-fun GHC.Num.$42$$35$$35$ru () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2950 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1792 () Int)
(declare-fun VV$35$$35$3518 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1990 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1996 () Int)
(declare-fun GHC.Base.Just$35$$35$r1e () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l1$35$$35$k_$35$$35$3084 () Int)
(declare-fun List.add$35$$35$rXx () Int)
(declare-fun VV$35$$35$F$35$$35$221 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1714 () Int)
(declare-fun VV$35$$35$3765 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2522 () Int)
(declare-fun VV$35$$35$F$35$$35$144 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2321 () Int)
(declare-fun VV$35$$35$F$35$$35$89 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1782 () Real)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2581 () Int)
(declare-fun VV$35$$35$1493 () Real)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$x$35$$35$a2l5$35$$35$k_$35$$35$3030 () Int)
(declare-fun VV$35$$35$F$35$$35$247 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2802$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2607 () Int)
(declare-fun VV$35$$35$2072 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2810 () Int)
(declare-fun wp2$35$$35$a2lm () Int)
(declare-fun VV$35$$35$3491 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2766 () Int)
(declare-fun VV$35$$35$3693 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1017 () Int)
(declare-fun VV$35$$35$3297 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_tmp$36$x$35$$35$2736 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_tmp$36$x$35$$35$2417 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_tmp$36$x$35$$35$1405 () Int)
(declare-fun VV$35$$35$3141 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2668 () Int)
(declare-fun VV$35$$35$1204 () Real)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1678 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2565 () Int)
(declare-fun VV$35$$35$F$35$$35$238 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sx$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$805 () Int)
(declare-fun VV$35$$35$1420 () Int)
(declare-fun VV$35$$35$3602 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rO$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2607 () Int)
(declare-fun VV$35$$35$3400 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2301 () Int)
(declare-fun sz$35$$35$a2li () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$762 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$3206 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$788 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_anf$36$$35$$35$d2sm () Int)
(declare-fun VV$35$$35$3620 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_tmp$36$x$35$$35$2280 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1110 () Int)
(declare-fun VV$35$$35$3703 () Real)
(declare-fun VV$35$$35$3224 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$2080 () Real)
(declare-fun ds_d2rs () Int)
(declare-fun VV$35$$35$2317 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$740 () Int)
(declare-fun Data.Tuple.fst$35$$35$0F () Int)
(declare-fun VV$35$$35$3279 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$3030 () Int)
(declare-fun VV$35$$35$1446 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_tmp$36$x$35$$35$1090 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$906 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$805 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2908 () Int)
(declare-fun VV$35$$35$3845 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1776 () Int)
(declare-fun VV$35$$35$3922 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$xs$35$$35$a2kK$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2779 () Int)
(declare-fun VV$35$$35$3229 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_tmp$36$x$35$$35$1840 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$3030 () Int)
(declare-fun VV$35$$35$3274 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$762 () Int)
(declare-fun VV$35$$35$1920 () Real)
(declare-fun VV$35$$35$1416 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1832 () Real)
(declare-fun VV$35$$35$3801 () Int)
(declare-fun lq_anf$36$$35$$35$d2ry () Int)
(declare-fun VV$35$$35$3616 () Real)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1051 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2880 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rO$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1757 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$2006 () Real)
(declare-fun VV$35$$35$F$35$$35$136 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2960 () Int)
(declare-fun VV$35$$35$3669 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2502 () Int)
(declare-fun VV$35$$35$1452 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2315 () Int)
(declare-fun VV$35$$35$3472 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2472 () Int)
(declare-fun VV$35$$35$3199 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2584 () Int)
(declare-fun VV$35$$35$2679 () Real)
(declare-fun VV$35$$35$F$35$$35$316 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2584 () Int)
(declare-fun VV$35$$35$2778 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2755$35$$35$k_$35$$35$2791 () Int)
(declare-fun VV$35$$35$2505 () Int)
(declare-fun VV$35$$35$F$35$$35$15 () Int)
(declare-fun VV$35$$35$3111 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$2080 () Int)
(declare-fun ds_d2rn () Int)
(declare-fun lq_anf$36$$35$$35$d2sp () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sj$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_tmp$36$x$35$$35$2061 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_anf$36$$35$$35$d2rI () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2584 () Int)
(declare-fun VV$35$$35$3786 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2757 () Int)
(declare-fun VV$35$$35$F$35$$35$73 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2960 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$VV$35$$35$3092$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$F$35$$35$334 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1911 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1927 () Real)
(declare-fun lq_tmp$36$x$35$$35$2870 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1917 () Int)
(declare-fun VV$35$$35$2899 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2782 () Int)
(declare-fun py$35$$35$a2kC () Int)
(declare-fun VV$35$$35$2541 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$xs$35$$35$a2kK$35$$35$k_$35$$35$906 () Int)
(declare-fun VV$35$$35$F$35$$35$352 () Int)
(declare-fun VV$35$$35$1946 () Real)
(declare-fun x_Tuple63 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1782 () Real)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1714 () Int)
(declare-fun VV$35$$35$1939 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1996 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sq$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2991 () Int)
(declare-fun VV$35$$35$3867 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1792 () Int)
(declare-fun x_Tuple41 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1792 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2su$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2963 () Int)
(declare-fun KMeans.nearest$35$$35$r1KY () Int)
(declare-fun VV$35$$35$1847 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2311 () Int)
(declare-fun VV$35$$35$3818 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_anf$36$$35$$35$d2s0 () Int)
(declare-fun lq_karg$36$n$35$$35$a2kG$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$F$35$$35$253 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kI$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_anf$36$$35$$35$d2rY () Real)
(declare-fun lq_tmp$36$x$35$$35$2645 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1467 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1447 () Int)
(declare-fun VV$35$$35$3283 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_tmp$36$x$35$$35$2227 () Real)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$778 () Int)
(declare-fun VV$35$$35$3687 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2755$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2472 () Int)
(declare-fun GHC.Types.LT$35$$35$6S () Int)
(declare-fun VV$35$$35$3328 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2683 () Int)
(declare-fun VV$35$$35$3155 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1678 () Real)
(declare-fun VV$35$$35$F$35$$35$48 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$2006 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2431 () Int)
(declare-fun VV$35$$35$3890 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$2606 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1776 () Real)
(declare-fun VV$35$$35$2404 () Int)
(declare-fun VV$35$$35$F$35$$35$37 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1757 () Real)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2331 () Int)
(declare-fun VV$35$$35$3717 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1105 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2766 () Int)
(declare-fun VV$35$$35$F$35$$35$149 () Int)
(declare-fun VV$35$$35$3450 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1996 () Int)
(declare-fun VV$35$$35$3180 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1927 () Int)
(declare-fun VV$35$$35$1553 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1063 () Int)
(declare-fun VV$35$$35$2796 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2315 () Int)
(declare-fun VV$35$$35$3735 () Real)
(declare-fun VV$35$$35$F$35$$35$150 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1105 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$788 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1685 () Int)
(declare-fun VV$35$$35$3753 () Real)
(declare-fun lq_karg$36$k$35$$35$a2l1$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1782 () Real)
(declare-fun lq_tmp$36$x$35$$35$962 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1063 () Int)
(declare-fun VV$35$$35$3551 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1017 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1721 () Real)
(declare-fun VV$35$$35$3771 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1927 () Int)
(declare-fun px$35$$35$a2kB () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2568 () Int)
(declare-fun GHC.Classes.D$58$Ord$35$$35$ryJ () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1848 () Real)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1911 () Int)
(declare-fun VV$35$$35$2816 () Int)
(declare-fun VV$35$$35$F$35$$35$157 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2428 () Int)
(declare-fun VV$35$$35$3699 () Int)
(declare-fun lq_karg$36$VV$35$$35$2692$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1917 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2se$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_tmp$36$x$35$$35$1029 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2ry$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sm$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2331 () Int)
(declare-fun GHC.Prim.$62$$61$$35$$35$$35$9n () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sq$35$$35$k_$35$$35$2607 () Int)
(declare-fun VV$35$$35$3529 () Int)
(declare-fun VV$35$$35$3251 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_tmp$36$x$35$$35$1902 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2791 () Int)
(declare-fun VV$35$$35$3925 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2773 () Int)
(declare-fun VV$35$$35$915 () Int)
(declare-fun VV$35$$35$850 () Int)
(declare-fun VV$35$$35$1631 () Real)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$788 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1678 () Int)
(declare-fun VV$35$$35$1804 () Real)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1685 () Int)
(declare-fun VV$35$$35$3086 () Real)
(declare-fun VV$35$$35$3431 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_tmp$36$x$35$$35$1333 () Real)
(declare-fun lq_tmp$36$x$35$$35$2303 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$983 () Int)
(declare-fun VV$35$$35$1411 () Int)
(declare-fun lq_anf$36$$35$$35$d2sg () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1721 () Int)
(declare-fun VV$35$$35$3907 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2487 () Int)
(declare-fun VV$35$$35$3709 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1685 () Real)
(declare-fun VV$35$$35$3215 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2565 () Int)
(declare-fun VV$35$$35$3611 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$2080 () Int)
(declare-fun VV$35$$35$2294 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$VV$35$$35$2521$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$3413 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1838 () Real)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$816 () Int)
(declare-fun VV$35$$35$3237 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1750 () Real)
(declare-fun lq_tmp$36$x$35$$35$1083 () Int)
(declare-fun papp4 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2295 () Int)
(declare-fun VV$35$$35$2935 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2522 () Int)
(declare-fun VV$35$$35$F$35$$35$131 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1365 () Int)
(declare-fun VV$35$$35$3633 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1000 () Int)
(declare-fun lq_karg$36$VV$35$$35$2430$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_anf$36$$35$$35$d2sw () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2673 () Int)
(declare-fun VV$35$$35$F$35$$35$311 () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2677 () Int)
(declare-fun VV$35$$35$3314 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_tmp$36$x$35$$35$1056 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_tmp$36$x$35$$35$1276 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$778 () Int)
(declare-fun VV$35$$35$1756 () Int)
(declare-fun VV$35$$35$F$35$$35$333 () Int)
(declare-fun VV$35$$35$F$35$$35$74 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$3093 () Int)
(declare-fun VV$35$$35$3336 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1714 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1848 () Int)
(declare-fun VV$35$$35$2564 () Int)
(declare-fun x_Tuple64 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2776 () Int)
(declare-fun VV$35$$35$F$35$$35$355 () Int)
(declare-fun lq_karg$36$VV$35$$35$787$35$$35$k_$35$$35$778 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2668 () Int)
(declare-fun VV$35$$35$F$35$$35$56 () Int)
(declare-fun VV$35$$35$2667 () Int)
(declare-fun lq_tmp$36$x$35$$35$2338 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2788 () Int)
(declare-fun VV$35$$35$1408 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2502 () Int)
(declare-fun VV$35$$35$2689 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_tmp$36$x$35$$35$1784 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sf$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$983 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1792 () Int)
(declare-fun VV$35$$35$3943 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2880 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_anf$36$$35$$35$d2s7 () Int)
(declare-fun GHC.Types.GT$35$$35$6W () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1000 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1105 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$2073 () Int)
(declare-fun size () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1063 () Int)
(declare-fun lq_karg$36$wp1$35$$35$a2ll$35$$35$k_$35$$35$2315 () Int)
(declare-fun k$35$$35$a2kF () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$805 () Int)
(declare-fun VV$35$$35$3170 () Int)
(declare-fun VV$35$$35$F$35$$35$276 () Int)
(declare-fun lq_karg$36$VV$35$$35$2310$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2565 () Int)
(declare-fun VV$35$$35$3482 () Real)
(declare-fun lq_tmp$36$x$35$$35$1175 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1017 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1832 () Int)
(declare-fun VV$35$$35$2421 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_tmp$36$x$35$$35$2527 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2512 () Int)
(declare-fun List.$58$$43$$58$$35$$35$rXp () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2402 () Int)
(declare-fun VV$35$$35$F$35$$35$308 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2080 () Int)
(declare-fun VV$35$$35$2025 () Real)
(declare-fun VV$35$$35$3350 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$2080 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$2073 () Real)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun lq_karg$36$ds_d2rm$35$$35$k_$35$$35$2957 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1750 () Real)
(declare-fun lq_karg$36$p1$35$$35$a2kT$35$$35$k_$35$$35$2263 () Int)
(declare-fun VV$35$$35$3897 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$2073 () Int)
(declare-fun VV$35$$35$3134 () Real)
(declare-fun VV$35$$35$2304 () Real)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1467 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2954 () Int)
(declare-fun VV$35$$35$3457 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2960 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$739 () Real)
(declare-fun VV$35$$35$F$35$$35$113 () Int)
(declare-fun VV$35$$35$3512 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2574 () Int)
(declare-fun k$35$$35$a2l9 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$3574 () Real)
(declare-fun VV$35$$35$3385 () Int)
(declare-fun lq_karg$36$VV$35$$35$2330$35$$35$k_$35$$35$2321 () Int)
(declare-fun VV$35$$35$F$35$$35$83 () Int)
(declare-fun VV$35$$35$3677 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1714 () Real)
(declare-fun VV$35$$35$F$35$$35$175 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1990 () Int)
(declare-fun VV$35$$35$2593 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2755$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1996 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2479 () Int)
(declare-fun VV$35$$35$F$35$$35$60 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1105 () Int)
(declare-fun VV$35$$35$2471 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1776 () Int)
(declare-fun VV$35$$35$2028 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2887 () Int)
(declare-fun VV$35$$35$2570 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$778 () Int)
(declare-fun VV$35$$35$3139 () Int)
(declare-fun lq_karg$36$n$35$$35$a2kG$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1721 () Real)
(declare-fun VV$35$$35$3795 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2794 () Int)
(declare-fun VV$35$$35$F$35$$35$42 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1017 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1714 () Real)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$1112$35$$35$k_$35$$35$1110 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2386 () Int)
(declare-fun VV$35$$35$3597 () Real)
(declare-fun lq_karg$36$p$35$$35$a2kI$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$1107$35$$35$k_$35$$35$1105 () Int)
(declare-fun VV$35$$35$2381 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sj$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1911 () Int)
(declare-fun VV$35$$35$3658 () Real)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2957 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$3090 () Int)
(declare-fun n$35$$35$a2la () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$2073 () Real)
(declare-fun VV$35$$35$F$35$$35$143 () Int)
(declare-fun lq_tmp$36$x$35$$35$1767 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$906 () Int)
(declare-fun lq_karg$36$k$35$$35$a2kF$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2080 () Int)
(declare-fun VV$35$$35$1364 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2270 () Int)
(declare-fun VV$35$$35$3164 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_tmp$36$x$35$$35$1107 () Int)
(declare-fun VV$35$$35$3759 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1757 () Int)
(declare-fun VV$35$$35$3496 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2817 () Int)
(declare-fun VV$35$$35$3290 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2768$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1110 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2295 () Int)
(declare-fun VV$35$$35$1999 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sq$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2673 () Int)
(declare-fun VV$35$$35$3407 () Int)
(declare-fun VV$35$$35$3524 () Int)
(declare-fun lq_karg$36$ds_d2rn$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2506 () Int)
(declare-fun VV$35$$35$3928 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1917 () Real)
(declare-fun GHC.Types.D$35$$35$$35$66 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2779 () Int)
(declare-fun VV$35$$35$3605 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1034 () Int)
(declare-fun VV$35$$35$3201 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$F$35$$35$125 () Int)
(declare-fun VV$35$$35$3461 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2565 () Int)
(declare-fun autolen () Int)
(declare-fun lq_anf$36$$35$$35$d2sj () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2506 () Int)
(declare-fun List.map$35$$35$rXB () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2487 () Int)
(declare-fun VV$35$$35$3829 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1017 () Int)
(declare-fun VV$35$$35$2310 () Int)
(declare-fun GHC.Types.I$35$$35$$35$6c () Int)
(declare-fun VV$35$$35$3627 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$805 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_tmp$36$x$35$$35$1097 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1034 () Int)
(declare-fun VV$35$$35$3506 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1685 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1996 () Int)
(declare-fun VV$35$$35$3560 () Real)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1838 () Real)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2880 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1792 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1776 () Real)
(declare-fun VV$35$$35$3193 () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$906 () Int)
(declare-fun VV$35$$35$F$35$$35$97 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$788 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$986 () Int)
(declare-fun VV$35$$35$2587 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1757 () Int)
(declare-fun VV$35$$35$3478 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1848 () Int)
(declare-fun x_Tuple52 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$2073 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2565 () Int)
(declare-fun VV$35$$35$3319 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2887 () Int)
(declare-fun VV$35$$35$2772 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2se$35$$35$k_$35$$35$2080 () Int)
(declare-fun xs$35$$35$a2kK () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1750 () Real)
(declare-fun VV$35$$35$F$35$$35$79 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2315 () Int)
(declare-fun VV$35$$35$2398 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1051 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2st$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1990 () Int)
(declare-fun List.foldr$35$$35$rXE () Int)
(declare-fun VV$35$$35$3092 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$3245 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2950 () Int)
(declare-fun VV$35$$35$787 () Int)
(declare-fun VV$35$$35$3425 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$950 () Int)
(declare-fun VV$35$$35$2486 () Int)
(declare-fun lq_karg$36$VV$35$$35$2521$35$$35$k_$35$$35$2506 () Int)
(declare-fun VV$35$$35$3267 () Int)
(declare-fun lq_tmp$36$x$35$$35$1853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1848 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1917 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2960 () Int)
(declare-fun VV$35$$35$3120 () Int)
(declare-fun VV$35$$35$2031 () Int)
(declare-fun VV$35$$35$2277 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_anf$36$$35$$35$d2rS () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1792 () Int)
(declare-fun VV$35$$35$2534 () Real)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun VV$35$$35$3918 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1911 () Int)
(declare-fun VV$35$$35$F$35$$35$287 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$n2$35$$35$a2kU$35$$35$k_$35$$35$2270 () Int)
(declare-fun VV$35$$35$F$35$$35$252 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2080 () Int)
(declare-fun VV$35$$35$1684 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2880 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_anf$36$$35$$35$d2rX () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2331 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_anf$36$$35$$35$d2s1 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$2006 () Real)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2773 () Int)
(declare-fun VV$35$$35$3484 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_tmp$36$x$35$$35$1036 () Int)
(declare-fun lq_karg$36$wp1$35$$35$a2ll$35$$35$k_$35$$35$2331 () Int)
(declare-fun VV$35$$35$3176 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1024 () Int)
(declare-fun null () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2880 () Int)
(declare-fun VV$35$$35$2018 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1927 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1792 () Real)
(declare-fun lq_tmp$36$x$35$$35$1731 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2760 () Int)
(declare-fun VV$35$$35$2427 () Int)
(declare-fun lq_karg$36$VV$35$$35$2430$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$VV$35$$35$1033$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2321 () Int)
(declare-fun VV$35$$35$3356 () Real)
(declare-fun VV$35$$35$1749 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sk$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1721 () Int)
(declare-fun GHC.Classes.$36$fOrdDouble$35$$35$ren () Int)
(declare-fun lq_tmp$36$x$35$$35$2024 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1110 () Int)
(declare-fun VV$35$$35$3132 () Int)
(declare-fun VV$35$$35$F$35$$35$49 () Int)
(declare-fun VV$35$$35$1310 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1848 () Real)
(declare-fun VV$35$$35$3769 () Int)
(declare-fun VV$35$$35$F$35$$35$115 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2903 () Int)
(declare-fun VV$35$$35$F$35$$35$148 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$983 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1024 () Int)
(declare-fun VV$35$$35$1183 () Real)
(declare-fun VV$35$$35$1785 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1721 () Int)
(declare-fun VV$35$$35$3514 () Int)
(declare-fun lq_tmp$36$x$35$$35$927 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1063 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1105 () Int)
(declare-fun VV$35$$35$3653 () Real)
(declare-fun VV$35$$35$3572 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2963 () Int)
(declare-fun Data.Map.Base.map$35$$35$r1ve () Int)
(declare-fun VV$35$$35$F$35$$35$173 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1782 () Real)
(declare-fun VV$35$$35$3671 () Real)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$F$35$$35$85 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$916 () Int)
(declare-fun VV$35$$35$2320 () Int)
(declare-fun VV$35$$35$3383 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1996 () Int)
(declare-fun sizeN () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1911 () Real)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2se$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1678 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1379 () Int)
(declare-fun VV$35$$35$F$35$$35$151 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1776 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$41$$35$$35$7a () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1034 () Int)
(declare-fun lq_karg$36$VV$35$$35$2778$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1832 () Real)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$982 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2995 () Int)
(declare-fun VV$35$$35$1992 () Real)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$k$35$$35$a2kF$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$906 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2957 () Int)
(declare-fun fix$36$$36$dOrd_a2n0 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$809 () Int)
(declare-fun VV$35$$35$3257 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1467 () Int)
(declare-fun VV$35$$35$1280 () Real)
(declare-fun VV$35$$35$3822 () Real)
(declare-fun VV$35$$35$3437 () Int)
(declare-fun lq_karg$36$VV$35$$35$2606$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1792 () Int)
(declare-fun VV$35$$35$3901 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_anf$36$$35$$35$d2sa () Int)
(declare-fun lq_tmp$36$x$35$$35$783 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1927 () Real)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1467 () Int)
(declare-fun VV$35$$35$3448 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2995 () Int)
(declare-fun VV$35$$35$3213 () Real)
(declare-fun VV$35$$35$3415 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2506 () Int)
(declare-fun VV$35$$35$3536 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2270 () Int)
(declare-fun VV$35$$35$2809 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1721 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1848 () Int)
(declare-fun VV$35$$35$3549 () Int)
(declare-fun VV$35$$35$2876 () Real)
(declare-fun papp2 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$960 () Int)
(declare-fun VV$35$$35$3635 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2960 () Int)
(declare-fun VV$35$$35$3231 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1105 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1750 () Int)
(declare-fun VV$35$$35$F$35$$35$137 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$805 () Int)
(declare-fun GHC.Prim.$62$$35$$35$$35$9m () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1757 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_anf$36$$35$$35$d2sq () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2950 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$2080 () Int)
(declare-fun VV$35$$35$3312 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2st$35$$35$k_$35$$35$3030 () Int)
(declare-fun VV$35$$35$F$35$$35$335 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$906 () Int)
(declare-fun VV$35$$35$3330 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_anf$36$$35$$35$d2rH () Int)
(declare-fun VV$35$$35$3585 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$centers$35$$35$a2kH$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$977 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2l3$35$$35$k_$35$$35$3093 () Int)
(declare-fun x_Tuple62 () Int)
(declare-fun lq_tmp$36$x$35$$35$2952 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1063 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1757 () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1776 () Int)
(declare-fun xcmp () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$3090 () Int)
(declare-fun VV$35$$35$3580 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_tmp$36$x$35$$35$1275 () Real)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$ds_d2rp$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1911 () Real)
(declare-fun VV$35$$35$3782 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1000 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2693 () Int)
(declare-fun VV$35$$35$2567 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2382 () Int)
(declare-fun VV$35$$35$1942 () Int)
(declare-fun lq_karg$36$VV$35$$35$2606$35$$35$k_$35$$35$2568 () Int)
(declare-fun KMeans.mergeCluster$35$$35$r1L2 () Int)
(declare-fun VV$35$$35$2664 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1110 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$VV$35$$35$2692$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1714 () Real)
(declare-fun VV$35$$35$F$35$$35$356 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$762 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1990 () Int)
(declare-fun VV$35$$35$3269 () Int)
(declare-fun VV$35$$35$F$35$$35$374 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2315 () Int)
(declare-fun VV$35$$35$2765 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1721 () Real)
(declare-fun VV$35$$35$1681 () Real)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2331 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2800 () Int)
(declare-fun steps$35$$35$a2l0 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2se$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2487 () Int)
(declare-fun VV$35$$35$F$35$$35$257 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_anf$36$$35$$35$d2s4 () Int)
(declare-fun lq_karg$36$sz$35$$35$a2kY$35$$35$k_$35$$35$740 () Int)
(declare-fun VV$35$$35$2518 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_tmp$36$x$35$$35$1437 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$977 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$975$35$$35$k_$35$$35$986 () Int)
(declare-fun VV$35$$35$F$35$$35$275 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$3084 () Int)
(declare-fun VV$35$$35$3683 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_tmp$36$x$35$$35$2407 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2472 () Int)
(declare-fun VV$35$$35$3151 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1832 () Real)
(declare-fun VV$35$$35$3137 () Int)
(declare-fun lq_karg$36$VV$35$$35$1050$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$VV$35$$35$1068$35$$35$k_$35$$35$1063 () Int)
(declare-fun VV$35$$35$3894 () Int)
(declare-fun lq_karg$36$ds_d2rm$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1832 () Int)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_karg$36$centers$35$$35$a2kH$35$$35$k_$35$$35$1453 () Int)
(declare-fun VV$35$$35$3371 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2991 () Int)
(declare-fun p1$35$$35$a2kO () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2668 () Int)
(declare-fun VV$35$$35$F$35$$35$110 () Int)
(declare-fun VV$35$$35$2307 () Int)
(declare-fun VV$35$$35$3656 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1714 () Int)
(declare-fun VV$35$$35$3713 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2957 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$788 () Int)
(declare-fun ps$35$$35$a2lb () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$805 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$809 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sf$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_tmp$36$x$35$$35$922 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2565 () Int)
(declare-fun VV$35$$35$3731 () Real)
(declare-fun lq_tmp$36$x$35$$35$900 () Int)
(declare-fun VV$35$$35$F$35$$35$80 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_tmp$36$x$35$$35$2658 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$n1$35$$35$a2kS$35$$35$k_$35$$35$2270 () Int)
(declare-fun VV$35$$35$3184 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$k$35$$35$a2kF$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$2590 () Real)
(declare-fun VV$35$$35$3498 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1685 () Int)
(declare-fun p0$35$$35$a2kN () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$3555 () Real)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2519 () Int)
(declare-fun fromJust () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2331 () Int)
(declare-fun VV$35$$35$F$35$$35$213 () Int)
(declare-fun VV$35$$35$3757 () Real)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1678 () Real)
(declare-fun VV$35$$35$3775 () Int)
(declare-fun lq_karg$36$VV$35$$35$2778$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1792 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2685$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$977 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1990 () Real)
(declare-fun lq_karg$36$sz$35$$35$a2kY$35$$35$k_$35$$35$762 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1990 () Int)
(declare-fun VV$35$$35$3409 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2270 () Int)
(declare-fun VV$35$$35$2949 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2382 () Int)
(declare-fun Data.OldList.groupBy$35$$35$r1Kw () Int)
(declare-fun VV$35$$35$2378 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$2073 () Int)
(declare-fun VV$35$$35$1087 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_tmp$36$x$35$$35$1866 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1792 () Int)
(declare-fun VV$35$$35$3841 () Real)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_anf$36$$35$$35$d2sd () Int)
(declare-fun VV$35$$35$1528 () Real)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1990 () Int)
(declare-fun VV$35$$35$3827 () Int)
(declare-fun VV$35$$35$3508 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$1807 () Int)
(declare-fun VV$35$$35$3629 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1750 () Int)
(declare-fun VV$35$$35$F$35$$35$109 () Int)
(declare-fun lq_tmp$36$x$35$$35$1945 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$809 () Int)
(declare-fun VV$35$$35$2297 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$VV$35$$35$804$35$$35$k_$35$$35$788 () Int)
(declare-fun VV$35$$35$3805 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1750 () Int)
(declare-fun VV$35$$35$F$35$$35$8 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$VV$35$$35$2790$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1000 () Int)
(declare-fun papp7 () Int)
(declare-fun VV$35$$35$F$35$$35$99 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2311 () Int)
(declare-fun VV$35$$35$2873 () Int)
(declare-fun VV$35$$35$3476 () Real)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1848 () Real)
(declare-fun lq_tmp$36$x$35$$35$1055 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2890 () Int)
(declare-fun VV$35$$35$2501 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2779 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$41$$35$$35$78 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$F$35$$35$312 () Int)
(declare-fun lq_tmp$36$x$35$$35$2913 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2817 () Int)
(declare-fun VV$35$$35$3317 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1750 () Real)
(declare-fun VV$35$$35$3115 () Int)
(declare-fun lq_anf$36$$35$$35$d2st () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$n$35$$35$a2l2$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2301 () Int)
(declare-fun KMeans.centroid$35$$35$r1L3 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2950 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rO$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1034 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1017 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1848 () Int)
(declare-fun VV$35$$35$1440 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_anf$36$$35$$35$d2sk () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1412 () Int)
(declare-fun VV$35$$35$3705 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2395 () Int)
(declare-fun VV$35$$35$2902 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1051 () Int)
(declare-fun VV$35$$35$3727 () Real)
(declare-fun VV$35$$35$3219 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1467 () Int)
(declare-fun VV$35$$35$3442 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1017 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2957 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1073 () Int)
(declare-fun VV$35$$35$3741 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$3543 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$2803 () Real)
(declare-fun VV$35$$35$F$35$$35$96 () Int)
(declare-fun VV$35$$35$3662 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2389 () Int)
(declare-fun VV$35$$35$2784 () Real)
(declare-fun VV$35$$35$F$35$$35$7 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2890 () Int)
(declare-fun VV$35$$35$3390 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1996 () Int)
(declare-fun VV$35$$35$1778 () Real)
(declare-fun VV$35$$35$2672 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2880 () Int)
(declare-fun VV$35$$35$3875 () Int)
(declare-fun x_Tuple53 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$788 () Int)
(declare-fun GHC.Float.$36$fFloatingDouble$35$$35$rd4 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$centers$35$$35$a2kH$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_tmp$36$x$35$$35$853 () Int)
(declare-fun VV$35$$35$3857 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2331 () Int)
(declare-fun VV$35$$35$3831 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1069 () Int)
(declare-fun VV$35$$35$1811 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_tmp$36$x$35$$35$2895 () Int)
(declare-fun VV$35$$35$3930 () Real)
(declare-fun VV$35$$35$1910 () Int)
(declare-fun lq_karg$36$xs$35$$35$a2kK$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2936 () Int)
(declare-fun VV$35$$35$801 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1776 () Real)
(declare-fun lq_tmp$36$x$35$$35$790 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2502 () Int)
(declare-fun VV$35$$35$F$35$$35$197 () Int)
(declare-fun lq_karg$36$ds_d2rm$35$$35$k_$35$$35$2960 () Int)
(declare-fun lq_tmp$36$x$35$$35$2729 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sk$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_anf$36$$35$$35$d2rR () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$809 () Int)
(declare-fun VV$35$$35$3367 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1714 () Real)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$2073 () Real)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$1101 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2565 () Int)
(declare-fun VV$35$$35$1761 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_tmp$36$x$35$$35$1043 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2479 () Int)
(declare-fun VV$35$$35$3301 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1685 () Real)
(declare-fun VV$35$$35$3288 () Int)
(declare-fun lq_karg$36$k$35$$35$a2kF$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2690 () Int)
(declare-fun p$35$$35$a2kQ () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2487 () Int)
(declare-fun VV$35$$35$3323 () Real)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2950 () Int)
(declare-fun VV$35$$35$2232 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1750 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1034 () Int)
(declare-fun lq_karg$36$steps$35$$35$a2l0$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2581 () Int)
(declare-fun VV$35$$35$F$35$$35$43 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2397$35$$35$k_$35$$35$2402 () Int)
(declare-fun x_Tuple71 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1917 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1996 () Real)
(declare-fun VV$35$$35$F$35$$35$142 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2su$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1421 () Int)
(declare-fun VV$35$$35$3763 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2502 () Int)
(declare-fun VV$35$$35$3578 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$977 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1838 () Int)
(declare-fun Data.Foldable.minimumBy$35$$35$r1KO () Int)
(declare-fun lq_tmp$36$x$35$$35$2657 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$n2$35$$35$a2kU$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$ds_d2rp$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1996 () Int)
(declare-fun VV$35$$35$3695 () Int)
(declare-fun lq_tmp$36$x$35$$35$2576 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1063 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1110 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2581 () Int)
(declare-fun VV$35$$35$3345 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_tmp$36$x$35$$35$2613 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1051 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2693 () Int)
(declare-fun VV$35$$35$1725 () Real)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1838 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1776 () Int)
(declare-fun VV$35$$35$3147 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$3294 () Real)
(declare-fun fldList () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$762 () Int)
(declare-fun VV$35$$35$F$35$$35$219 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1073 () Int)
(declare-fun VV$35$$35$3160 () Int)
(declare-fun lq_tmp$36$x$35$$35$2768 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2502 () Int)
(declare-fun List.empty$35$$35$rXw () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2301 () Int)
(declare-fun VV$35$$35$1720 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1776 () Int)
(declare-fun VV$35$$35$3340 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$2080 () Real)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$1075$35$$35$k_$35$$35$1073 () Int)
(declare-fun p$35$$35$a2lk () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$805 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1750 () Int)
(declare-fun VV$35$$35$3403 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2389 () Int)
(declare-fun Data.Map.Base.fromList$35$$35$r1vB () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$3030 () Int)
(declare-fun VV$35$$35$3520 () Int)
(declare-fun lq_karg$36$ds_d2rn$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_anf$36$$35$$35$d2sn () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_tmp$36$x$35$$35$1695 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1447 () Int)
(declare-fun VV$35$$35$3465 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1750 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1453 () Int)
(declare-fun ds_d2rp () Int)
(declare-fun VV$35$$35$2314 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$816 () Int)
(declare-fun VV$35$$35$3502 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$977 () Int)
(declare-fun p2$35$$35$a2kV () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$778 () Int)
(declare-fun GHC.Prim.$45$$35$$35$$35$99 () Int)
(declare-fun VV$35$$35$3618 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_anf$36$$35$$35$d2rw () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1685 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2794 () Int)
(declare-fun VV$35$$35$F$35$$35$165 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1365 () Int)
(declare-fun VV$35$$35$2583 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1714 () Real)
(declare-fun lq_karg$36$VV$35$$35$2790$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$2806 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1110 () Int)
(declare-fun VV$35$$35$3197 () Int)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1000 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2880 () Int)
(declare-fun VV$35$$35$2879 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$n1$35$$35$a2kS$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2773 () Int)
(declare-fun VV$35$$35$F$35$$35$318 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2890 () Int)
(declare-fun VV$35$$35$F$35$$35$345 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$k$35$$35$a2kF$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1911 () Int)
(declare-fun cs$35$$35$a2lc () Int)
(declare-fun VV$35$$35$3788 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2se$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2st$35$$35$k_$35$$35$2995 () Int)
(declare-fun VV$35$$35$F$35$$35$291 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_anf$36$$35$$35$d2rG () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2960 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1917 () Int)
(declare-fun VV$35$$35$3241 () Real)
(declare-fun VV$35$$35$1814 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1776 () Real)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$2080 () Real)
(declare-fun VV$35$$35$3816 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$788 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2963 () Int)
(declare-fun VV$35$$35$3869 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$xs$35$$35$a2kK$35$$35$k_$35$$35$809 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2487 () Int)
(declare-fun VV$35$$35$804 () Int)
(declare-fun VV$35$$35$3421 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2887 () Int)
(declare-fun VV$35$$35$F$35$$35$20 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_anf$36$$35$$35$d2rW () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1917 () Int)
(declare-fun VV$35$$35$1104 () Int)
(declare-fun VV$35$$35$3124 () Int)
(declare-fun VV$35$$35$1764 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$809 () Int)
(declare-fun VV$35$$35$3689 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_karg$36$VV$35$$35$2430$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$centers$35$$35$a2kH$35$$35$k_$35$$35$1365 () Int)
(declare-fun VV$35$$35$3326 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1996 () Real)
(declare-fun VV$35$$35$F$35$$35$64 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2908 () Int)
(declare-fun VV$35$$35$3359 () Int)
(declare-fun VV$35$$35$2475 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1838 () Real)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2506 () Int)
(declare-fun VV$35$$35$F$35$$35$46 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$983 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_karg$36$VV$35$$35$959$35$$35$k_$35$$35$950 () Int)
(declare-fun x_Tuple74 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2584 () Int)
(declare-fun VV$35$$35$F$35$$35$39 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1721 () Int)
(declare-fun VV$35$$35$2385 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1714 () Int)
(declare-fun VV$35$$35$3593 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2817 () Int)
(declare-fun VV$35$$35$3719 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2957 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kI$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_tmp$36$x$35$$35$975 () Int)
(declare-fun VV$35$$35$F$35$$35$147 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$983 () Int)
(declare-fun lq_karg$36$VV$35$$35$2778$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$n$35$$35$a2kG$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2331 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$778 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2936 () Int)
(declare-fun VV$35$$35$1692 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1051 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2se$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2389 () Int)
(declare-fun VV$35$$35$1781 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1000 () Int)
(declare-fun GHC.Real.$36$fIntegralInteger$35$$35$rCr () Int)
(declare-fun VV$35$$35$F$35$$35$111 () Int)
(declare-fun VV$35$$35$3455 () Int)
(declare-fun VV$35$$35$3510 () Int)
(declare-fun lq_karg$36$ds_d2rq$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1000 () Int)
(declare-fun VV$35$$35$3576 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2800 () Int)
(declare-fun VV$35$$35$F$35$$35$81 () Int)
(declare-fun lq_tmp$36$x$35$$35$2659 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$2324 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$3090 () Int)
(declare-fun VV$35$$35$2793 () Int)
(declare-fun VV$35$$35$3675 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_tmp$36$x$35$$35$901 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2773 () Int)
(declare-fun ps$35$$35$a2l3 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2472 () Int)
(declare-fun VV$35$$35$3387 () Real)
(declare-fun VV$35$$35$1574 () Real)
(declare-fun lq_karg$36$n$35$$35$a2kG$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_tmp$36$x$35$$35$967 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1911 () Int)
(declare-fun VV$35$$35$1068 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kI$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1911 () Real)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$ds_d2rn$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1051 () Int)
(declare-fun VV$35$$35$3149 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1832 () Real)
(declare-fun lq_karg$36$VV$35$$35$2889$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2690 () Int)
(declare-fun VV$35$$35$1284 () Real)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$3030 () Int)
(declare-fun VV$35$$35$1860 () Real)
(declare-fun lq_tmp$36$x$35$$35$2596 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2673 () Int)
(declare-fun VV$35$$35$3253 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_tmp$36$x$35$$35$2323 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_anf$36$$35$$35$d2se () Int)
(declare-fun lq_karg$36$n$35$$35$a2kW$35$$35$k_$35$$35$762 () Int)
(declare-fun lq_tmp$36$x$35$$35$2882 () Int)
(declare-fun lq_karg$36$xs$35$$35$a2kK$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1990 () Real)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$44$$44$$41$$35$$35$7e () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2950 () Int)
(declare-fun VV$35$$35$3271 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1792 () Real)
(declare-fun VV$35$$35$3433 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1714 () Int)
(declare-fun VV$35$$35$1677 () Int)
(declare-fun VV$35$$35$3411 () Real)
(declare-fun lq_karg$36$n$35$$35$a2l2$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$n$35$$35$a2kW$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$2073 () Int)
(declare-fun VV$35$$35$3729 () Real)
(declare-fun VV$35$$35$2692 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1678 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$778 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2991 () Int)
(declare-fun VV$35$$35$3217 () Int)
(declare-fun papp6 () Int)
(declare-fun VV$35$$35$3631 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun GHC.Num.$45$$35$$35$02B () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1441 () Int)
(declare-fun VV$35$$35$F$35$$35$98 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2800 () Int)
(declare-fun len () Int)
(declare-fun VV$35$$35$3235 () Real)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_tmp$36$x$35$$35$918 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_tmp$36$x$35$$35$2345 () Int)
(declare-fun lq_karg$36$VV$35$$35$1847$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2581 () Int)
(declare-fun VV$35$$35$F$35$$35$10 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2479 () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_anf$36$$35$$35$d2su () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1838 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_anf$36$$35$$35$d2rL () Real)
(declare-fun lq_tmp$36$x$35$$35$1919 () Int)
(declare-fun lq_tmp$36$x$35$$35$2064 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2584 () Int)
(declare-fun VV$35$$35$3859 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1832 () Int)
(declare-fun n$35$$35$a2kA () Int)
(declare-fun VV$35$$35$3334 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2386 () Int)
(declare-fun x_Tuple66 () Int)
(declare-fun lq_tmp$36$x$35$$35$1823 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2se$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$VV$35$$35$1926$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$VV$35$$35$2775$35$$35$k_$35$$35$2766 () Int)
(declare-fun VV$35$$35$F$35$$35$54 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1917 () Int)
(declare-fun Data.Foldable.length$35$$35$r1s () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2522 () Int)
(declare-fun VV$35$$35$2544 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$983 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2794 () Int)
(declare-fun x_Tuple44 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2331 () Int)
(declare-fun VV$35$$35$F$35$$35$375 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1848 () Real)
(declare-fun GHC.Prim.$61$$61$$35$$35$$35$9o () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1927 () Int)
(declare-fun VV$35$$35$F$35$$35$283 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$VV$35$$35$982$35$$35$k_$35$$35$977 () Int)
(declare-fun VV$35$$35$3862 () Real)
(declare-fun lq_tmp$36$x$35$$35$866 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2880 () Int)
(declare-fun VV$35$$35$3941 () Int)
(declare-fun lq_anf$36$$35$$35$d2s5 () Int)
(declare-fun VV$35$$35$F$35$$35$199 () Int)
(declare-fun xListSelector () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$778 () Int)
(declare-fun VV$35$$35$3369 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2311 () Int)
(declare-fun VV$35$$35$1482 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2757 () Int)
(declare-fun VV$35$$35$2418 () Real)
(declare-fun VV$35$$35$3172 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1714 () Int)
(declare-fun VV$35$$35$3480 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$906 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1685 () Real)
(declare-fun VV$35$$35$F$35$$35$274 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1990 () Real)
(declare-fun VV$35$$35$3352 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2331 () Int)
(declare-fun lq_karg$36$VV$35$$35$1791$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$1336 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2791 () Int)
(declare-fun VV$35$$35$2005 () Int)
(declare-fun VV$35$$35$2401 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2514$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2395 () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Int)
(declare-fun VV$35$$35$2603 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1721 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2683 () Int)
(declare-fun VV$35$$35$F$35$$35$378 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2519 () Int)
(declare-fun strLen () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2693 () Int)
(declare-fun VV$35$$35$3265 () Int)
(declare-fun VV$35$$35$2769 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1721 () Int)
(declare-fun VV$35$$35$2686 () Real)
(declare-fun VV$35$$35$3427 () Real)
(declare-fun VV$35$$35$3122 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2331 () Int)
(declare-fun VV$35$$35$2990 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_tmp$36$x$35$$35$2034 () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_anf$36$$35$$35$d2s8 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_anf$36$$35$$35$d2rQ () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2950 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_tmp$36$x$35$$35$3042 () Int)
(declare-fun lq_karg$36$ds_d2rm$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1927 () Int)
(declare-fun VV$35$$35$F$35$$35$279 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$VV$35$$35$2404$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1848 () Int)
(declare-fun VV$35$$35$3881 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1750 () Int)
(declare-fun GHC.Types.$91$$93$$35$$35$6m () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_karg$36$steps$35$$35$a2l0$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1990 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2880 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2991 () Int)
(declare-fun VV$35$$35$F$35$$35$62 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1996 () Int)
(declare-fun VV$35$$35$3595 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1927 () Int)
(declare-fun x_Tuple72 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2760 () Int)
(declare-fun VV$35$$35$3797 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1017 () Int)
(declare-fun VV$35$$35$F$35$$35$141 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$809 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$805 () Int)
(declare-fun lq_karg$36$n$35$$35$a2kG$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$VV$35$$35$2778$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kI$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$VV$35$$35$2330$35$$35$k_$35$$35$2315 () Int)
(declare-fun x$35$$35$a2kZ () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2690 () Int)
(declare-fun GHC.Num.$36$fNumInt$35$$35$rlQ () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1832 () Int)
(declare-fun VV$35$$35$1047 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_tmp$36$x$35$$35$2755 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1034 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$$35$$35$74 () Int)
(declare-fun VV$35$$35$3292 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$2006 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1782 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2890 () Int)
(declare-fun VV$35$$35$3166 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1060 () Int)
(declare-fun VV$35$$35$F$35$$35$158 () Int)
(declare-fun VV$35$$35$3494 () Real)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1848 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2331 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$n$35$$35$a2kG$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$wp1$35$$35$a2ll$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kI$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2690 () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2402 () Int)
(declare-fun x$35$$35$a2l5 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2270 () Int)
(declare-fun VV$35$$35$3526 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$983 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1685 () Int)
(declare-fun VV$35$$35$3607 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1776 () Int)
(declare-fun VV$35$$35$3405 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2607 () Int)
(declare-fun x$35$$35$a2kJ () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2995 () Int)
(declare-fun VV$35$$35$3504 () Real)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1441 () Int)
(declare-fun VV$35$$35$3463 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_anf$36$$35$$35$d2sh () Int)
(declare-fun VV$35$$35$3089 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2295 () Int)
(declare-fun VV$35$$35$1443 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1034 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$3221 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$2073 () Int)
(declare-fun Data.Map.Base.toList$35$$35$r1uJ () Int)
(declare-fun p2$35$$35$a2kP () Int)
(declare-fun VV$35$$35$F$35$$35$127 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2954 () Int)
(declare-fun VV$35$$35$3809 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1792 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$805 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1792 () Int)
(declare-fun VV$35$$35$2330 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2960 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$906 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2263 () Int)
(declare-fun KMeans.distance$35$$35$r1KX () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1927 () Int)
(declare-fun VV$35$$35$2787 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1927 () Real)
(declare-fun lq_karg$36$VV$35$$35$1446$35$$35$k_$35$$35$1441 () Int)
(declare-fun GHC.Float.$36$fNumDouble$35$$35$rdA () Int)
(declare-fun VV$35$$35$3191 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1051 () Int)
(declare-fun VV$35$$35$F$35$$35$95 () Int)
(declare-fun lq_tmp$36$x$35$$35$2698 () Int)
(declare-fun VV$35$$35$F$35$$35$163 () Int)
(declare-fun VV$35$$35$3540 () Real)
(declare-fun VV$35$$35$F$35$$35$4 () Int)
(declare-fun lq_tmp$36$x$35$$35$3079 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$788 () Int)
(declare-fun lq_karg$36$xs$35$$35$a2kK$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$F$35$$35$343 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sq$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1105 () Int)
(declare-fun lq_anf$36$$35$$35$d2sx () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$VV$35$$35$2427$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2se$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1721 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2950 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2817 () Int)
(declare-fun VV$35$$35$846 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1051 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_tmp$36$x$35$$35$1307 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$2576$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sg$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1757 () Real)
(declare-fun VV$35$$35$3247 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$1913 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1678 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$977 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2957 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_tmp$36$x$35$$35$828 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1757 () Int)
(declare-fun VV$35$$35$3853 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2668 () Int)
(declare-fun VV$35$$35$1873 () Int)
(declare-fun VV$35$$35$F$35$$35$290 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_anf$36$$35$$35$d2rF () Int)
(declare-fun VV$35$$35$1949 () Int)
(declare-fun VV$35$$35$959 () Int)
(declare-fun VV$35$$35$3934 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1750 () Real)
(declare-fun VV$35$$35$1620 () Real)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2788 () Int)
(declare-fun VV$35$$35$3835 () Real)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2389 () Int)
(declare-fun VV$35$$35$2483 () Real)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$1837 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$906 () Int)
(declare-fun VV$35$$35$3262 () Real)
(declare-fun VV$35$$35$1936 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$809 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$2080 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_anf$36$$35$$35$d2rV () Int)
(declare-fun lq_karg$36$n$35$$35$a2kG$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kI$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1792 () Int)
(declare-fun VV$35$$35$2430 () Int)
(declare-fun VV$35$$35$F$35$$35$21 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2957 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$centers$35$$35$a2kH$35$$35$k_$35$$35$1441 () Int)
(declare-fun VV$35$$35$3363 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1714 () Int)
(declare-fun VV$35$$35$1378 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2428 () Int)
(declare-fun VV$35$$35$2531 () Int)
(declare-fun Prop () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1685 () Real)
(declare-fun VV$35$$35$3305 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$916 () Int)
(declare-fun VV$35$$35$3886 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1911 () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1685 () Int)
(declare-fun GHC.Show.D$58$Show$35$$35$r11M () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1990 () Int)
(declare-fun VV$35$$35$3178 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_tmp$36$x$35$$35$2228 () Real)
(declare-fun VV$35$$35$2236 () Real)
(declare-fun VV$35$$35$F$35$$35$65 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2887 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1776 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$3030 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$44$$44$$44$$41$$35$$35$7c () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1917 () Int)
(declare-fun x_Tuple75 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1927 () Int)
(declare-fun VV$35$$35$3790 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$F$35$$35$223 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1051 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2506 () Int)
(declare-fun VV$35$$35$3767 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$809 () Int)
(declare-fun lq_tmp$36$x$35$$35$929 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1996 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2su$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$965 () Int)
(declare-fun VV$35$$35$F$35$$35$146 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2263 () Int)
(declare-fun k$35$$35$a2l1 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_tmp$36$x$35$$35$2550 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1782 () Int)
(declare-fun KMeans.kmeans$35$$35$r1L4 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1110 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2779 () Int)
(declare-fun VV$35$$35$2799 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_tmp$36$x$35$$35$758 () Real)
(declare-fun VV$35$$35$3691 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2431 () Int)
(declare-fun p1$35$$35$a2kT () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2512 () Int)
(declare-fun x1$35$$35$a2kL () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_tmp$36$x$35$$35$2514 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2574 () Int)
(declare-fun p$35$$35$a2lj () Int)
(declare-fun lq_tmp$36$x$35$$35$2617 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sq$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2402 () Int)
(declare-fun GHC.Classes.D$58$Eq$35$$35$rsR () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1838 () Real)
(declare-fun lq_tmp$36$x$35$$35$2011 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2903 () Int)
(declare-fun VV$35$$35$3143 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$3600 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1714 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$977 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2880 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1110 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$778 () Int)
(declare-fun VV$35$$35$3204 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1990 () Int)
(declare-fun VV$35$$35$3439 () Real)
(declare-fun VV$35$$35$3701 () Int)
(declare-fun VV$35$$35$3226 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1927 () Int)
(declare-fun ds_d2rq () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_anf$36$$35$$35$d2so () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_karg$36$VV$35$$35$2005$35$$35$k_$35$$35$1996 () Int)
(declare-fun VV$35$$35$3622 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$ds_d2rq$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$762 () Int)
(declare-fun VV$35$$35$3644 () Real)
(declare-fun lq_anf$36$$35$$35$d2rv () Int)
(declare-fun VV$35$$35$1466 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2776 () Int)
(declare-fun VV$35$$35$3446 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2880 () Int)
(declare-fun VV$35$$35$3723 () Int)
(declare-fun Assert.divide$35$$35$rlD () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2301 () Int)
(declare-fun VV$35$$35$3565 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2760 () Int)
(declare-fun VV$35$$35$3547 () Int)
(declare-fun VV$35$$35$F$35$$35$3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1911 () Real)
(declare-fun lq_karg$36$VV$35$$35$1847$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$3394 () Int)
(declare-fun VV$35$$35$F$35$$35$164 () Int)
(declare-fun VV$35$$35$3666 () Real)
(declare-fun VV$35$$35$3745 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$983 () Int)
(declare-fun VV$35$$35$F$35$$35$92 () Int)
(declare-fun VV$35$$35$3538 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1832 () Real)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2794 () Int)
(declare-fun VV$35$$35$F$35$$35$344 () Int)
(declare-fun wp1$35$$35$a2ll () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$VV$35$$35$2427$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2l3$35$$35$k_$35$$35$3084 () Int)
(declare-fun VV$35$$35$2676 () Int)
(declare-fun GHC.Prim.$60$$35$$35$$35$9q () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2263 () Int)
(declare-fun papp1 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sw$35$$35$k_$35$$35$3030 () Int)
(declare-fun VV$35$$35$F$35$$35$169 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$3470 () Int)
(declare-fun lq_tmp$36$x$35$$35$1053 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$2073 () Real)
(declare-fun VV$35$$35$3113 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_anf$36$$35$$35$d2sr () Int)
(declare-fun VV$35$$35$F$35$$35$314 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2673 () Int)
(declare-fun VV$35$$35$F$35$$35$349 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2386 () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1776 () Real)
(declare-fun lq_anf$36$$35$$35$d2rK () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1917 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1776 () Int)
(declare-fun VV$35$$35$1753 () Real)
(declare-fun VV$35$$35$3784 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_tmp$36$x$35$$35$2063 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2l3$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2773 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2874 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1917 () Int)
(declare-fun VV$35$$35$3838 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1060 () Int)
(declare-fun x_Tuple61 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2331 () Int)
(declare-fun VV$35$$35$3939 () Real)
(declare-fun VV$35$$35$F$35$$35$53 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$906 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1467 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2887 () Int)
(declare-fun VV$35$$35$3865 () Real)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2581 () Int)
(declare-fun x_Tuple43 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$788 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$F$35$$35$284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1051 () Int)
(declare-fun lq_tmp$36$x$35$$35$1116 () Int)
(declare-fun lq_anf$36$$35$$35$d2s2 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2382 () Int)
(declare-fun lq_tmp$36$x$35$$35$2397 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2522 () Int)
(declare-fun VV$35$$35$1375 () Real)
(declare-fun VV$35$$35$3128 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$983 () Int)
(declare-fun lq_karg$36$VV$35$$35$2778$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_tmp$36$x$35$$35$2621 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1073 () Int)
(declare-fun List.singleton$35$$35$rXy () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$805 () Int)
(declare-fun VV$35$$35$3685 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$788 () Int)
(declare-fun VV$35$$35$761 () Real)
(declare-fun VV$35$$35$3281 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1000 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$2080 () Real)
(declare-fun VV$35$$35$2424 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2270 () Int)
(declare-fun VV$35$$35$3157 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1467 () Int)
(declare-fun VV$35$$35$2266 () Real)
(declare-fun VV$35$$35$F$35$$35$68 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1447 () Int)
(declare-fun p$35$$35$a2kX () Int)
(declare-fun centers$35$$35$a2kH () Int)
(declare-fun GHC.Classes.$36$fOrdInt$35$$35$rmS () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$977 () Int)
(declare-fun lq_karg$36$VV$35$$35$2430$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2683 () Int)
(declare-fun VV$35$$35$1717 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1063 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1441 () Int)
(declare-fun VV$35$$35$1313 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1421 () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun lq_karg$36$x$35$$35$a2l5$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2757 () Int)
(declare-fun VV$35$$35$2002 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2522 () Int)
(declare-fun GHC.Types.EQ$35$$35$6U () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sf$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1060 () Int)
(declare-fun VV$35$$35$3452 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2428 () Int)
(declare-fun VV$35$$35$3715 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s0$35$$35$k_$35$$35$1776 () Int)
(declare-fun VV$35$$35$F$35$$35$248 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2880 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1721 () Int)
(declare-fun VV$35$$35$3182 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2960 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2479 () Int)
(declare-fun VV$35$$35$3737 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2315 () Int)
(declare-fun VV$35$$35$3553 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$816 () Int)
(declare-fun VV$35$$35$2813 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1105 () Int)
(declare-fun sz$35$$35$a2kY () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2389 () Int)
(declare-fun VV$35$$35$F$35$$35$215 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1063 () Int)
(declare-fun VV$35$$35$F$35$$35$152 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2ry$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2791 () Int)
(declare-fun VV$35$$35$3751 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1927 () Real)
(declare-fun VV$35$$35$F$35$$35$237 () Int)
(declare-fun VV$35$$35$3773 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rY$35$$35$k_$35$$35$1996 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$809 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2776 () Int)
(declare-fun VV$35$$35$3209 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1017 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2794 () Int)
(declare-fun VV$35$$35$3847 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1750 () Int)
(declare-fun VV$35$$35$3920 () Int)
(declare-fun VV$35$$35$1867 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kP$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2957 () Int)
(declare-fun VV$35$$35$1801 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_anf$36$$35$$35$d2sb () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2321 () Int)
(declare-fun VV$35$$35$3083 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1379 () Int)
(declare-fun lq_tmp$36$x$35$$35$2489 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$3276 () Real)
(declare-fun VV$35$$35$3803 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$2006 () Int)
(declare-fun VV$35$$35$3614 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$3649 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2519 () Int)
(declare-fun VV$35$$35$3697 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sf$35$$35$k_$35$$35$2080 () Int)
(declare-fun VV$35$$35$2076 () Real)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2382 () Int)
(declare-fun VV$35$$35$3558 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$3090 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1000 () Int)
(declare-fun lq_tmp$36$x$35$$35$3025 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1365 () Int)
(declare-fun VV$35$$35$3347 () Real)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$986 () Int)
(declare-fun MapReduce.mapReduce$35$$35$r1wi () Int)
(declare-fun VV$35$$35$1200 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1757 () Int)
(declare-fun VV$35$$35$3145 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2800 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2si$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1017 () Int)
(declare-fun VV$35$$35$1288 () Real)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2773 () Int)
(declare-fun VV$35$$35$1507 () Real)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2890 () Int)
(declare-fun VV$35$$35$3707 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_anf$36$$35$$35$d2si () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$2006 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$VV$35$$35$2005$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s9$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2428 () Int)
(declare-fun VV$35$$35$3624 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1757 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1379 () Int)
(declare-fun VV$35$$35$3563 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rV$35$$35$k_$35$$35$1750 () Int)
(declare-fun VV$35$$35$3642 () Int)
(declare-fun VV$35$$35$3725 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1467 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$3660 () Int)
(declare-fun VV$35$$35$3392 () Real)
(declare-fun VV$35$$35$3239 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1917 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1051 () Int)
(declare-fun VV$35$$35$3743 () Real)
(declare-fun VV$35$$35$F$35$$35$94 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1073 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1721 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2887 () Int)
(declare-fun VV$35$$35$F$35$$35$162 () Int)
(declare-fun x_Tuple51 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$xs$35$$35$a2kK$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1792 () Real)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2668 () Int)
(declare-fun VV$35$$35$3877 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1034 () Int)
(declare-fun VV$35$$35$1857 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$788 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$816 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1782 () Real)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2668 () Int)
(declare-fun VV$35$$35$3855 () Real)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1848 () Real)
(declare-fun GHC.Prim.$43$$35$$35$$35$98 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2607 () Int)
(declare-fun GHC.Base.Nothing$35$$35$r1d () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1782 () Int)
(declare-fun VV$35$$35$3338 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2295 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2331 () Int)
(declare-fun lq_karg$36$ds_d2rm$35$$35$k_$35$$35$2995 () Int)
(declare-fun VV$35$$35$F$35$$35$58 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1063 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2431 () Int)
(declare-fun VV$35$$35$3833 () Real)
(declare-fun lq_karg$36$VV$35$$35$2606$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$916 () Int)
(declare-fun VV$35$$35$3932 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2311 () Int)
(declare-fun VV$35$$35$2889 () Int)
(declare-fun VV$35$$35$3910 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2402 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2800 () Int)
(declare-fun VV$35$$35$3811 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$788 () Int)
(declare-fun VV$35$$35$1831 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$centers$35$$35$a2kH$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2880 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$3084 () Int)
(declare-fun VV$35$$35$2274 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_anf$36$$35$$35$d2rP () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2817 () Int)
(declare-fun VV$35$$35$F$35$$35$195 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2479 () Int)
(declare-fun VV$35$$35$2537 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$762 () Int)
(declare-fun VV$35$$35$3365 () Int)
(declare-fun lq_anf$36$$35$$35$d2s9 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$2073 () Real)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$778 () Int)
(declare-fun VV$35$$35$2414 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$VV$35$$35$2427$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rP$35$$35$k_$35$$35$1927 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$2515 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s6$35$$35$k_$35$$35$2080 () Int)
(declare-fun VV$35$$35$F$35$$35$278 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1685 () Int)
(declare-fun VV$35$$35$3303 () Int)
(declare-fun VV$35$$35$3321 () Int)
(declare-fun VV$35$$35$F$35$$35$63 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2779 () Int)
(declare-fun VV$35$$35$2573 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_tmp$36$x$35$$35$2925 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1832 () Int)
(declare-fun GHC.Prim.$60$$61$$35$$35$$35$9r () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1911 () Int)
(declare-fun x_Tuple73 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1721 () Real)
(declare-fun VV$35$$35$1318 () Real)
(declare-fun lq_karg$36$centers$35$$35$a2kH$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$F$35$$35$41 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$1911 () Int)
(declare-fun VV$35$$35$F$35$$35$140 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$986 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2950 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1990 () Real)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1051 () Int)
(declare-fun VV$35$$35$3761 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1792 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1996 () Int)
(declare-fun VV$35$$35$3459 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2810 () Int)
(declare-fun VV$35$$35$3189 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1776 () Int)
(declare-fun GHC.Classes.compare$35$$35$r2 () Int)
(declare-fun VV$35$$35$F$35$$35$243 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1848 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2ry$35$$35$k_$35$$35$950 () Int)
(declare-fun VV$35$$35$3679 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1776 () Int)
(declare-fun n$35$$35$a2l2 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1017 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$778 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1063 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$1848 () Int)
(declare-fun VV$35$$35$1539 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2908 () Int)
(declare-fun VV$35$$35$1788 () Int)
(declare-fun lq_karg$36$k$35$$35$a2kF$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$983 () Int)
(declare-fun VV$35$$35$F$35$$35$145 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2502 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2782 () Int)
(declare-fun lq_karg$36$k$35$$35$a2kF$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sg$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1911 () Int)
(declare-fun VV$35$$35$F$35$$35$88 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_tmp$36$x$35$$35$955 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2311 () Int)
(declare-fun VV$35$$35$3739 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1412 () Int)
(declare-fun VV$35$$35$1340 () Real)
(declare-fun VV$35$$35$3162 () Int)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2791 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2395 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1017 () Int)
(declare-fun lq_tmp$36$x$35$$35$1981 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1034 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$983 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kX$35$$35$k_$35$$35$762 () Int)
(declare-fun fix$36$$36$dOrd_a2mF () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2487 () Int)
(declare-fun VV$35$$35$3342 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1832 () Real)
(declare-fun VV$35$$35$F$35$$35$239 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$809 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2957 () Int)
(declare-fun VV$35$$35$3522 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$p2$35$$35$a2kV$35$$35$k_$35$$35$2270 () Int)
(declare-fun VV$35$$35$3849 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sn$35$$35$k_$35$$35$2522 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1467 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1911 () Real)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1750 () Int)
(declare-fun VV$35$$35$1645 () Real)
(declare-fun VV$35$$35$3467 () Real)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2607 () Int)
(declare-fun VV$35$$35$3500 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2760 () Int)
(declare-fun VV$35$$35$F$35$$35$123 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1110 () Int)
(declare-fun ds_d2rr () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2991 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2683 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_tmp$36$x$35$$35$2685 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$1927 () Int)
(declare-fun VV$35$$35$3647 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2773 () Int)
(declare-fun VV$35$$35$F$35$$35$101 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2950 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2472 () Int)
(declare-fun lq_karg$36$n$35$$35$a2kR$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sp$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1678 () Real)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1792 () Int)
(declare-fun VV$35$$35$1791 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_tmp$36$x$35$$35$911 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rS$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2584 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1110 () Int)
(declare-fun VV$35$$35$F$35$$35$167 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$1927 () Real)
(declare-fun VV$35$$35$3195 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2936 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2382 () Int)
(declare-fun x_Tuple54 () Int)
(declare-fun lq_tmp$36$x$35$$35$1932 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$1927 () Int)
(declare-fun VV$35$$35$F$35$$35$19 () Int)
(declare-fun lq_karg$36$VV$35$$35$2427$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1838 () Int)
(declare-fun GHC.Base.$36$$35$$35$01Z () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2386 () Int)
(declare-fun VV$35$$35$F$35$$35$347 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2887 () Int)
(declare-fun VV$35$$35$3872 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2880 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1838 () Int)
(declare-fun VV$35$$35$1870 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1000 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$762 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2766 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2954 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_tmp$36$x$35$$35$2586 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2321 () Int)
(declare-fun VV$35$$35$3243 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$3084 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$740 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1782 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$977 () Int)
(declare-fun KMeans.kmeans1$35$$35$r1L6 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2779 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$2006 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2331 () Int)
(declare-fun lq_karg$36$ds_d2rs$35$$35$k_$35$$35$2817 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2522 () Int)
(declare-fun VV$35$$35$3814 () Real)
(declare-fun VV$35$$35$1834 () Real)
(declare-fun lq_tmp$36$x$35$$35$797 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2512 () Int)
(declare-fun VV$35$$35$2682 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2389 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1832 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1365 () Int)
(declare-fun VV$35$$35$3423 () Int)
(declare-fun lq_tmp$36$x$35$$35$1118 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2954 () Int)
(declare-fun VV$35$$35$F$35$$35$190 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2788 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2321 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$906 () Int)
(declare-fun VV$35$$35$3126 () Real)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kX$35$$35$k_$35$$35$740 () Int)
(declare-fun VV$35$$35$1689 () Real)
(declare-fun VV$35$$35$F$35$$35$22 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_anf$36$$35$$35$d2rU () Real)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1776 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1911 () Real)
(declare-fun lq_karg$36$ds_d2rr$35$$35$k_$35$$35$2263 () Int)
(declare-fun lq_tmp$36$x$35$$35$1998 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun VV$35$$35$2015 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2880 () Int)
(declare-fun cmp () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$2411 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2690 () Int)
(declare-fun lq_karg$36$VV$35$$35$2809$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1678 () Real)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rT$35$$35$k_$35$$35$1757 () Real)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1990 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2957 () Int)
(declare-fun VV$35$$35$1179 () Real)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2995 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1990 () Real)
(declare-fun lq_karg$36$p$35$$35$a2lk$35$$35$k_$35$$35$2519 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1379 () Int)
(declare-fun x_Tuple76 () Int)
(declare-fun VV$35$$35$F$35$$35$189 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$3591 () Int)
(declare-fun VV$35$$35$2408 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2607 () Int)
(declare-fun Data.Tuple.snd$35$$35$0G () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2760 () Int)
(declare-fun VV$35$$35$F$35$$35$44 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$2006 () Real)
(declare-fun VV$35$$35$2478 () Int)
(declare-fun VV$35$$35$1033 () Int)
(declare-fun VV$35$$35$2021 () Int)
(declare-fun VV$35$$35$3354 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2960 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2773 () Int)
(declare-fun VV$35$$35$F$35$$35$69 () Int)
(declare-fun VV$35$$35$2388 () Int)
(declare-fun VV$35$$35$3376 () Int)
(declare-fun lq_karg$36$VV$35$$35$2310$35$$35$k_$35$$35$2295 () Int)
(declare-fun VV$35$$35$2759 () Int)
(declare-fun lq_karg$36$VV$35$$35$2606$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1848 () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$740 () Int)
(declare-fun VV$35$$35$3130 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1782 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2270 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2668 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1024 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1379 () Int)
(declare-fun VV$35$$35$2300 () Int)
(declare-fun VV$35$$35$3516 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1467 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2950 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1776 () Real)
(declare-fun VV$35$$35$3651 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2776 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$805 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1421 () Int)
(declare-fun VV$35$$35$1989 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1060 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1832 () Int)
(declare-fun VV$35$$35$3381 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1750 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1782 () Real)
(declare-fun VV$35$$35$2597 () Real)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1721 () Int)
(declare-fun lq_karg$36$ps$35$$35$a2lb$35$$35$k_$35$$35$2800 () Int)
(declare-fun VV$35$$35$F$35$$35$171 () Int)
(declare-fun VV$35$$35$F$35$$35$87 () Int)
(declare-fun GHC.Real.$94$$35$$35$r1Z () Int)
(declare-fun VV$35$$35$3673 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1365 () Int)
(declare-fun lq_karg$36$newClusters$35$$35$a2le$35$$35$k_$35$$35$2890 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l1$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2073 () Int)
(declare-fun wcmp () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$2073 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2757 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1721 () Int)
(declare-fun VV$35$$35$3299 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2n0$35$$35$k_$35$$35$1060 () Int)
(declare-fun List.Emp$35$$35$rXo () Int)
(declare-fun VV$35$$35$F$35$$35$214 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2874 () Int)
(declare-fun VV$35$$35$F$35$$35$153 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rQ$35$$35$k_$35$$35$1917 () Real)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2311 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$950 () Int)
(declare-fun lq_karg$36$x$35$$35$a2l5$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s3$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1105 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2428 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2908 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2006 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1678 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2779 () Int)
(declare-fun VV$35$$35$3255 () Int)
(declare-fun lq_karg$36$p1$35$$35$a2kO$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_tmp$36$x$35$$35$842 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sc$35$$35$k_$35$$35$1927 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$1063 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1792 () Int)
(declare-fun VV$35$$35$3820 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1776 () Int)
(declare-fun VV$35$$35$1923 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sb$35$$35$k_$35$$35$1757 () Int)
(declare-fun VV$35$$35$3903 () Int)
(declare-fun VV$35$$35$3435 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rX$35$$35$k_$35$$35$1996 () Real)
(declare-fun lq_anf$36$$35$$35$d2sc () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2431 () Int)
(declare-fun VV$35$$35$3417 () Int)
(declare-fun VV$35$$35$3569 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$1757 () Int)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1105 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rU$35$$35$k_$35$$35$2080 () Real)
(declare-fun VV$35$$35$3211 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1421 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$1441 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$1024 () Int)
(declare-fun VV$35$$35$3749 () Int)
(declare-fun GHC.Real.D$58$Fractional$35$$35$rFB () Int)
(declare-fun lq_karg$36$p0$35$$35$a2kN$35$$35$k_$35$$35$2080 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2760 () Int)
(declare-fun VV$35$$35$3534 () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$3093 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sd$35$$35$k_$35$$35$1838 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2936 () Int)
(declare-fun VV$35$$35$F$35$$35$135 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1453 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2963 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2si$35$$35$k_$35$$35$2270 () Int)
(declare-fun VV$35$$35$3637 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2683 () Int)
(declare-fun VV$35$$35$832 () Int)
(declare-fun VV$35$$35$F$35$$35$168 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$1714 () Int)
(declare-fun VV$35$$35$3398 () Int)
(declare-fun VV$35$$35$3233 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$1447 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2574 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1776 () Real)
(declare-fun VV$35$$35$F$35$$35$16 () Int)
(declare-fun ds_d2rm () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2810 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2565 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2389 () Int)
(declare-fun VV$35$$35$1585 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sv$35$$35$k_$35$$35$3030 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2673 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2581 () Int)
(declare-fun VV$35$$35$F$35$$35$315 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$762 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2677 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s2$35$$35$k_$35$$35$1757 () Real)
(declare-fun VV$35$$35$F$35$$35$348 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$VV$35$$35$2427$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2431 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2389 () Int)
(declare-fun VV$35$$35$3332 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2568 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1714 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2963 () Int)
(declare-fun fst () Int)
(declare-fun fld_Tuple () Int)
(declare-fun n$35$$35$a2kG () Int)
(declare-fun lq_karg$36$VV$35$$35$804$35$$35$k_$35$$35$778 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s7$35$$35$k_$35$$35$1990 () Int)
(declare-fun VV$35$$35$2391 () Real)
(declare-fun lq_karg$36$p$35$$35$a2kQ$35$$35$k_$35$$35$1792 () Int)
(declare-fun snd () Int)
(declare-fun VV$35$$35$3587 () Real)
(declare-fun lq_karg$36$n$35$$35$a2la$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$906 () Int)
(declare-fun lq_karg$36$VV$35$$35$1926$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1911 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1792 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2sa$35$$35$k_$35$$35$1996 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$960 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$1917 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1069 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s8$35$$35$k_$35$$35$2073 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2776 () Int)
(declare-fun VV$35$$35$F$35$$35$52 () Int)
(declare-fun lq_karg$36$GHC.Num.$36$fNumInt$35$$35$rlQ$35$$35$k_$35$$35$2581 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$VV$35$$35$2775$35$$35$k_$35$$35$2760 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s5$35$$35$k_$35$$35$1750 () Int)
(declare-fun VV$35$$35$2762 () Real)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2386 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1034 () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$3030 () Int)
(declare-fun p$35$$35$a2kI () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$778 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$805 () Int)
(declare-fun lq_karg$36$GHC.Types.EQ$35$$35$6U$35$$35$k_$35$$35$2512 () Int)
(declare-fun lq_karg$36$k$35$$35$a2l9$35$$35$k_$35$$35$2506 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2782 () Int)
(declare-fun x_Tuple42 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$2960 () Int)
(declare-fun VV$35$$35$2883 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rZ$35$$35$k_$35$$35$1927 () Int)
(declare-fun VV$35$$35$1844 () Int)
(declare-fun VV$35$$35$F$35$$35$285 () Int)
(declare-fun lq_anf$36$$35$$35$d2rZ () Int)
(declare-fun lq_karg$36$KMeans.test_nearest$35$$35$r1L1$35$$35$k_$35$$35$2301 () Int)
(declare-fun lq_karg$36$Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo$35$$35$k_$35$$35$2903 () Int)
(declare-fun lq_karg$36$GHC.Prim.void$35$$35$$35$0l$35$$35$k_$35$$35$1848 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2794 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2402 () Int)
(declare-fun n$35$$35$a2kW () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2817 () Int)
(declare-fun n2$35$$35$a2kU () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2807 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$1412 () Int)
(declare-fun lq_karg$36$GHC.Types.LT$35$$35$6S$35$$35$k_$35$$35$916 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2479 () Int)
(declare-fun lq_anf$36$$35$$35$d2s3 () Int)
(declare-fun lq_karg$36$$36$dOrd_a2mF$35$$35$k_$35$$35$965 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdDouble$35$$35$ren$35$$35$k_$35$$35$2995 () Int)
(declare-fun VV$35$$35$3486 () Real)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2405 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$1721 () Int)
(declare-fun VV$35$$35$3174 () Real)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rR$35$$35$k_$35$$35$1721 () Int)
(declare-fun List.zipWith$35$$35$rXF () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2so$35$$35$k_$35$$35$2487 () Int)
(declare-fun lq_karg$36$GHC.Classes.$36$fOrdInt$35$$35$rmS$35$$35$k_$35$$35$2295 () Int)
(declare-fun VV$35$$35$3309 () Real)
(declare-fun lq_karg$36$GHC.Float.$36$fFloatingDouble$35$$35$rd4$35$$35$k_$35$$35$2315 () Int)
(declare-fun lq_karg$36$GHC.Real.$36$fIntegralInteger$35$$35$rCr$35$$35$k_$35$$35$2607 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s4$35$$35$k_$35$$35$1685 () Int)
(declare-fun lq_karg$36$cs$35$$35$a2lc$35$$35$k_$35$$35$2301 () Int)
(declare-fun GHC.Prim.void$35$$35$$35$0l () Int)
(declare-fun lq_karg$36$GHC.Types.GT$35$$35$6W$35$$35$k_$35$$35$1000 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2rW$35$$35$k_$35$$35$1832 () Int)
(declare-fun lq_karg$36$GHC.Float.$36$fNumDouble$35$$35$rdA$35$$35$k_$35$$35$2693 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$d2s1$35$$35$k_$35$$35$1996 () Real)
(assert (distinct GHC.Types.EQ$35$$35$6U GHC.Types.GT$35$$35$6W GHC.Types.LT$35$$35$6S))
(assert (distinct GHC.Classes.$36$fOrdInt$35$$35$rmS))
(assert (distinct GHC.Classes.$36$fOrdDouble$35$$35$ren))
(assert (distinct GHC.Real.$36$fIntegralInteger$35$$35$rCr))
(assert (distinct GHC.Num.$36$fNumInt$35$$35$rlQ))
(assert (distinct GHC.Float.$36$fNumDouble$35$$35$rdA))
(assert (distinct GHC.Float.$36$fFloatingDouble$35$$35$rd4))
(assert (distinct Data.Foldable.$36$fFoldable$91$$93$$35$$35$r1Lo))
(assert (distinct GHC.Prim.void$35$$35$$35$0l))
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (<= 0 VV$35$$35$F$35$$35$162) (< VV$35$$35$F$35$$35$162 lq_anf$36$$35$$35$d2s5)) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sg) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2sf) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s8) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$162 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$162)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$162 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$162 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$162 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$162 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$162 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$162 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (and (<= 0 VV$35$$35$F$35$$35$3) (< VV$35$$35$F$35$$35$3 k$35$$35$a2l1)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$3 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$3)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 n$35$$35$a2l2)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 k$35$$35$a2l1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 steps$35$$35$a2l0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$3 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$3 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$3 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 n$35$$35$a2l2)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 k$35$$35$a2l1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$3 steps$35$$35$a2l0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$3 n$35$$35$a2l2)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$3 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$3 k$35$$35$a2l1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$3 steps$35$$35$a2l0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$3 n$35$$35$a2l2)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$3 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$3 k$35$$35$a2l1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$3 steps$35$$35$a2l0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 n$35$$35$a2l2)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 k$35$$35$a2l1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 steps$35$$35$a2l0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$3 n$35$$35$a2l2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$3 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$3 k$35$$35$a2l1))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$3 steps$35$$35$a2l0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$3 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$4) n$35$$35$a2l2) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$4))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$4) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$4) steps$35$$35$a2l0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$4) k$35$$35$a2l1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$4) n$35$$35$a2l2)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (= VV$35$$35$F$35$$35$15 steps$35$$35$a2l0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$15 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$15)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$15 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$15 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$15 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$15 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$15 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$15 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$15 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$15 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$15 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$15 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$15 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$15 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (<= 0 ds_d2rm) (>= ds_d2rm 0)) (= VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l) (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rm) (and (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn)) (= lq_anf$36$$35$$35$d2su ds_d2rn) (and (= lq_anf$36$$35$$35$d2su ds_d2rn) (not (= lq_anf$36$$35$$35$d2su 0))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$21 GHC.Prim.void$35$$35$$35$0l))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$28)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$28 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$23 x$35$$35$a2l5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$26 x$35$$35$a2l5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= ds_d2rm 0) (<= 0 ds_d2rm)) (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rm) (and (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn)) (= lq_anf$36$$35$$35$d2su ds_d2rn) (and (= lq_anf$36$$35$$35$d2su ds_d2rn) (not (= lq_anf$36$$35$$35$d2su 0))) (= VV$35$$35$F$35$$35$29 x$35$$35$a2l5) (and (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l)) (= lq_anf$36$$35$$35$d2sv 1) (= lq_anf$36$$35$$35$d2sw (- ds_d2rm lq_anf$36$$35$$35$d2sv)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$26 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$26 x$35$$35$a2l5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$27 lq_tmp$36$x$35$$35$3025))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$11 lq_tmp$36$x$35$$35$3079)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= VV$35$$35$F$35$$35$28 lq_anf$36$$35$$35$d2sw) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= ds_d2rm 0) (<= 0 ds_d2rm)) (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rm) (and (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn)) (= lq_anf$36$$35$$35$d2su ds_d2rn) (and (= lq_anf$36$$35$$35$d2su ds_d2rn) (not (= lq_anf$36$$35$$35$d2su 0))) (and (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l)) (= lq_anf$36$$35$$35$d2sv 1) (= lq_anf$36$$35$$35$d2sw (- ds_d2rm lq_anf$36$$35$$35$d2sv)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$28 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$28)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (<= 0 ds_d2rm) (>= ds_d2rm 0)) (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rm) (and (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn)) (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx) (= lq_anf$36$$35$$35$d2su ds_d2rn) (and (= lq_anf$36$$35$$35$d2su ds_d2rn) (not (= lq_anf$36$$35$$35$d2su 0))) (and (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l)) (= lq_anf$36$$35$$35$d2sv 1) (= lq_anf$36$$35$$35$d2sw (- ds_d2rm lq_anf$36$$35$$35$d2sv)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$23 x$35$$35$a2l5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$23 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (<= 0 ds_d2rm) (>= ds_d2rm 0)) (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rm) (and (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn)) (= lq_anf$36$$35$$35$d2su ds_d2rn) (and (= lq_anf$36$$35$$35$d2su ds_d2rn) (not (= lq_anf$36$$35$$35$d2su 0))) (and (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l)) (= lq_anf$36$$35$$35$d2sv 1) (= lq_anf$36$$35$$35$d2sw (- ds_d2rm lq_anf$36$$35$$35$d2sv)) (and (<= lq_tmp$36$x$35$$35$3025 lq_anf$36$$35$$35$d2sx) (>= lq_tmp$36$x$35$$35$3025 lq_anf$36$$35$$35$d2sx) (= lq_tmp$36$x$35$$35$3025 lq_anf$36$$35$$35$d2sx)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$d2sx)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= lq_anf$36$$35$$35$d2su ds_d2rn) (= lq_anf$36$$35$$35$d2su 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (<= 0 ds_d2rm) (>= ds_d2rm 0)) (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rm) (and (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn)) (= lq_anf$36$$35$$35$d2su ds_d2rn) (= VV$35$$35$F$35$$35$19 x$35$$35$a2l5) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$19 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$19 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$19 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$19 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$19 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$19 x$35$$35$a2l5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= VV$35$$35$F$35$$35$22 lq_anf$36$$35$$35$d2sx) (>= VV$35$$35$F$35$$35$22 lq_anf$36$$35$$35$d2sx) (<= VV$35$$35$F$35$$35$22 lq_anf$36$$35$$35$d2sx)) (and (<= 0 ds_d2rm) (>= ds_d2rm 0)) (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rm) (and (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn)) (= lq_anf$36$$35$$35$d2su ds_d2rn) (and (= lq_anf$36$$35$$35$d2su ds_d2rn) (not (= lq_anf$36$$35$$35$d2su 0))) (and (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (>= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l) (<= ds_d2rp GHC.Prim.void$35$$35$$35$0l)) (= lq_anf$36$$35$$35$d2sv 1) (= lq_anf$36$$35$$35$d2sw (- ds_d2rm lq_anf$36$$35$$35$d2sv)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$22 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$22 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$22 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$22 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$22 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$22 x$35$$35$a2l5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (<= 0 ds_d2rm) (>= ds_d2rm 0)) (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rm) (and (= lq_anf$36$$35$$35$d2st ds_d2rm) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn) (= lq_anf$36$$35$$35$d2st ds_d2rn)) (= lq_anf$36$$35$$35$d2su ds_d2rn) (and (= lq_anf$36$$35$$35$d2su ds_d2rn) (not (= lq_anf$36$$35$$35$d2su 0))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$20 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$20 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$20 x$35$$35$a2l5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0)) (and (<= 0 VV$35$$35$F$35$$35$12) (< VV$35$$35$F$35$$35$12 k$35$$35$a2l1))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$12 k$35$$35$a2l1))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$12 k$35$$35$a2l1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$12 k$35$$35$a2l1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$12)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$12 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$13) n$35$$35$a2l2) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$13))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$13) n$35$$35$a2l2)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$65) n$35$$35$a2la) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$65))) (and (= VV$35$$35$3245 ps$35$$35$a2lb) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3245))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$65) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$65) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$65) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$85)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$85) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$85) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$85) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$85) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$135 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$135 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$135)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$135 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$135 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$135 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$135 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$135 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$135 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$135 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$135 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$135 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$135 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$135 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$135 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$135 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$135 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$135 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$135 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$135 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$135 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$135 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$135 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2so))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$135 lq_anf$36$$35$$35$d2sn))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$135 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$135 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$135 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$135 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (= VV$35$$35$3363 lq_anf$36$$35$$35$d2sq) (and (not (= VV$35$$35$F$35$$35$110 k$35$$35$a2l9)) (= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2sn) (>= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2sn) (<= VV$35$$35$F$35$$35$110 k$35$$35$a2l9) (<= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2sn) (< VV$35$$35$F$35$$35$110 k$35$$35$a2l9) (<= 0 VV$35$$35$F$35$$35$110) (>= VV$35$$35$F$35$$35$110 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 (int_apply_$35$$35$1 fst VV$35$$35$3363))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$110 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$110)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$110 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$110 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$110 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$110 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$110 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$110 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$110 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$110 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$110 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$110 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$110 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$110 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$110 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$110 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$110 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$110 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2sn))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$110 lq_anf$36$$35$$35$d2so))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$110 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$110 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$110 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$110 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0)) (= VV$35$$35$F$35$$35$109 lq_anf$36$$35$$35$d2sq)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$109 lq_anf$36$$35$$35$d2sq)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$109 lq_anf$36$$35$$35$d2sq)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$109 lq_anf$36$$35$$35$d2sq)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$109 lq_anf$36$$35$$35$d2sq)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$109 lq_anf$36$$35$$35$d2sq)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$109 lq_anf$36$$35$$35$d2sq))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (not (= VV$35$$35$F$35$$35$96 k$35$$35$a2l9)) (= VV$35$$35$F$35$$35$96 lq_anf$36$$35$$35$d2sn) (>= VV$35$$35$F$35$$35$96 lq_anf$36$$35$$35$d2sn) (<= VV$35$$35$F$35$$35$96 k$35$$35$a2l9) (<= VV$35$$35$F$35$$35$96 lq_anf$36$$35$$35$d2sn) (< VV$35$$35$F$35$$35$96 k$35$$35$a2l9) (<= 0 VV$35$$35$F$35$$35$96) (>= VV$35$$35$F$35$$35$96 0) (= VV$35$$35$F$35$$35$96 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq)) (= VV$35$$35$F$35$$35$96 (int_apply_$35$$35$1 fst VV$35$$35$3332))) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 size VV$35$$35$3330) 1) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3330))) (and (= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (>= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (<= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$96 (int_apply_$35$$35$1 fst VV$35$$35$3332))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$96 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$96)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$96 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$96 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$96 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$96 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$96 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$96 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$96 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$96 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$96 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$96 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$96 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$96 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$96 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$96 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$96 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$96 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$96 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$96 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$96 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$96 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$96 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$96 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$96 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$96 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= VV$35$$35$F$35$$35$95 lq_anf$36$$35$$35$d2sq) (>= VV$35$$35$F$35$$35$95 lq_anf$36$$35$$35$d2sq) (<= VV$35$$35$F$35$$35$95 lq_anf$36$$35$$35$d2sq)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 size VV$35$$35$3330) 1) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3330))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$94) 1) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$94))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657)) (= (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657) n$35$$35$a2la)) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3297)) (and (not (= VV$35$$35$F$35$$35$87 k$35$$35$a2l9)) (<= VV$35$$35$F$35$$35$87 k$35$$35$a2l9) (< VV$35$$35$F$35$$35$87 k$35$$35$a2l9) (<= 0 VV$35$$35$F$35$$35$87) (>= VV$35$$35$F$35$$35$87 0) (= VV$35$$35$F$35$$35$87 (int_apply_$35$$35$1 fst VV$35$$35$3299))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$87 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$87)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$87 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$87 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$87 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$87 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$87 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$87 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$87 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$87 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$87 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$87 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$87 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$87 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$87 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$87 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$87 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$87 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$87 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$87 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$87 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$87 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$87 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$87 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$87 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$87 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (not (= VV$35$$35$F$35$$35$34 k$35$$35$a2l9)) (<= VV$35$$35$F$35$$35$34 k$35$$35$a2l9) (< VV$35$$35$F$35$$35$34 k$35$$35$a2l9) (<= 0 VV$35$$35$F$35$$35$34) (>= VV$35$$35$F$35$$35$34 0)) (= VV$35$$35$3176 newClusters$35$$35$a2le) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0)) (= VV$35$$35$F$35$$35$32 newClusters$35$$35$a2le)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= VV$35$$35$3176 newClusters$35$$35$a2le) (and (not (= VV$35$$35$F$35$$35$33 k$35$$35$a2l9)) (<= VV$35$$35$F$35$$35$33 k$35$$35$a2l9) (< VV$35$$35$F$35$$35$33 k$35$$35$a2l9) (<= 0 VV$35$$35$F$35$$35$33) (>= VV$35$$35$F$35$$35$33 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$33 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$33)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$33 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$33 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$33 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$33 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$33 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$33 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$33 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$33 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$33 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$33 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$33 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$33 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$33 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$33 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$33 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$33 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$33 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$33 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$33 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$33 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$33 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$33 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$33 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$33 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= VV$35$$35$F$35$$35$137 p$35$$35$a2lk) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$137))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$137) lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$137) lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$137) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$137) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$137) lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$137) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$137 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$137 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$137 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$137 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$137 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$137 p$35$$35$a2lk))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$131)) (and (= VV$35$$35$F$35$$35$131 p$35$$35$a2lk) (>= VV$35$$35$F$35$$35$131 p$35$$35$a2lk) (<= VV$35$$35$F$35$$35$131 p$35$$35$a2lk) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$131) n$35$$35$a2la))) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (= VV$35$$35$3394 lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$131 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$131) lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$131) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$131) lq_tmp$36$x$35$$35$2527)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$131) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$131) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$131) lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$131 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$131 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$131 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$131 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$131 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$131 p$35$$35$a2lk))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (= VV$35$$35$F$35$$35$123 lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$123 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$123 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$123 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$123 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$123 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$123 lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$115)) (and (= VV$35$$35$F$35$$35$115 p$35$$35$a2lk) (>= VV$35$$35$F$35$$35$115 p$35$$35$a2lk) (<= VV$35$$35$F$35$$35$115 p$35$$35$a2lk) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$115) n$35$$35$a2la) (= VV$35$$35$F$35$$35$115 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp)))) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (= VV$35$$35$3363 lq_anf$36$$35$$35$d2sq) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= VV$35$$35$3367 lq_anf$36$$35$$35$d2sp) (>= VV$35$$35$3367 lq_anf$36$$35$$35$d2sp) (<= VV$35$$35$3367 lq_anf$36$$35$$35$d2sp)) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$115 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$115) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$115) lq_tmp$36$x$35$$35$2613)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$115) lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$115) lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$115) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$115) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$115 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$115 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$115 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$115 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$115 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$115 p$35$$35$a2lk))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$d2sp) (>= VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$d2sp) (<= VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$d2sp)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (= VV$35$$35$3363 lq_anf$36$$35$$35$d2sq) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$111 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$111 (int_apply_$35$$35$1 snd VV$35$$35$3363))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$d2sp)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$111 lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 size VV$35$$35$3330) 1) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3330))) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$101)) (and (= VV$35$$35$F$35$$35$101 p$35$$35$a2lk) (>= VV$35$$35$F$35$$35$101 p$35$$35$a2lk) (<= VV$35$$35$F$35$$35$101 p$35$$35$a2lk) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$101) n$35$$35$a2la) (= VV$35$$35$F$35$$35$101 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp)))) (and (= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (>= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (<= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (and (= VV$35$$35$3336 lq_anf$36$$35$$35$d2sp) (>= VV$35$$35$3336 lq_anf$36$$35$$35$d2sp) (<= VV$35$$35$3336 lq_anf$36$$35$$35$d2sp) (= VV$35$$35$3336 (int_apply_$35$$35$1 snd VV$35$$35$3332)) (= VV$35$$35$3336 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$101) lq_tmp$36$x$35$$35$2397)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$101) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$101) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$101) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$101 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$101 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$101 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$101 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$101 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$101 p$35$$35$a2lk))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 size VV$35$$35$3330) 1) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3330))) (and (= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (>= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (<= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (and (= VV$35$$35$F$35$$35$97 lq_anf$36$$35$$35$d2sp) (>= VV$35$$35$F$35$$35$97 lq_anf$36$$35$$35$d2sp) (<= VV$35$$35$F$35$$35$97 lq_anf$36$$35$$35$d2sp) (= VV$35$$35$F$35$$35$97 (int_apply_$35$$35$1 snd VV$35$$35$3332)) (= VV$35$$35$F$35$$35$97 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$97 (int_apply_$35$$35$1 snd VV$35$$35$3332))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$92)) (and (= VV$35$$35$F$35$$35$92 lq_tmp$36$x$35$$35$2657) (>= VV$35$$35$F$35$$35$92 lq_tmp$36$x$35$$35$2657) (<= VV$35$$35$F$35$$35$92 lq_tmp$36$x$35$$35$2657) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$92) n$35$$35$a2la))) (and (<= 0 (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657)) (= (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657) n$35$$35$a2la)) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3297)) (= VV$35$$35$3303 (int_apply_$35$$35$1 snd VV$35$$35$3299)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$92) lq_tmp$36$x$35$$35$2698)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$92) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$92) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$92) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657)) (= (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657) n$35$$35$a2la)) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3297)) (= VV$35$$35$F$35$$35$88 (int_apply_$35$$35$1 snd VV$35$$35$3299)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$83)) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$83) n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= VV$35$$35$3176 newClusters$35$$35$a2le) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$39)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$39) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$39) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$39) lq_tmp$36$x$35$$35$2925)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$39) n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= VV$35$$35$3176 newClusters$35$$35$a2le) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$46)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$46) n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$46) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$46) lq_tmp$36$x$35$$35$2895)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$46) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$56)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$56) n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$56) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$56) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$56) lq_tmp$36$x$35$$35$2913)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= VV$35$$35$F$35$$35$136 p$35$$35$a2lk) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$136))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$136) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$136) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$136) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$136) lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$136) lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$136 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$136 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$136 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$136 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$136 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$136 p$35$$35$a2lk))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$127)) (and (= VV$35$$35$F$35$$35$127 p$35$$35$a2lk) (>= VV$35$$35$F$35$$35$127 p$35$$35$a2lk) (<= VV$35$$35$F$35$$35$127 p$35$$35$a2lk) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$127) n$35$$35$a2la))) (= VV$35$$35$3394 lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$127 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$127 (int_apply_$35$$35$1 snd VV$35$$35$3394))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$127) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$127) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$127) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$127) lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$127) lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$127 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$127 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$127 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$127 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$127 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$127 p$35$$35$a2lk))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (= VV$35$$35$3363 lq_anf$36$$35$$35$d2sq) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= VV$35$$35$3367 lq_anf$36$$35$$35$d2sp) (>= VV$35$$35$3367 lq_anf$36$$35$$35$d2sp) (<= VV$35$$35$3367 lq_anf$36$$35$$35$d2sp)) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$113)) (and (= VV$35$$35$F$35$$35$113 p$35$$35$a2lk) (>= VV$35$$35$F$35$$35$113 p$35$$35$a2lk) (<= VV$35$$35$F$35$$35$113 p$35$$35$a2lk) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$113) n$35$$35$a2la) (= VV$35$$35$F$35$$35$113 (int_apply_$35$$35$1 snd VV$35$$35$3367)) (= VV$35$$35$F$35$$35$113 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp))))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$113 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$113 (int_apply_$35$$35$1 snd VV$35$$35$3367))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$113) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$113) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$113) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$113) lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$113) lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$113 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$113 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$113 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$113 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$113 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$113 p$35$$35$a2lk))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$99)) (and (= VV$35$$35$F$35$$35$99 p$35$$35$a2lk) (>= VV$35$$35$F$35$$35$99 p$35$$35$a2lk) (<= VV$35$$35$F$35$$35$99 p$35$$35$a2lk) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$99) n$35$$35$a2la) (= VV$35$$35$F$35$$35$99 (int_apply_$35$$35$1 snd VV$35$$35$3336)) (= VV$35$$35$F$35$$35$99 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp)))) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 size VV$35$$35$3330) 1) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3330))) (and (= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (>= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (<= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (and (= VV$35$$35$3336 lq_anf$36$$35$$35$d2sp) (>= VV$35$$35$3336 lq_anf$36$$35$$35$d2sp) (<= VV$35$$35$3336 lq_anf$36$$35$$35$d2sp) (= VV$35$$35$3336 (int_apply_$35$$35$1 snd VV$35$$35$3332)) (= VV$35$$35$3336 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$99 (int_apply_$35$$35$1 snd VV$35$$35$3336))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$99) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$99) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$99) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$99 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$99 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$99 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$99 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$99 p$35$$35$a2lk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$99 p$35$$35$a2lk))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$90)) (and (= VV$35$$35$F$35$$35$90 lq_tmp$36$x$35$$35$2657) (>= VV$35$$35$F$35$$35$90 lq_tmp$36$x$35$$35$2657) (<= VV$35$$35$F$35$$35$90 lq_tmp$36$x$35$$35$2657) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$90) n$35$$35$a2la) (= VV$35$$35$F$35$$35$90 (int_apply_$35$$35$1 snd VV$35$$35$3303)))) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657)) (= (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657) n$35$$35$a2la)) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3297)) (= VV$35$$35$3303 (int_apply_$35$$35$1 snd VV$35$$35$3299)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$90 (int_apply_$35$$35$1 snd VV$35$$35$3303))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$90) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$90) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$90) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$81) n$35$$35$a2la) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$81))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$81) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$81 (int_apply_$35$$35$1 snd VV$35$$35$3279))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$37)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$37) n$35$$35$a2la)) (= VV$35$$35$3176 newClusters$35$$35$a2le) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$37 (int_apply_$35$$35$1 snd VV$35$$35$3180))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$37) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$37) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$37) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$44)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$44) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$44 (int_apply_$35$$35$1 snd VV$35$$35$3195))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$44) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$44) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$44) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$54)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$54) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$54 (int_apply_$35$$35$1 snd VV$35$$35$3215))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$54) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$54) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$54) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (= VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$140 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$140)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$140 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$140 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$140 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$140 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$140 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$140 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$140 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$140 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$140 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$140 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$140 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$140 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$140 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$140 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$140 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$140 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$140 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$140 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$140 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$140 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$140 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$140 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$140 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2so))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$140 lq_anf$36$$35$$35$d2sn))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$140 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$125 1) (= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2so) (>= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2so) (<= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2so) (<= VV$35$$35$F$35$$35$125 k$35$$35$a2l9) (not (= VV$35$$35$F$35$$35$125 0)) (> VV$35$$35$F$35$$35$125 0) (<= 0 VV$35$$35$F$35$$35$125) (>= VV$35$$35$F$35$$35$125 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (= VV$35$$35$3394 lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$125 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$125 (int_apply_$35$$35$1 fst VV$35$$35$3394))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$125 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$125)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$125 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$125 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$125 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$125 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$125 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$125 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$125 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$125 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$125 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$125 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$125 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$125 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$125 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$125 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$125 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$125 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$125 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$125 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$125 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$125 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$125 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$125 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$125 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2so))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$125 lq_anf$36$$35$$35$d2sn))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$125 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (= VV$35$$35$F$35$$35$112 1) (= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2so) (>= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2so) (<= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2so) (<= VV$35$$35$F$35$$35$112 k$35$$35$a2l9) (not (= VV$35$$35$F$35$$35$112 0)) (> VV$35$$35$F$35$$35$112 0) (<= 0 VV$35$$35$F$35$$35$112) (>= VV$35$$35$F$35$$35$112 0) (= VV$35$$35$F$35$$35$112 (int_apply_$35$$35$1 fst VV$35$$35$3367)) (= VV$35$$35$F$35$$35$112 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp))) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (= VV$35$$35$3363 lq_anf$36$$35$$35$d2sq) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= VV$35$$35$3367 lq_anf$36$$35$$35$d2sp) (>= VV$35$$35$3367 lq_anf$36$$35$$35$d2sp) (<= VV$35$$35$3367 lq_anf$36$$35$$35$d2sp)) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 (int_apply_$35$$35$1 fst VV$35$$35$3363))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 (int_apply_$35$$35$1 fst VV$35$$35$3367))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$112 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$112)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$112 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$112 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$112 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$112 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$112 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$112 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$112 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$112 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$112 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$112 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$112 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$112 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$112 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$112 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$112 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$112 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2so)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2sn)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2so))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$d2sn))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$112 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$112 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$112 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$112 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (<= 0 lq_anf$36$$35$$35$d2sn) (< lq_anf$36$$35$$35$d2sn k$35$$35$a2l9)) (and (= VV$35$$35$F$35$$35$98 1) (= VV$35$$35$F$35$$35$98 lq_anf$36$$35$$35$d2so) (>= VV$35$$35$F$35$$35$98 lq_anf$36$$35$$35$d2so) (<= VV$35$$35$F$35$$35$98 k$35$$35$a2l9) (<= VV$35$$35$F$35$$35$98 lq_anf$36$$35$$35$d2so) (not (= VV$35$$35$F$35$$35$98 0)) (> VV$35$$35$F$35$$35$98 0) (<= 0 VV$35$$35$F$35$$35$98) (>= VV$35$$35$F$35$$35$98 0) (= VV$35$$35$F$35$$35$98 (int_apply_$35$$35$1 fst VV$35$$35$3336)) (= VV$35$$35$F$35$$35$98 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp))) (= lq_anf$36$$35$$35$d2so 1) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sp) p$35$$35$a2lk) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sp) lq_anf$36$$35$$35$d2so)) (and (= (int_apply_$35$$35$1 size VV$35$$35$3330) 1) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3330))) (and (= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (>= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq) (<= VV$35$$35$3332 lq_anf$36$$35$$35$d2sq)) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sp) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sq) lq_anf$36$$35$$35$d2sn)) (and (= VV$35$$35$3336 lq_anf$36$$35$$35$d2sp) (>= VV$35$$35$3336 lq_anf$36$$35$$35$d2sp) (<= VV$35$$35$3336 lq_anf$36$$35$$35$d2sp) (= VV$35$$35$3336 (int_apply_$35$$35$1 snd VV$35$$35$3332)) (= VV$35$$35$3336 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sq))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$98 (int_apply_$35$$35$1 fst VV$35$$35$3332))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$98 (int_apply_$35$$35$1 fst VV$35$$35$3336))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$98 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$98)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$98 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$98 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$98 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$98 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$98 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$98 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$98 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$98 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$98 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$98 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$98 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$98 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$98 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$98 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$98 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$98 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$98 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$98 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$98 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$98 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$98 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$98 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$98 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$98 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (= VV$35$$35$F$35$$35$89 1) (<= VV$35$$35$F$35$$35$89 k$35$$35$a2l9) (not (= VV$35$$35$F$35$$35$89 0)) (> VV$35$$35$F$35$$35$89 0) (<= 0 VV$35$$35$F$35$$35$89) (>= VV$35$$35$F$35$$35$89 0) (= VV$35$$35$F$35$$35$89 (int_apply_$35$$35$1 fst VV$35$$35$3303))) (and (<= 0 (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657)) (= (int_apply_$35$$35$1 size lq_tmp$36$x$35$$35$2657) n$35$$35$a2la)) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3297)) (= VV$35$$35$3303 (int_apply_$35$$35$1 snd VV$35$$35$3299)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$89 (int_apply_$35$$35$1 fst VV$35$$35$3303))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$89 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$89)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$89 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$89 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$89 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$89 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$89 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$89 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$89 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$89 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$89 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$89 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$89 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$89 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$89 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$89 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$89 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$89 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$89 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$89 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$89 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$89 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$89 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$89 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$89 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$89 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (> VV$35$$35$F$35$$35$80 0) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$80 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$80 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$80 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$80 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$80)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$80 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$80 (int_apply_$35$$35$1 fst VV$35$$35$3279))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= VV$35$$35$3176 newClusters$35$$35$a2le) (and (>= VV$35$$35$F$35$$35$36 0) (<= 0 VV$35$$35$F$35$$35$36) (> VV$35$$35$F$35$$35$36 0) (not (= VV$35$$35$F$35$$35$36 0))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$36 (int_apply_$35$$35$1 fst VV$35$$35$3180))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$36 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$36)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$36 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$36 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$36 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$36 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$36 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$36 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$36 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$36 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$36 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$36 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$36 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$36 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$36 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$36 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$36 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$36 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$36 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$36 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$36 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$36 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$36 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$36 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$36 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$36 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (not (= VV$35$$35$F$35$$35$43 0)) (> VV$35$$35$F$35$$35$43 0) (<= 0 VV$35$$35$F$35$$35$43) (>= VV$35$$35$F$35$$35$43 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$43 (int_apply_$35$$35$1 fst VV$35$$35$3195))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$43 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$43)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$43 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$43 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$43 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$43 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$43 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$43 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$43 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$43 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$43 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$43 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$43 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$43 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$43 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$43 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$43 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$43 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$43 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$43 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$43 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$43 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$43 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$43 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$43 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$43 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (not (= VV$35$$35$F$35$$35$53 0)) (> VV$35$$35$F$35$$35$53 0) (<= 0 VV$35$$35$F$35$$35$53) (>= VV$35$$35$F$35$$35$53 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$53 (int_apply_$35$$35$1 fst VV$35$$35$3215))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$53 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$53)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$53 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$53 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$53 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$53 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$53 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$53 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$53 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$53 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$53 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$53 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$53 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$53 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$53 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$53 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$53 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$53 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$53 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$53 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$53 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$53 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$53 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$53 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$53 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$53 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= lq_anf$36$$35$$35$d2sr ds_d2rs) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (and (not (= sz$35$$35$a2li 0)) (> sz$35$$35$a2li 0) (<= 0 sz$35$$35$a2li) (>= sz$35$$35$a2li 0)) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lj)) (= (int_apply_$35$$35$1 size p$35$$35$a2lj) n$35$$35$a2la)) (and (= lq_anf$36$$35$$35$d2sr ds_d2rs) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= lq_anf$36$$35$$35$d2sr (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 sz$35$$35$a2li p$35$$35$a2lj)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li)) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$60) n$35$$35$a2la) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$60))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0)) (= lq_anf$36$$35$$35$d2sr ds_d2rs)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$60 (int_apply_$35$$35$1 snd ds_d2rs))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$60) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$60) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$60) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$58)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$58) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$58) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$58) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$58) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$50) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (and (>= VV$35$$35$F$35$$35$68 0) (<= 0 VV$35$$35$F$35$$35$68) (> VV$35$$35$F$35$$35$68 0) (not (= VV$35$$35$F$35$$35$68 0))) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$68 (int_apply_$35$$35$1 fst VV$35$$35$3251))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$68 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$68)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$68 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$68 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$68 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$68 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$68 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$68 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$68 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$68 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$68 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$68 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$68 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$68 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$68 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$68 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$68 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$68 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$68 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$68 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$68 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$68 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$68 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$68 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$68 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$68 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$69)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$69) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$69 (int_apply_$35$$35$1 snd VV$35$$35$3251))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$69) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$69) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$69) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$73 lq_tmp$36$x$35$$35$2658)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$73 lq_tmp$36$x$35$$35$2658)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$73 lq_tmp$36$x$35$$35$2658)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$73 lq_tmp$36$x$35$$35$2658)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$73 lq_tmp$36$x$35$$35$2658)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$73 lq_tmp$36$x$35$$35$2658))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (and (>= VV$35$$35$F$35$$35$74 0) (<= 0 VV$35$$35$F$35$$35$74) (> VV$35$$35$F$35$$35$74 0) (not (= VV$35$$35$F$35$$35$74 0))) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$74 (int_apply_$35$$35$1 fst VV$35$$35$3265))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$74 (int_apply_$35$$35$1 fst lq_tmp$36$x$35$$35$2658))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$74 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$74)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$74 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$74 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$74 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$74 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$74 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$74 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$74 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$74 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$74 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$74 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$74 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$74 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$74 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$74 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$74 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$74 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$74 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$74 n$35$$35$a2la)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$74 k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$74 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$74 n$35$$35$a2la))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$74 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$74 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$74 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$75)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$75) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$75 (int_apply_$35$$35$1 snd lq_tmp$36$x$35$$35$2658))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$75 (int_apply_$35$$35$1 snd VV$35$$35$3265))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$75) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$75) k$35$$35$a2l9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$75) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= n$35$$35$a2kR 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= VV$35$$35$F$35$$35$157 lq_anf$36$$35$$35$d2sk) (= lq_anf$36$$35$$35$d2si ds_d2rq) (= lq_anf$36$$35$$35$d2si ds_d2rq) (> n1$35$$35$a2kS 0) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kT) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kT))) (and (= lq_anf$36$$35$$35$d2si ds_d2rq) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= lq_anf$36$$35$$35$d2si (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n1$35$$35$a2kS p1$35$$35$a2kT)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS)) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (> n2$35$$35$a2kU 0) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kV) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kV))) (and (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= lq_anf$36$$35$$35$d2sj (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n2$35$$35$a2kU p2$35$$35$a2kV)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU)) (= lq_anf$36$$35$$35$d2sk (+ n1$35$$35$a2kS n2$35$$35$a2kU)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2sm) (int_apply_$35$$35$1 size p1$35$$35$a2kT)) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2sm))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 (int_apply_$35$$35$1 fst ds_d2rr))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 (int_apply_$35$$35$1 fst ds_d2rq))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$157 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$157)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$157 n1$35$$35$a2kS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$157 n2$35$$35$a2kU)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$157 lq_anf$36$$35$$35$d2sk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$157 n$35$$35$a2kR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$157 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$157 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$157 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$157 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$157 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$157 n1$35$$35$a2kS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$157 n2$35$$35$a2kU)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$157 lq_anf$36$$35$$35$d2sk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$157 n$35$$35$a2kR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$157 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$157 n1$35$$35$a2kS)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$157 n2$35$$35$a2kU)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$157 lq_anf$36$$35$$35$d2sk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$157 n$35$$35$a2kR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$157 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$157 n1$35$$35$a2kS)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$157 n2$35$$35$a2kU)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$157 lq_anf$36$$35$$35$d2sk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$157 n$35$$35$a2kR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$157 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 n1$35$$35$a2kS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 n2$35$$35$a2kU)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 lq_anf$36$$35$$35$d2sk)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 n$35$$35$a2kR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$157 n1$35$$35$a2kS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$157 n2$35$$35$a2kU))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$157 lq_anf$36$$35$$35$d2sk))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$157 n$35$$35$a2kR))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$157 KMeans.test_nearest$35$$35$r1L1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= n$35$$35$a2kR 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2si ds_d2rq) (= lq_anf$36$$35$$35$d2si ds_d2rq) (> n1$35$$35$a2kS 0) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kT) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kT))) (and (= lq_anf$36$$35$$35$d2si ds_d2rq) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= lq_anf$36$$35$$35$d2si (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n1$35$$35$a2kS p1$35$$35$a2kT)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS)) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (and (= VV$35$$35$F$35$$35$153 lq_anf$36$$35$$35$d2sm) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$153))) (> n2$35$$35$a2kU 0) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kV) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kV))) (and (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= lq_anf$36$$35$$35$d2sj (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n2$35$$35$a2kU p2$35$$35$a2kV)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU)) (= lq_anf$36$$35$$35$d2sk (+ n1$35$$35$a2kS n2$35$$35$a2kU)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2sm) (int_apply_$35$$35$1 size p1$35$$35$a2kT)) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2sm))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$153 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$153 (int_apply_$35$$35$1 snd ds_d2rq))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$153 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$153 (int_apply_$35$$35$1 snd ds_d2rr))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$153) n$35$$35$a2kR)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$153) KMeans.test_nearest$35$$35$r1L1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$153) n1$35$$35$a2kS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$153) lq_anf$36$$35$$35$d2sk)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$153) n2$35$$35$a2kU)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$153 p2$35$$35$a2kV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$153 lq_anf$36$$35$$35$d2sm)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$153 p1$35$$35$a2kT)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$153 p2$35$$35$a2kV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$153 lq_anf$36$$35$$35$d2sm)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$153 p1$35$$35$a2kT)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$153 p2$35$$35$a2kV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$153 lq_anf$36$$35$$35$d2sm)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$153 p1$35$$35$a2kT)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$153 p2$35$$35$a2kV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$153 lq_anf$36$$35$$35$d2sm)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$153 p1$35$$35$a2kT)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$153 p2$35$$35$a2kV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$153 lq_anf$36$$35$$35$d2sm)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$153 p1$35$$35$a2kT)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$153 p2$35$$35$a2kV))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$153 lq_anf$36$$35$$35$d2sm))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$153 p1$35$$35$a2kT))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s7) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW)))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$257 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$257)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$257 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$257 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$257 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$257 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$257 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$257 lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$257 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s6)) (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s5)) (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s7) (>= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s7) (<= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s7) (<= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s6) (<= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s5) (= VV$35$$35$F$35$$35$190 0) (<= VV$35$$35$F$35$$35$190 0) (< VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s6) (< VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s5) (<= 0 VV$35$$35$F$35$$35$190) (>= VV$35$$35$F$35$$35$190 0)) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7)) (= VV$35$$35$3576 lq_anf$36$$35$$35$d2s8)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (int_apply_$35$$35$1 fst VV$35$$35$3576))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$190 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$190)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$190 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$190 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$190 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$190 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$190 lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$190 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2s8) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$189 lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s9) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$252 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$252 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$252)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$252 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$252 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$252 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$252 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$252 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$252 lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$252 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= VV$35$$35$3618 lq_anf$36$$35$$35$d2sa) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (and (= VV$35$$35$F$35$$35$214 1) (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s6)) (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s7)) (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s5)) (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s9) (>= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s7) (>= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s9) (> VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s7) (<= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s6) (<= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s9) (<= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s5) (not (= VV$35$$35$F$35$$35$214 0)) (> VV$35$$35$F$35$$35$214 0) (< VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s6) (< VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s5) (<= 0 VV$35$$35$F$35$$35$214) (>= VV$35$$35$F$35$$35$214 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (int_apply_$35$$35$1 fst VV$35$$35$3618))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$214 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$214)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$214 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$214 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$214 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$214 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$214 lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$214 1)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7)) (= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sa)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$213 lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2sb) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$247 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$247 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$247 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$247)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$247 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$247 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$247 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$247 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$247 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$247 lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$247 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (and (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s7)) (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s9)) (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s5)) (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s6) (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2sb) (>= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s6) (>= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s7) (>= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2sb) (>= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s9) (> VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s7) (> VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s9) (<= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s6) (<= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2sb) (<= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s5) (not (= VV$35$$35$F$35$$35$238 0)) (> VV$35$$35$F$35$$35$238 0) (< VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s5) (<= 0 VV$35$$35$F$35$$35$238) (>= VV$35$$35$F$35$$35$238 0)) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (= VV$35$$35$3660 lq_anf$36$$35$$35$d2sc) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (int_apply_$35$$35$1 fst VV$35$$35$3660))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$238 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$238)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$238 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$238 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$238 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$238 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$238 lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$238 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sc) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$237 lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$221 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$221 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$221 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$221 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$221 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$221)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$221 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$221 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$221 (int_apply_$35$$35$1 fst VV$35$$35$3633))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$219 lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$219 lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$219 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$219 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$219 lq_anf$36$$35$$35$d2sc)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (and (= VV$35$$35$3589 lq_anf$36$$35$$35$d2se) (>= (int_apply_$35$$35$1 len VV$35$$35$3589) 0)) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (and (<= VV$35$$35$3591 lq_anf$36$$35$$35$d2sc) (>= VV$35$$35$3591 lq_anf$36$$35$$35$d2sc) (= VV$35$$35$3591 lq_anf$36$$35$$35$d2sc) (not (= VV$35$$35$3591 lq_anf$36$$35$$35$d2sa)) (not (= VV$35$$35$3591 lq_anf$36$$35$$35$d2s8))) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (and (= VV$35$$35$F$35$$35$197 (int_apply_$35$$35$1 fst VV$35$$35$3591)) (= VV$35$$35$F$35$$35$197 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc)) (>= VV$35$$35$F$35$$35$197 0) (<= 0 VV$35$$35$F$35$$35$197) (< VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s5) (> VV$35$$35$F$35$$35$197 0) (= VV$35$$35$F$35$$35$197 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2sb)) (= VV$35$$35$F$35$$35$197 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s6)) (not (= VV$35$$35$F$35$$35$197 0)) (<= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2sb) (<= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s5) (<= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s6) (> VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s9) (> VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s7) (>= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2sb) (>= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s6) (>= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s9) (>= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s7) (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2sb) (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s6) (not (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s5)) (not (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s9)) (not (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s7))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$197 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$197 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$197 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$197 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$197 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$197 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$197 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$197)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$197 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$197 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$197 (int_apply_$35$$35$1 fst VV$35$$35$3591))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (and (= VV$35$$35$3589 lq_anf$36$$35$$35$d2se) (>= (int_apply_$35$$35$1 len VV$35$$35$3589) 0)) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (<= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2sc) (>= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2sc) (= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2sc) (not (= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2sa)) (not (= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2s8))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$195 lq_anf$36$$35$$35$d2sa)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (not (= VV$35$$35$3549 lq_anf$36$$35$$35$d2s8)) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= VV$35$$35$F$35$$35$173 (int_apply_$35$$35$1 fst VV$35$$35$3549)) (>= VV$35$$35$F$35$$35$173 0) (<= 0 VV$35$$35$F$35$$35$173) (< VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s5) (> VV$35$$35$F$35$$35$173 0) (not (= VV$35$$35$F$35$$35$173 0)) (<= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2sb) (<= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s5) (<= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s6) (> VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s7) (>= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s9) (>= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s7) (not (= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s5)) (not (= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s7))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7)) (and (= VV$35$$35$3547 lq_anf$36$$35$$35$d2sf) (>= (int_apply_$35$$35$1 len VV$35$$35$3547) 0))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$173 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$173 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$173 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$173 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$173 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$173)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$173 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$173 (int_apply_$35$$35$1 fst VV$35$$35$3549))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$173 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (not (= VV$35$$35$F$35$$35$171 lq_anf$36$$35$$35$d2s8)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7)) (and (= VV$35$$35$3547 lq_anf$36$$35$$35$d2sf) (>= (int_apply_$35$$35$1 len VV$35$$35$3547) 0))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$171 lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$171 lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$171 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$171 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$171 lq_anf$36$$35$$35$d2s8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (and (= VV$35$$35$F$35$$35$168 (int_apply_$35$$35$1 fst VV$35$$35$3520)) (>= VV$35$$35$F$35$$35$168 0) (<= 0 VV$35$$35$F$35$$35$168) (< VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s5) (<= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s6) (<= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s5) (<= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2sb) (>= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s7) (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s5))) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sg) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2sf) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s8) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7)) (and (= VV$35$$35$3518 lq_anf$36$$35$$35$d2sg) (>= (int_apply_$35$$35$1 len VV$35$$35$3518) 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$168 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$168)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$168 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 (+ (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$168 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$168 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$168 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s7))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2sb))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s9))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$168 lq_anf$36$$35$$35$d2s6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$168 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (= lq_anf$36$$35$$35$d2s1 0.00000) (and (= VV$35$$35$F$35$$35$253 p0$35$$35$a2kN) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$253))) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW)))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$253) lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$253) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$253) lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 p$35$$35$a2kQ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 p0$35$$35$a2kN))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 p1$35$$35$a2kO))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 p2$35$$35$a2kP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$253 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$191)) (and (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rS)) (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s0)) (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rZ)) (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s3)) (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rV)) (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rW)) (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rR)) (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s4)) (= VV$35$$35$F$35$$35$191 p0$35$$35$a2kN) (>= VV$35$$35$F$35$$35$191 p0$35$$35$a2kN) (<= VV$35$$35$F$35$$35$191 p0$35$$35$a2kN) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$191) lq_anf$36$$35$$35$d2s6))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7)) (= VV$35$$35$3576 lq_anf$36$$35$$35$d2s8)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 (int_apply_$35$$35$1 snd VV$35$$35$3576))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$191) lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$191) lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$191) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$191) lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$191) lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 p$35$$35$a2kQ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 p2$35$$35$a2kP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 p1$35$$35$a2kO))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 p0$35$$35$a2kN))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$191 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (and (= VV$35$$35$F$35$$35$248 p1$35$$35$a2kO) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$248))) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$248) lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$248) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$248) lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$248) lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 p$35$$35$a2kQ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 p2$35$$35$a2kP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 p0$35$$35$a2kN))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 p1$35$$35$a2kO))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$248 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$215)) (and (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rW)) (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rV)) (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rZ)) (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s3)) (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s0)) (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rS)) (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s4)) (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rR)) (= VV$35$$35$F$35$$35$215 p1$35$$35$a2kO) (>= VV$35$$35$F$35$$35$215 p1$35$$35$a2kO) (<= VV$35$$35$F$35$$35$215 p1$35$$35$a2kO) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$215) lq_anf$36$$35$$35$d2s6))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= VV$35$$35$3618 lq_anf$36$$35$$35$d2sa) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 (int_apply_$35$$35$1 snd VV$35$$35$3618))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$215) lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$215) lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$215) lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$215) lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$215) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 p2$35$$35$a2kP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 p1$35$$35$a2kO))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 p0$35$$35$a2kN))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 p$35$$35$a2kQ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$215 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= VV$35$$35$F$35$$35$243 p2$35$$35$a2kP) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$243))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$243) lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$243) lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$243) lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$243) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$243) lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$243 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$243 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$243 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$243 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$243 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 p2$35$$35$a2kP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 p$35$$35$a2kQ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 p0$35$$35$a2kN))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$243 p1$35$$35$a2kO))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$239)) (and (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rR)) (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s0)) (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rS)) (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rV)) (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s4)) (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rW)) (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rZ)) (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s3)) (= VV$35$$35$F$35$$35$239 p2$35$$35$a2kP) (>= VV$35$$35$F$35$$35$239 p2$35$$35$a2kP) (<= VV$35$$35$F$35$$35$239 p2$35$$35$a2kP) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$239) lq_anf$36$$35$$35$d2s6) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$239) lq_anf$36$$35$$35$d2sb))) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (= VV$35$$35$3660 lq_anf$36$$35$$35$d2sc) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 (int_apply_$35$$35$1 snd VV$35$$35$3660))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$239) lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$239) lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$239) lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$239) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$239) lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 p$35$$35$a2kQ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 p1$35$$35$a2kO))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 p0$35$$35$a2kN))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 p2$35$$35$a2kP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$239 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert false)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$223 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$223 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$223 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$223 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$223) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$223) lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$223 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$223 (int_apply_$35$$35$1 snd VV$35$$35$3633))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$199)) (and (= VV$35$$35$F$35$$35$199 (int_apply_$35$$35$1 snd VV$35$$35$3591)) (= VV$35$$35$F$35$$35$199 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$199) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$199) lq_anf$36$$35$$35$d2s6) (<= VV$35$$35$F$35$$35$199 p2$35$$35$a2kP) (>= VV$35$$35$F$35$$35$199 p2$35$$35$a2kP) (= VV$35$$35$F$35$$35$199 p2$35$$35$a2kP) (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2s4)) (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rR)) (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rW)) (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rV)) (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2s3)) (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rZ)) (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2s0)) (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rS)))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (and (= VV$35$$35$3589 lq_anf$36$$35$$35$d2se) (>= (int_apply_$35$$35$1 len VV$35$$35$3589) 0)) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (and (<= VV$35$$35$3591 lq_anf$36$$35$$35$d2sc) (>= VV$35$$35$3591 lq_anf$36$$35$$35$d2sc) (= VV$35$$35$3591 lq_anf$36$$35$$35$d2sc) (not (= VV$35$$35$3591 lq_anf$36$$35$$35$d2sa)) (not (= VV$35$$35$3591 lq_anf$36$$35$$35$d2s8))) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$199 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$199 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$199 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$199 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$199) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$199) lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$199 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$199 (int_apply_$35$$35$1 snd VV$35$$35$3591))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (not (= VV$35$$35$3549 lq_anf$36$$35$$35$d2s8)) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$175)) (and (= VV$35$$35$F$35$$35$175 (int_apply_$35$$35$1 snd VV$35$$35$3549)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$175) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$175) lq_anf$36$$35$$35$d2s6) (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2s4)) (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rZ)) (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2s3)) (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rW)) (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2s0)) (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rV)) (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rS)) (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rR)))) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7)) (and (= VV$35$$35$3547 lq_anf$36$$35$$35$d2sf) (>= (int_apply_$35$$35$1 len VV$35$$35$3547) 0))))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$175 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$175 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$175 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$175 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$175) lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$175) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$175 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$175 (int_apply_$35$$35$1 snd VV$35$$35$3549))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$169)) (and (= VV$35$$35$F$35$$35$169 (int_apply_$35$$35$1 snd VV$35$$35$3520)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$169) lq_anf$36$$35$$35$d2s6) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$169) lq_anf$36$$35$$35$d2sb) (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rW)) (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rR)) (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s0)) (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rS)) (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s3)) (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rZ)) (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rV)) (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s4)))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sg) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2sf) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s8) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7)) (and (= VV$35$$35$3518 lq_anf$36$$35$$35$d2sg) (>= (int_apply_$35$$35$1 len VV$35$$35$3518) 0))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$169) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$169) lq_anf$36$$35$$35$d2s7)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$169) lq_anf$36$$35$$35$d2s5)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$169) lq_anf$36$$35$$35$d2sb)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$169) lq_anf$36$$35$$35$d2s9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 p0$35$$35$a2kN)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 p1$35$$35$a2kO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s3)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rZ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 p2$35$$35$a2kP)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rS)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s4)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rR)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 p$35$$35$a2kQ)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rW)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rV)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 p0$35$$35$a2kN))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 p1$35$$35$a2kO))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s3))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rZ))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 p2$35$$35$a2kP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rS))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2s4))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rR))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 p$35$$35$a2kQ))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rW))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$169 lq_anf$36$$35$$35$d2rV))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (= VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$d2rO) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$d2rO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$d2rO)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$d2rO)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$d2rO)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$d2rO)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$d2rO))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= VV$35$$35$F$35$$35$278 lq_anf$36$$35$$35$d2rO) (>= VV$35$$35$F$35$$35$278 lq_anf$36$$35$$35$d2rO) (<= VV$35$$35$F$35$$35$278 lq_anf$36$$35$$35$d2rO)) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= (int_apply_$35$$35$1 len VV$35$$35$3875) 0) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (>= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$314) 0)))
(push 1)
(assert (not (= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$314) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$314) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$314) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len VV$35$$35$3884) 0) (>= (int_apply_$35$$35$1 len VV$35$$35$3884) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$332) 0) (>= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$332) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$332) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$332) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$332) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= VV$35$$35$3901 xs$35$$35$a2kK) (>= (int_apply_$35$$35$1 len VV$35$$35$3901) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0) (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (and (<= 0 VV$35$$35$F$35$$35$284) (< VV$35$$35$F$35$$35$284 k$35$$35$a2kF)) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (= VV$35$$35$3782 centers$35$$35$a2kH) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$284 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$284)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$284 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$284 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$284 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$284 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$284 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$284 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$284 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$284 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$284 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$284 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$284 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$284 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$284 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$284 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$284 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$284 k$35$$35$a2kF))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$284 n$35$$35$a2kG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$284 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (= VV$35$$35$3767 lq_anf$36$$35$$35$d2rO) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (and (not (= VV$35$$35$F$35$$35$276 k$35$$35$a2kF)) (<= VV$35$$35$F$35$$35$276 k$35$$35$a2kF) (< VV$35$$35$F$35$$35$276 k$35$$35$a2kF) (<= 0 VV$35$$35$F$35$$35$276) (>= VV$35$$35$F$35$$35$276 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$276 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$276)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$276 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$276 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$276 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$276 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$276 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$276 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$276 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$276 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$276 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$276 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$276 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$276 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$276 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$276 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$276 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$276 n$35$$35$a2kG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$276 k$35$$35$a2kF))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$276 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (and (= VV$35$$35$3773 lq_anf$36$$35$$35$d2rO) (>= VV$35$$35$3773 lq_anf$36$$35$$35$d2rO) (<= VV$35$$35$3773 lq_anf$36$$35$$35$d2rO)) (and (not (= VV$35$$35$F$35$$35$280 k$35$$35$a2kF)) (<= VV$35$$35$F$35$$35$280 k$35$$35$a2kF) (< VV$35$$35$F$35$$35$280 k$35$$35$a2kF) (<= 0 VV$35$$35$F$35$$35$280) (>= VV$35$$35$F$35$$35$280 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= (int_apply_$35$$35$1 len VV$35$$35$3875) 0) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$318 (int_apply_$35$$35$1 fst VV$35$$35$3877))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len VV$35$$35$3884) 0) (>= (int_apply_$35$$35$1 len VV$35$$35$3884) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$335 (int_apply_$35$$35$1 fst VV$35$$35$3886))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= VV$35$$35$3901 xs$35$$35$a2kK) (>= (int_apply_$35$$35$1 len VV$35$$35$3901) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0) (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$356 (int_apply_$35$$35$1 fst VV$35$$35$3903))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0) (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0)) (= VV$35$$35$3894 lq_anf$36$$35$$35$d2ry) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$349 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2ry))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$349 (int_apply_$35$$35$1 fst VV$35$$35$3894))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= VV$35$$35$F$35$$35$348 lq_anf$36$$35$$35$d2ry) (and (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0) (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$348 lq_anf$36$$35$$35$d2ry)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$348 lq_anf$36$$35$$35$d2ry)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$348 lq_anf$36$$35$$35$d2ry)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$348 lq_anf$36$$35$$35$d2ry)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$348 lq_anf$36$$35$$35$d2ry)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$348 lq_anf$36$$35$$35$d2ry))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0) (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0)) (and (= VV$35$$35$3897 lq_anf$36$$35$$35$d2ry) (>= VV$35$$35$3897 lq_anf$36$$35$$35$d2ry) (<= VV$35$$35$3897 lq_anf$36$$35$$35$d2ry)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0) (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= lq_tmp$36$x$35$$35$946 lq_anf$36$$35$$35$d2ry) (>= lq_tmp$36$x$35$$35$946 lq_anf$36$$35$$35$d2ry) (<= lq_tmp$36$x$35$$35$946 lq_anf$36$$35$$35$d2ry))))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$354 (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2ry))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0) (>= (int_apply_$35$$35$1 len xs$35$$35$a2kK) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len VV$35$$35$3884) 0) (>= (int_apply_$35$$35$1 len VV$35$$35$3884) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len ycmp) 0) (>= (int_apply_$35$$35$1 len ycmp) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len ycmp) 0) (>= (int_apply_$35$$35$1 len ycmp) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$315) 0) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$315) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$315) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (int_apply_$35$$35$1 len VV$35$$35$F$35$$35$315) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (>= (int_apply_$35$$35$1 len wcmp) 0) (>= (int_apply_$35$$35$1 len wcmp) 0) (>= (int_apply_$35$$35$1 len wcmp) 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (and (= VV$35$$35$3773 lq_anf$36$$35$$35$d2rO) (>= VV$35$$35$3773 lq_anf$36$$35$$35$d2rO) (<= VV$35$$35$3773 lq_anf$36$$35$$35$d2rO)) (and (not (= VV$35$$35$F$35$$35$279 k$35$$35$a2kF)) (<= VV$35$$35$F$35$$35$279 k$35$$35$a2kF) (< VV$35$$35$F$35$$35$279 k$35$$35$a2kF) (<= 0 VV$35$$35$F$35$$35$279) (>= VV$35$$35$F$35$$35$279 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$279 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$279)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$279 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$279 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$279 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$279 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$279 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$279 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$279 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$279 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$279 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$279 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$279 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$279 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$279 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$279 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$279 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$279 n$35$$35$a2kG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$279 k$35$$35$a2kF))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$279 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (and (not (= VV$35$$35$F$35$$35$283 k$35$$35$a2kF)) (<= VV$35$$35$F$35$$35$283 k$35$$35$a2kF) (< VV$35$$35$F$35$$35$283 k$35$$35$a2kF) (<= 0 VV$35$$35$F$35$$35$283) (>= VV$35$$35$F$35$$35$283 0)) (and (= lq_tmp$36$x$35$$35$1437 lq_anf$36$$35$$35$d2rO) (>= lq_tmp$36$x$35$$35$1437 lq_anf$36$$35$$35$d2rO) (<= lq_tmp$36$x$35$$35$1437 lq_anf$36$$35$$35$d2rO)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$283 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (<= 0 VV$35$$35$F$35$$35$283)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$283 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$283 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$283 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$283 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$283 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$283 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$283 0))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$283 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$283 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$283 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$283 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$283 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$283 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$283 n$35$$35$a2kG)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$283 k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$283 n$35$$35$a2kG))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$283 k$35$$35$a2kF))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$283 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (= VV$35$$35$3782 centers$35$$35$a2kH) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$285) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$285))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$285) k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$285) n$35$$35$a2kG)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$285 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$285 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$285 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$285 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$285 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$285 p$35$$35$a2kI))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$287)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$287) n$35$$35$a2kG)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$287) k$35$$35$a2kF)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$287) n$35$$35$a2kG)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$287 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$287 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$287 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$287 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$287 p$35$$35$a2kI)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$287 p$35$$35$a2kI))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2kW 0) (and (= VV$35$$35$3932 p$35$$35$a2kX) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3932))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kX) n$35$$35$a2kW) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kX))) (and (>= sz$35$$35$a2kY 0) (> sz$35$$35$a2kY 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2kW 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kX) n$35$$35$a2kW) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kX))) (and (>= sz$35$$35$a2kY 0) (> sz$35$$35$a2kY 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (and (= VV$35$$35$3147 ps$35$$35$a2l3) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$3147))) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$16) n$35$$35$a2l2) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$16))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$16) n$35$$35$a2l2)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= lq_anf$36$$35$$35$d2sr ds_d2rs) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (= VV$35$$35$F$35$$35$64 n$35$$35$a2la) (and (not (= sz$35$$35$a2li 0)) (> sz$35$$35$a2li 0) (<= 0 sz$35$$35$a2li) (>= sz$35$$35$a2li 0)) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lj)) (= (int_apply_$35$$35$1 size p$35$$35$a2lj) n$35$$35$a2la)) (and (= lq_anf$36$$35$$35$d2sr ds_d2rs) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= lq_anf$36$$35$$35$d2sr (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 sz$35$$35$a2li p$35$$35$a2lj)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0)) (= lq_anf$36$$35$$35$d2sr ds_d2rs)))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$64 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (= VV$35$$35$F$35$$35$144 n$35$$35$a2la) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$144 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (= VV$35$$35$F$35$$35$17 n$35$$35$a2l2) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$17 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= VV$35$$35$F$35$$35$145 k$35$$35$a2l9) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$145 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (= VV$35$$35$F$35$$35$18 k$35$$35$a2l1) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$18 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (not (= VV$35$$35$F$35$$35$274 k$35$$35$a2kF)) (<= VV$35$$35$F$35$$35$274 k$35$$35$a2kF) (< VV$35$$35$F$35$$35$274 k$35$$35$a2kF) (<= 0 VV$35$$35$F$35$$35$274) (>= VV$35$$35$F$35$$35$274 0)) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (and (<= 0 VV$35$$35$F$35$$35$274) (< VV$35$$35$F$35$$35$274 k$35$$35$a2kF))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (and (<= 0 (int_apply_$35$$35$1 size x$35$$35$a2kJ)) (= (int_apply_$35$$35$1 size x$35$$35$a2kJ) n$35$$35$a2kG)) (and (= VV$35$$35$F$35$$35$290 x$35$$35$a2kJ) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$290))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$290) n$35$$35$a2kG)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (= VV$35$$35$3433 wp2$35$$35$a2lm) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (not (= VV$35$$35$F$35$$35$146 0)) (> VV$35$$35$F$35$$35$146 0) (<= 0 VV$35$$35$F$35$$35$146) (>= VV$35$$35$F$35$$35$146 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (> VV$35$$35$F$35$$35$146 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (and (<= 0 (int_apply_$35$$35$1 size x$35$$35$a2kJ)) (= (int_apply_$35$$35$1 size x$35$$35$a2kJ) n$35$$35$a2kG)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= VV$35$$35$F$35$$35$291 p$35$$35$a2kI) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$291)))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$291) n$35$$35$a2kG)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (= VV$35$$35$3433 wp2$35$$35$a2lm) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$147)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$147) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$147) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (and (= VV$35$$35$F$35$$35$163 p$35$$35$a2kQ) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$163))) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sg) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2sf) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s8) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$163) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= k$35$$35$a2kF 0) (>= n$35$$35$a2kG 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kI) n$35$$35$a2kG) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kI))) (and (<= 0 (int_apply_$35$$35$1 size x$35$$35$a2kJ)) (= (int_apply_$35$$35$1 size x$35$$35$a2kJ) n$35$$35$a2kG)) (= VV$35$$35$F$35$$35$292 n$35$$35$a2kG) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$292 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (not (= VV$35$$35$F$35$$35$148 0)) (> VV$35$$35$F$35$$35$148 0) (<= 0 VV$35$$35$F$35$$35$148) (>= VV$35$$35$F$35$$35$148 0)) (= VV$35$$35$3446 wp1$35$$35$a2ll) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (> VV$35$$35$F$35$$35$148 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (not (= VV$35$$35$F$35$$35$164 lq_anf$36$$35$$35$d2s5)) (>= VV$35$$35$F$35$$35$164 lq_anf$36$$35$$35$d2s7) (<= VV$35$$35$F$35$$35$164 lq_anf$36$$35$$35$d2s6) (<= VV$35$$35$F$35$$35$164 lq_anf$36$$35$$35$d2s5) (<= VV$35$$35$F$35$$35$164 lq_anf$36$$35$$35$d2sb) (< VV$35$$35$F$35$$35$164 lq_anf$36$$35$$35$d2s5) (<= 0 VV$35$$35$F$35$$35$164) (>= VV$35$$35$F$35$$35$164 0)) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (= VV$35$$35$3506 lq_anf$36$$35$$35$d2sh) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sg) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2sf) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s8) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (and (<= 0 VV$35$$35$F$35$$35$164) (< VV$35$$35$F$35$$35$164 lq_anf$36$$35$$35$d2s5))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= VV$35$$35$3446 wp1$35$$35$a2ll) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$149)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$149) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$149) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (= VV$35$$35$3506 lq_anf$36$$35$$35$d2sh) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sg) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2sf) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s8) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) 0)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$165)) (and (not (= VV$35$$35$F$35$$35$165 lq_anf$36$$35$$35$d2rV)) (not (= VV$35$$35$F$35$$35$165 lq_anf$36$$35$$35$d2rW)) (not (= VV$35$$35$F$35$$35$165 lq_anf$36$$35$$35$d2rR)) (not (= VV$35$$35$F$35$$35$165 lq_anf$36$$35$$35$d2s4)) (not (= VV$35$$35$F$35$$35$165 lq_anf$36$$35$$35$d2rS)) (not (= VV$35$$35$F$35$$35$165 lq_anf$36$$35$$35$d2s0)) (not (= VV$35$$35$F$35$$35$165 lq_anf$36$$35$$35$d2rZ)) (not (= VV$35$$35$F$35$$35$165 lq_anf$36$$35$$35$d2s3)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$165) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$165) lq_anf$36$$35$$35$d2s6))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$165) lq_anf$36$$35$$35$d2s6)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (>= VV$35$$35$F$35$$35$6 0) (<= 0 VV$35$$35$F$35$$35$6) (< VV$35$$35$F$35$$35$6 k$35$$35$a2l1) (<= VV$35$$35$F$35$$35$6 k$35$$35$a2l1) (not (= VV$35$$35$F$35$$35$6 k$35$$35$a2l1))) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (and (<= 0 VV$35$$35$F$35$$35$6) (< VV$35$$35$F$35$$35$6 k$35$$35$a2l1))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2kW 0) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$374) (int_apply_$35$$35$1 size p$35$$35$a2kX)) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$374))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kX) n$35$$35$a2kW) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kX))) (and (>= sz$35$$35$a2kY 0) (> sz$35$$35$a2kY 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$374) n$35$$35$a2kW)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (= VV$35$$35$F$35$$35$150 n$35$$35$a2la) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$150 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= VV$35$$35$F$35$$35$166 lq_anf$36$$35$$35$d2s6) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sg) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2sf) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s8) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$166 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$7)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$7) n$35$$35$a2l2)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$7) n$35$$35$a2l2)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= n$35$$35$a2kR 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= (int_apply_$35$$35$1 snd VV$35$$35$3461) lq_anf$36$$35$$35$d2sm) (= (int_apply_$35$$35$1 fst VV$35$$35$3461) lq_anf$36$$35$$35$d2sk) (= (int_apply_$35$$35$1 x_Tuple22 VV$35$$35$3461) lq_anf$36$$35$$35$d2sm) (= (int_apply_$35$$35$1 x_Tuple21 VV$35$$35$3461) lq_anf$36$$35$$35$d2sk)) (and (not (= VV$35$$35$F$35$$35$151 n2$35$$35$a2kU)) (not (= VV$35$$35$F$35$$35$151 n1$35$$35$a2kS)) (= VV$35$$35$F$35$$35$151 lq_anf$36$$35$$35$d2sk) (>= VV$35$$35$F$35$$35$151 lq_anf$36$$35$$35$d2sk) (>= VV$35$$35$F$35$$35$151 n2$35$$35$a2kU) (>= VV$35$$35$F$35$$35$151 n1$35$$35$a2kS) (> VV$35$$35$F$35$$35$151 n2$35$$35$a2kU) (> VV$35$$35$F$35$$35$151 n1$35$$35$a2kS) (<= VV$35$$35$F$35$$35$151 lq_anf$36$$35$$35$d2sk) (not (= VV$35$$35$F$35$$35$151 0)) (> VV$35$$35$F$35$$35$151 0) (<= 0 VV$35$$35$F$35$$35$151) (>= VV$35$$35$F$35$$35$151 0)) (= lq_anf$36$$35$$35$d2si ds_d2rq) (= lq_anf$36$$35$$35$d2si ds_d2rq) (> n1$35$$35$a2kS 0) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kT) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kT))) (and (= lq_anf$36$$35$$35$d2si ds_d2rq) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= lq_anf$36$$35$$35$d2si (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n1$35$$35$a2kS p1$35$$35$a2kT)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS)) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (> n2$35$$35$a2kU 0) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kV) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kV))) (and (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= lq_anf$36$$35$$35$d2sj (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n2$35$$35$a2kU p2$35$$35$a2kV)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU)) (= lq_anf$36$$35$$35$d2sk (+ n1$35$$35$a2kS n2$35$$35$a2kU)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2sm) (int_apply_$35$$35$1 size p1$35$$35$a2kT)) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2sm))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (> VV$35$$35$F$35$$35$151 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kP) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kP))) (= lq_anf$36$$35$$35$d2s9 1) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2rX 3.00000) (= lq_anf$36$$35$$35$d2rY 0.00000) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sa) p1$35$$35$a2kO) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sa) lq_anf$36$$35$$35$d2s9)) (= VV$35$$35$F$35$$35$167 lq_anf$36$$35$$35$d2s5) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (= lq_anf$36$$35$$35$d2sb 2) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rZ))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kO) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s0))) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kO))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sc) p2$35$$35$a2kP) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sc) lq_anf$36$$35$$35$d2sb)) (= lq_anf$36$$35$$35$d2s1 0.00000) (= lq_anf$36$$35$$35$d2rP 2.90000) (= lq_anf$36$$35$$35$d2s2 0.00000) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sd) true) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd) 0)) (= lq_anf$36$$35$$35$d2rQ 1.10000) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s3))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sd))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2se) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sd) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2se) lq_anf$36$$35$$35$d2sc) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rR))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (and (= (int_apply_$35$$35$1 size p0$35$$35$a2kN) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2s4))) (<= 0 (int_apply_$35$$35$1 size p0$35$$35$a2kN))) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kQ) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rS))) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kQ))) (= lq_anf$36$$35$$35$d2s5 3) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2se))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sf) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2se) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sf) lq_anf$36$$35$$35$d2sa) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf) 0)) (= lq_anf$36$$35$$35$d2rT 0.00000) (= lq_anf$36$$35$$35$d2s6 2) (= lq_anf$36$$35$$35$d2rU 3.00000) (= lq_anf$36$$35$$35$d2s7 0) (and (= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) (+ 1 (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sf))) (= (bool_apply_$35$$35$1 null lq_anf$36$$35$$35$d2sg) false) (= (int_apply_$35$$35$1 xsListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2sf) (= (int_apply_$35$$35$1 xListSelector lq_anf$36$$35$$35$d2sg) lq_anf$36$$35$$35$d2s8) (>= (int_apply_$35$$35$1 len lq_anf$36$$35$$35$d2sg) 0)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV) 0) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW) (+ 1 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rV))) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2rW))) (and (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2s8) p0$35$$35$a2kN) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2s8) lq_anf$36$$35$$35$d2s7))))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$167 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (and (>= VV$35$$35$F$35$$35$8 0) (<= 0 VV$35$$35$F$35$$35$8) (< VV$35$$35$F$35$$35$8 k$35$$35$a2l1) (<= VV$35$$35$F$35$$35$8 k$35$$35$a2l1) (not (= VV$35$$35$F$35$$35$8 k$35$$35$a2l1))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (and (<= 0 VV$35$$35$F$35$$35$8) (< VV$35$$35$F$35$$35$8 k$35$$35$a2l1))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= n$35$$35$a2kR 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (and (= (int_apply_$35$$35$1 snd VV$35$$35$3461) lq_anf$36$$35$$35$d2sm) (= (int_apply_$35$$35$1 fst VV$35$$35$3461) lq_anf$36$$35$$35$d2sk) (= (int_apply_$35$$35$1 x_Tuple22 VV$35$$35$3461) lq_anf$36$$35$$35$d2sm) (= (int_apply_$35$$35$1 x_Tuple21 VV$35$$35$3461) lq_anf$36$$35$$35$d2sk)) (= lq_anf$36$$35$$35$d2si ds_d2rq) (= lq_anf$36$$35$$35$d2si ds_d2rq) (> n1$35$$35$a2kS 0) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kT) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kT))) (and (= lq_anf$36$$35$$35$d2si ds_d2rq) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= lq_anf$36$$35$$35$d2si (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n1$35$$35$a2kS p1$35$$35$a2kT)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS)) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (> n2$35$$35$a2kU 0) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kV) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kV))) (and (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= lq_anf$36$$35$$35$d2sj (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n2$35$$35$a2kU p2$35$$35$a2kV)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU)) (= lq_anf$36$$35$$35$d2sk (+ n1$35$$35$a2kS n2$35$$35$a2kU)) (and (= (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2sm) (int_apply_$35$$35$1 size p1$35$$35$a2kT)) (<= 0 (int_apply_$35$$35$1 size lq_anf$36$$35$$35$d2sm))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$152)) (and (= VV$35$$35$F$35$$35$152 lq_anf$36$$35$$35$d2sm) (>= VV$35$$35$F$35$$35$152 lq_anf$36$$35$$35$d2sm) (<= VV$35$$35$F$35$$35$152 lq_anf$36$$35$$35$d2sm) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$152) n$35$$35$a2kR)))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$152) n$35$$35$a2kR)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= steps$35$$35$a2l0 0) (>= k$35$$35$a2l1 0) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$9)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$9) n$35$$35$a2l2)) (>= n$35$$35$a2l2 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2l3)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$9) n$35$$35$a2l2)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= VV$35$$35$F$35$$35$378 sz$35$$35$a2kY) (>= n$35$$35$a2kW 0) (and (= (int_apply_$35$$35$1 size p$35$$35$a2kX) n$35$$35$a2kW) (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2kX))) (and (>= sz$35$$35$a2kY 0) (> sz$35$$35$a2kY 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$378 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2kA 0) (and (= (int_apply_$35$$35$1 size px$35$$35$a2kB) n$35$$35$a2kA) (<= 0 (int_apply_$35$$35$1 size px$35$$35$a2kB))) (and (= (int_apply_$35$$35$1 size py$35$$35$a2kC) n$35$$35$a2kA) (<= 0 (int_apply_$35$$35$1 size py$35$$35$a2kC))) (= lq_anf$36$$35$$35$d2rD 0.00000) (and (= VV$35$$35$F$35$$35$299 py$35$$35$a2kC) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$299))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W)))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$299) (int_apply_$35$$35$1 size px$35$$35$a2kB))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (and (= VV$35$$35$F$35$$35$141 p$35$$35$a2lk) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$141))) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$141) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (not (= VV$35$$35$F$35$$35$30 k$35$$35$a2l9)) (<= VV$35$$35$F$35$$35$30 k$35$$35$a2l9) (< VV$35$$35$F$35$$35$30 k$35$$35$a2l9) (<= 0 VV$35$$35$F$35$$35$30) (>= VV$35$$35$F$35$$35$30 0)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (and (<= 0 VV$35$$35$F$35$$35$30) (< VV$35$$35$F$35$$35$30 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= lq_anf$36$$35$$35$d2sr ds_d2rs) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (and (not (= sz$35$$35$a2li 0)) (> sz$35$$35$a2li 0) (<= 0 sz$35$$35$a2li) (>= sz$35$$35$a2li 0)) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lj)) (= (int_apply_$35$$35$1 size p$35$$35$a2lj) n$35$$35$a2la)) (and (= lq_anf$36$$35$$35$d2sr ds_d2rs) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= lq_anf$36$$35$$35$d2sr (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 sz$35$$35$a2li p$35$$35$a2lj)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li)) (= VV$35$$35$F$35$$35$62 sz$35$$35$a2li) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0)) (= lq_anf$36$$35$$35$d2sr ds_d2rs)))
(push 1)
(assert (not (and (>= VV$35$$35$F$35$$35$62 0) (> VV$35$$35$F$35$$35$62 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (= VV$35$$35$3421 cs$35$$35$a2lc) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 VV$35$$35$F$35$$35$142) (< VV$35$$35$F$35$$35$142 k$35$$35$a2l9)) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (and (<= 0 VV$35$$35$F$35$$35$142) (< VV$35$$35$F$35$$35$142 k$35$$35$a2l9))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (and (= VV$35$$35$F$35$$35$158 p2$35$$35$a2kV) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$158))) (>= n$35$$35$a2kR 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (= lq_anf$36$$35$$35$d2si ds_d2rq) (= lq_anf$36$$35$$35$d2si ds_d2rq) (> n1$35$$35$a2kS 0) (and (= (int_apply_$35$$35$1 size p1$35$$35$a2kT) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p1$35$$35$a2kT))) (and (= lq_anf$36$$35$$35$d2si ds_d2rq) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= lq_anf$36$$35$$35$d2si (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n1$35$$35$a2kS p1$35$$35$a2kT)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2si) p1$35$$35$a2kT) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2si) n1$35$$35$a2kS)) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= lq_anf$36$$35$$35$d2sj ds_d2rr) (> n2$35$$35$a2kU 0) (and (= (int_apply_$35$$35$1 size p2$35$$35$a2kV) n$35$$35$a2kR) (<= 0 (int_apply_$35$$35$1 size p2$35$$35$a2kV))) (and (= lq_anf$36$$35$$35$d2sj ds_d2rr) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= lq_anf$36$$35$$35$d2sj (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 n2$35$$35$a2kU p2$35$$35$a2kV)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sj) p2$35$$35$a2kV) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sj) n2$35$$35$a2kU)) (= lq_anf$36$$35$$35$d2sk (+ n1$35$$35$a2kS n2$35$$35$a2kU)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$158) (int_apply_$35$$35$1 size p1$35$$35$a2kT))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$31)) (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$31) n$35$$35$a2la)) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$31) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= lq_anf$36$$35$$35$d2sr ds_d2rs) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (and (not (= sz$35$$35$a2li 0)) (> sz$35$$35$a2li 0) (<= 0 sz$35$$35$a2li) (>= sz$35$$35$a2li 0)) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lj)) (= (int_apply_$35$$35$1 size p$35$$35$a2lj) n$35$$35$a2la)) (and (= lq_anf$36$$35$$35$d2sr ds_d2rs) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= lq_anf$36$$35$$35$d2sr (int_apply_$35$$35$2 GHC.Tuple.$40$$44$$41$$35$$35$74 sz$35$$35$a2li p$35$$35$a2lj)) (= (int_apply_$35$$35$1 snd lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 fst lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li) (= (int_apply_$35$$35$1 x_Tuple22 lq_anf$36$$35$$35$d2sr) p$35$$35$a2lj) (= (int_apply_$35$$35$1 x_Tuple21 lq_anf$36$$35$$35$d2sr) sz$35$$35$a2li)) (and (= VV$35$$35$F$35$$35$63 p$35$$35$a2lj) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$63))) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0)) (= lq_anf$36$$35$$35$d2sr ds_d2rs)))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$63) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (int_apply_$35$$35$1 cmp GHC.Types.LT$35$$35$6S) GHC.Types.LT$35$$35$6S) (>= k$35$$35$a2l9 0) (= (int_apply_$35$$35$1 cmp GHC.Types.EQ$35$$35$6U) GHC.Types.EQ$35$$35$6U) (>= n$35$$35$a2la 0) (<= 0 (int_apply_$35$$35$1 size ps$35$$35$a2lb)) (and (<= 0 (int_apply_$35$$35$1 size p$35$$35$a2lk)) (= (int_apply_$35$$35$1 size p$35$$35$a2lk) n$35$$35$a2la)) (and (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$143) n$35$$35$a2la) (<= 0 (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$143))) (= VV$35$$35$3421 cs$35$$35$a2lc) (= (int_apply_$35$$35$1 cmp GHC.Types.GT$35$$35$6W) GHC.Types.GT$35$$35$6W) (and (<= 0 KMeans.test_nearest$35$$35$r1L1) (>= KMeans.test_nearest$35$$35$r1L1 0))))
(push 1)
(assert (not (= (int_apply_$35$$35$1 size VV$35$$35$F$35$$35$143) n$35$$35$a2la)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(exit)
